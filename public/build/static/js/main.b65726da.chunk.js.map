{"version":3,"sources":["components/atoms/button/Rating.tsx","theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/home/post/PostCard.tsx","client/apiClient.ts","components/organisms/LoadingPageSpinner.tsx","components/pages/home/Recent.tsx","hooks/api/useApiPosts.ts","components/atoms/color/gradationGreen.ts","components/organisms/MusicDetailBox.tsx","components/molecules/post_detail/ReactionButtons.tsx","components/organisms/detail/DetailBox.tsx","components/pages/home/detail/PostDetail.tsx","hooks/api/useApiPostDetail.ts","components/organisms/home/Alert404.tsx","components/pages/home/detail/Detail404.tsx","components/molecules/create/CreateBreadcrumb.tsx","components/atoms/button/GoButton.tsx","components/organisms/create/CreateTrackInfo.tsx","components/atoms/button/BackButton.tsx","components/organisms/create/CreateRate.tsx","components/organisms/create/CreateCheck.tsx","components/pages/create/Create.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/home/HomePostBox.tsx","store/loginState.ts","hooks/api/useApiMe.ts","hooks/message/useMessage.ts","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","hooks/login/useLogout.ts","components/organisms/home/MenuDrawer.tsx","components/organisms/home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Page404.tsx","hooks/login/useLogin.ts","components/molecules/LoginForm.tsx","components/pages/Login.tsx","hooks/login/useRegister.ts","router/Router.tsx","App.tsx","index.tsx"],"names":["rating_stars","theme","extendTheme","styles","global","body","backgroundColor","color","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","i","LikeButton","value","icon","size","bg","ml","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","apiClient","axios","create","baseURL","withCredentials","LoadingPageSpinner","thickness","speed","emptyColor","Recent","useSetRecoilState","setTopic","sort","useState","api_posts","setApiPosts","loading","setLoading","getPosts","useCallback","get","then","res","data","catch","finally","useApiPosts","useEffect","map","obj","Object","assign","gradationGreen","MusicDetailBox","undefined","album","release","ratio","bgGradient","frameBorder","allow","ReactionButtons","justifyContent","mx","DetailBox","userName","userTitle","userImg","commentVal","likeVal","pr","PostDetail","failed","api_postDetail","setApiPostDetail","getPostDetail","useApiPostDetail","useParams","orientation","Alert404","status","variant","height","goBack","maxWidth","Detail404","CreateBreadcrumb","step","goTrackInfo","goRate","goCheck","trackColor","setTrackColor","rateColor","setRateColor","checkColor","setCheckColor","trackWeight","setTrackWeight","rateWeight","setRateWeight","checkWeight","setCheckWeight","spacing","separator","ChevronRight","isCurrentPage","GoButton","CreateTrackInfo","isExist","BackButton","CreateRate","type","CreateCheck","Create","setStep","message","homeRoutes","path","exact","HamburgerButton","display","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","overflow","align","pt","loginState","isLogin","NullMe","email","useMessage","toast","useToast","showMessage","position","duration","isClosable","MenuButton","disabled","colorScheme","solid","_focus","boxShadow","PrimaryButton","MenuContents","apiMe","setApiMe","setIsLogin","getMe","useApiMe","logout","localStorage","removeItem","useLogout","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","HomeLayout","useDisclosure","Page404","useLogin","login","mail","password","error","LoginForm","onChange","inputType","Login","loginMailAddress","setLoginMailAddress","loginPassword","setLoginPassword","regMailAddress","setRegMailAddress","regPassword","setRegPassword","regPasswordConfirm","setRegPasswordConfirm","regName","setRegName","register","useRegister","sm","isFitted","_selected","outline","e","target","Router","render","url","match","route","App","className","style","ReactDOM","StrictMode","document","getElementById"],"mappings":"0cAMIA,E,mECMWC,EAVDC,YAAY,CACxBC,OAAQ,CACNC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,UACjBC,MAAO,gB,yBCLFC,EAAYC,YAAM,CAC3BC,IAAK,YACLC,QAAS,CAAEC,MAAM,Y,kCCKRC,EAA2B,SAACC,GACrC,IAAQC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAEpB,OACI,cAAC,IAAD,CAAMC,EAAE,MAAMC,EAAE,OAAhB,SACI,eAAC,IAAD,CAAKC,EAAE,OAAP,UACI,cAAC,IAAD,CAAOC,IAAKN,EAAKO,QAAQ,MAAMC,GAAG,MAAMC,OAAO,iBAC/C,eAAC,IAAD,CAAKD,GAAG,KAAR,UACI,cAAC,IAAD,CAAME,SAAS,KAAKC,WAAW,OAA/B,SACKV,IAEL,cAAC,IAAD,CAAMS,SAAS,KAAf,SAAqBR,aCZ5BU,EAA0BC,gBAAK,SAACd,GAC3C,IAAQE,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KAEf,OACE,eAAC,IAAD,CAAKwB,EAAE,MAAMC,GAAG,KAAKC,GAAG,OAAxB,UACE,cAAC,IAAD,CAAMN,SAAS,KAAKC,WAAW,OAA/B,SACGV,IAEH,cAAC,IAAD,CAAMS,SAAS,KAAKF,GAAG,KAAvB,SACGlB,UJTI2B,EAAqB,SAAClB,GAC/B,IAAQmB,EAAWnB,EAAXmB,OACRjC,EAAe,GAEf,IAAK,IAAIkC,EAAI,EAAGA,EAAI,EAAGA,IAEDlC,GAAdkC,EAAID,EAA0B,SAAwB,SAI9D,OACI,cAAC,IAAD,CAAMR,SAAS,OAAOlB,MAAM,SAA5B,SACKP,K,kBKZAmC,EAAyB,SAACrB,GACrC,IAAQsB,EAAUtB,EAAVsB,MACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,OACXC,KAAM,cAAC,IAAD,CAASC,KAAK,SACpBA,KAAK,MACL/B,MAAM,OACNgC,GAAG,SAEL,cAAC,IAAD,CAAMd,SAAS,OAAOlB,MAAM,OAAOiC,GAAG,MAAtC,SACGJ,Q,QCjBIK,EAAc,WACzB,OACE,cAAC,IAAD,CACE,aAAW,OACXJ,KAAM,cAAC,IAAD,IACNC,KAAK,MACL/B,MAAM,OACNgC,GAAG,U,SCFIG,EAA4B,SAAC5B,GACxC,IAAQsB,EAAUtB,EAAVsB,MACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,UACXC,KAAM,cAACM,EAAA,EAAD,IACNL,KAAK,MACL/B,MAAM,OACNgC,GAAG,SAEL,cAAC,IAAD,CAAMd,SAAS,OAAOlB,MAAM,OAAOiC,GAAG,MAAtC,SACGJ,QCTIQ,EAAkChB,gBAAK,SAACd,GACnD,IAAQ+B,EAA0B/B,EAA1B+B,YAAaC,EAAahC,EAAbgC,SAErB,OACE,eAAC,IAAD,CAAMvB,GAAG,KAAT,UACE,cAAC,IAAD,CAAML,EAAE,MAAM6B,GAAG,OAAjB,SACE,cAAC,EAAD,CAAeX,MAAOS,MAExB,cAAC,IAAD,CAAM3B,EAAE,MAAM6B,GAAG,OAAjB,SACE,cAAC,EAAD,CAAYX,MAAOU,MAErB,cAAC,IAAD,CAAM5B,EAAE,MAAMsB,GAAG,OAAjB,SACE,cAAC,EAAD,Y,SCbKQ,EAA0BpB,gBAAK,SAACd,GAC3C,IAAQC,EAAoCD,EAApCC,IAAKkC,EAA+BnC,EAA/BmC,KAAMC,EAAyBpC,EAAzBoC,WAAyBpC,EAAbqC,GAC/B,OACE,eAAC,IAAD,CAAMtB,EAAE,MAAMN,GAAG,OAAOiB,GAAG,OAA3B,UACE,cAAC,IAAD,CAAQD,GAAG,WAAWD,KAAK,KAAKS,GAAG,OAAOhB,GAAG,OAAOV,IAAKN,IACzD,eAAC,IAAD,CAAMqC,cAAc,SAASrB,GAAG,OAAOb,EAAE,QAAQmC,WAAW,QAA5D,UACE,cAAC,IAAD,CAAM5B,SAAS,KAAKP,EAAE,QAAQoC,UAAU,OAAxC,SACGL,IAEH,cAAC,IAAD,CAAMxB,SAAS,OAAOlB,MAAM,OAA5B,SACG2C,aCXEK,EAAwB3B,gBAAK,SAACd,GACvC,IAAQ0C,EAA0B1C,EAA1B0C,SAAUC,EAAgB3C,EAAhB2C,GAAIC,EAAY5C,EAAZ4C,QAEtB,OACI,cAAC,IAAD,CACIxC,EAAE,MACFW,EAAE,OACFU,GAAG,QACHoB,aAAa,OACbC,GAAG,OACH9B,GAAG,OACHN,OAAO,KACPiC,GAAIA,EACJI,OAAQ,CAAEC,OAAQ,UAAWC,QAAS,IACtCL,QAASA,EAVb,SAYKF,OCTAQ,EAAuBpC,gBAAK,SAACd,GACtC,IAAQmD,EAASnD,EAATmD,KACAC,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,OAAQC,EAAiBJ,EAAjBI,SAAUC,EAAOL,EAAPK,GACjCC,EAAUC,cAKhB,OACI,eAACjB,EAAD,CAAWE,GAAG,KAAKC,QALH,WAChBa,EAAQE,KAAR,gBAAsBH,KAItB,UAEI,cAAC,EAAD,CACIvD,IAAKoD,EAAMpD,IACXC,MAAOmD,EAAMnD,MACbC,OAAQkD,EAAMlD,SAElB,eAAC,IAAD,CACIC,EAAE,MACFW,EAAE,OACFkB,GAAG,OACH2B,SAAS,SACTpB,UAAU,OACVd,GAAG,KANP,UASI,cAACb,EAAD,CAAaX,MAAOoD,EAAOpD,MAAOX,KAAM+D,EAAO/D,OAC/C,eAAC,IAAD,CAAMkB,GAAG,OAAT,UACI,eAAC,IAAD,CAAKL,EAAE,MAAP,UAEI,cAAC,EAAD,CAAQe,OAAQmC,EAAOO,OAEvB,cAAC/B,EAAD,CACIC,YAAawB,EAASxB,YACtBC,SAAUuB,EAASvB,cAI3B,cAACE,EAAD,CACIjC,IAAKmD,EAAKnD,IACVkC,KAAMiB,EAAKjB,KACXC,WAAYgB,EAAKU,IACjBzB,GAAG,mB,wBClDZ0B,EALGC,IAAMC,OAAO,CAC3BC,QAAS,GACTC,iBAAiB,I,SCDRC,EAAqBtD,gBAAK,WACnC,OACI,cAAC,IAAD,CACIuD,UAAU,MACVC,MAAM,OACNC,WAAW,WACX9E,MAAM,UACN+B,KAAK,KACLlB,EAAE,OACFG,GAAG,WCAF+D,EAAS1D,gBAAK,WAEN2D,YAAkB/E,EACnCgF,CAAS,CAAE5E,MAAO,WAElB,MCPuB,SAAC6E,GACxB,MAAiCC,mBAA+B,IAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,MAAO,CAAEC,SAXQC,uBAAY,WACzBF,GAAW,GACXjB,EACKoB,IADL,qBAEKC,MAAK,SAACC,GAAD,OAASP,EAAYO,EAAIC,SAC9BC,OAAO,eAGPC,SAAQ,kBAAMR,GAAW,QAC/B,IAEgBH,YAAWE,WDRWU,GAAjCR,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,UAAWE,EAA7B,EAA6BA,QAM7B,OALAW,qBAAU,kBAAMT,MAAY,CAACA,IAOzB,aADA,CACA,qBACKF,EACG,cAACX,EAAD,IAEA,cAAC,IAAD,UAEKS,EAAUc,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,UAEI,cAAC1C,EAAD,CAAUC,KAAM0C,OAAOC,OAAOF,MAFxBA,EAAIpC,c,oCEhCzBuC,EAAiB,gCCajBC,EAA6B,SAAChG,GACvC,MAMIA,EALAwD,UADJ,WACSyC,EADT,IAMIjG,EAJAE,aAFJ,WAEY+F,EAFZ,IAMIjG,EAHAkG,aAHJ,WAGYD,EAHZ,IAMIjG,EAFAG,cAJJ,WAIa8F,EAJb,IAMIjG,EADAmG,eALJ,WAKcF,EALd,EAOA,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAaG,MAAO,EAAO5F,QAAQ,MAAnC,cACYyF,IAAPzC,EACG,cAAC,IAAD,CAAK6C,WAAYN,EAAjB,SACI,cAAC,IAAD,CAAkBtG,MAAM,OAAOkB,SAAS,WAG5C,wBACIJ,IAAG,+CAA0CiD,GAC7C8C,YAAY,IACZC,MAAM,sBAIlB,eAAC,IAAD,CAAMhE,WAAW,QAAQqB,SAAS,SAASlC,GAAI,EAAGjB,GAAG,OAAOkC,GAAG,KAA/D,UACI,cAAC,IAAD,CAAM/B,WAAW,OAAOD,SAAS,OAAOgC,GAAG,KAA3C,cACesD,IAAV/F,EACK,uFACAA,IAEV,eAAC,IAAD,CAAMS,SAAS,KAAf,6DACuBsF,IAAVC,EAAsB,MAAQA,KAE3C,eAAC,IAAD,CAAMvF,SAAS,KAAf,4DAEgBsF,IAAX9F,EAAuB,MAAQA,KAEpC,eAAC,IAAD,CAAMQ,SAAS,KAAf,iDACuBsF,IAAZE,EAAwB,MAAQA,YCvC9CK,EAA8B1F,gBAAK,SAACd,GAC/C,IAAQ+B,EAA0B/B,EAA1B+B,YAAaC,EAAahC,EAAbgC,SACrB,OACE,eAAC,IAAD,CAAMyE,eAAe,SAASrG,EAAE,MAAMK,GAAI,EAA1C,UACE,cAAC,IAAD,CAAKwB,GAAG,OAAR,SACE,cAAC,EAAD,CAAeX,MAAOS,MAExB,cAAC,IAAD,CAAK2E,GAAG,OAAR,SACE,cAAC,EAAD,CAAYpF,MAAOU,MAErB,cAAC,IAAD,CAAKN,GAAG,OAAR,SACE,cAAC,EAAD,YCLKiF,EAAwB,SAAC3G,GAClC,MASIA,EARA4G,gBADJ,MACe,GADf,IASI5G,EAPA6G,iBAFJ,MAEgB,GAFhB,IASI7G,EANA8G,eAHJ,MAGc,GAHd,EAII3F,EAKAnB,EALAmB,OAJJ,EASInB,EAJAE,aALJ,MAKY,GALZ,IASIF,EAHAT,YANJ,MAMW,GANX,EAOIwH,EAEA/G,EAFA+G,WACAC,EACAhH,EADAgH,QAEJ,OACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAMxE,UAAU,OAAhB,UACI,cAAC,IAAD,CAAKP,GAAI,EAAT,SACI,cAACC,EAAD,CACIC,KAAMyE,EACNxE,WAAYyE,EACZ5G,IAAK6G,WAIDb,IAAX9E,EAAuB,wBAAU,cAAC,EAAD,CAAQA,OAAQA,OAEtD,eAAC,IAAD,CAAKV,GAAI,EAAG+B,UAAU,OAAtB,UACI,cAAC,IAAD,CAAM7B,SAAS,KAAKC,WAAW,OAA/B,SACKV,IAEL,cAAC,IAAD,CAAMS,SAAS,KAAKsG,GAAI,GAAIxG,GAAI,EAAhC,SACKlB,YAIO0G,IAAfc,QAAwCd,IAAZe,EACzB,wBAEA,cAACR,EAAD,CAAiBzE,YAAagF,EAAY/E,SAAUgF,QClCvDE,EAAyB,SAAClH,GACnC,YAAWA,GACMyE,YAAkB/E,EACnCgF,CAAS,CAAE5E,MAAO,WAClB,IAEA,ECpB4B,SAAE0D,GAE9B,MAA6CoB,mBAAyBuC,GAAtE,mBAAQC,EAAR,KAAwBC,EAAxB,KACA,EAAgCzC,oBAAU,GAA1C,mBAAQG,EAAR,KAAiBC,EAAjB,KAcA,MAAO,CAAEsC,cAbapC,uBAAY,WAE9BF,GAAY,GAEZjB,EACCoB,IADD,qBACoC3B,IACnC4B,MAAM,SAAEC,GAAF,OAAWgC,EAAkBhC,EAAIC,SACvCC,OAAO,eAGNC,SAAS,kBAAMR,GAAY,QAC/B,IAEsBoC,iBAAgBrC,WDGWwC,CAFpCC,cAAPhE,IAEA8D,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,eAAgBrC,EAAvC,EAAuCA,QAMvC,OALAW,qBAAU,kBAAM4B,MAAiB,IAO7B,aADA,CACA,qBACKvC,EACG,cAACX,EAAD,IAEA,eAAC,IAAD,WACI,cAAC,EAAD,CACIZ,GAAI4D,EAAe/D,MAAMG,GACzBtD,MAAOkH,EAAe/D,MAAMnD,MAC5BgG,MAAOkB,EAAe/D,MAAM6C,MAC5B/F,OAAQiH,EAAe/D,MAAMlD,OAC7BgG,QAASiB,EAAe/D,MAAM8C,UAElC,cAAC,IAAD,CAASsB,YAAY,aAAarH,EAAE,OAAOK,GAAI,EAAGkC,GAAG,MACrD,cAAC,EAAD,CACIiE,SAAUQ,EAAehE,KAAKjB,KAC9B0E,UAAWO,EAAehE,KAAKU,IAC/BgD,QAASM,EAAehE,KAAKnD,IAC7BkB,OAAQiG,EAAe9D,OAAOO,KAC9B3D,MAAOkH,EAAe9D,OAAOpD,MAC7BX,KAAM6H,EAAe9D,OAAO/D,KAC5BwH,WAAYK,EAAe7D,SAASxB,YACpCiF,QAASI,EAAe7D,SAASvB,WAErC,cAAC,IAAD,CAASyF,YAAY,aAAarH,EAAE,OAAOK,GAAI,EAAGkC,GAAG,Y,kBEzC5D+E,EAAuB5G,gBAAK,SAACd,GACtC,IAAQE,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KACTkE,EAAUC,cAKhB,OACI,eAAC,IAAD,CACIiE,OAAO,QACPC,QAAQ,SACRtF,cAAc,SACdC,WAAW,SACXC,UAAU,SACVqF,OAAO,QANX,UAQI,cAAC,IAAD,CAAajF,QAbG,WACpBa,EAAQqE,UAYmCpG,GAAG,OAAOlB,QAAQ,SACzD,cAAC,IAAD,CAAWA,QAAQ,OAAOyB,GAAI,IAC9B,cAAC,IAAD,CAAYxB,GAAI,EAAGkC,GAAI,EAAGhC,SAAS,KAAnC,SACKT,IAEL,cAAC,IAAD,CAAkB6H,SAAS,KAA3B,SAAiCxI,UClChCyI,EAAY,WACrB,OAAO,cAACN,EAAD,CAAUxH,MAAM,qBAAMX,KAAK,0F,oBCWzB0I,GAA+BnH,gBAAK,SAACd,GAC9C,IAAQkI,EAAuClI,EAAvCkI,KAAMC,EAAiCnI,EAAjCmI,YAAaC,EAAoBpI,EAApBoI,OAAQC,EAAYrI,EAAZqI,QAEnC,EAAoCzD,mBAAgB,YAApD,mBAAO0D,EAAP,KAAmBC,EAAnB,KACA,EAAkC3D,mBAAgB,YAAlD,mBAAO4D,EAAP,KAAkBC,EAAlB,KACA,EAAoC7D,mBAAgB,YAApD,mBAAO8D,EAAP,KAAmBC,EAAnB,KACA,EAAsC/D,mBAAiB,UAAvD,mBAAOgE,EAAP,KAAoBC,EAApB,KACA,EAAoCjE,mBAAiB,UAArD,mBAAOkE,EAAP,KAAmBC,EAAnB,KACA,EAAsCnE,mBAAiB,UAAvD,mBAAOoE,EAAP,KAAoBC,EAApB,KAsBA,OApBAvD,qBAAU,WAENmD,EAAe,UACfN,EAAc,YACdQ,EAAc,UACdN,EAAa,YACbQ,EAAe,UACfN,EAAc,YACD,UAATT,GACAW,EAAe,QACfN,EAAc,UACE,SAATL,GACPa,EAAc,QACdN,EAAa,WAEbQ,EAAe,QACfN,EAAc,YAEnB,CAACT,IAGA,eAAC,KAAD,CACIgB,QAAQ,OACRxH,GAAG,OACHyH,UAAW,cAACC,GAAA,EAAD,CAAkB3J,MAAM,WAAWkB,SAAS,SACvD6B,UAAU,OACVG,GAAG,OALP,UAOI,cAAC,KAAD,CAAgB0G,cAAwB,UAATnB,EAA/B,SACI,cAAC,KAAD,CACIvH,SAAS,OACTlB,MAAO6I,EACP1H,WAAYgI,EACZhG,QAASuF,EAJb,wCASJ,cAAC,KAAD,CAAgBkB,cAAwB,SAATnB,EAA/B,SACI,cAAC,KAAD,CACIvH,SAAS,OACTlB,MAAO+I,EACP5H,WAAYkI,EACZlG,QAASwF,EAJb,4BASJ,cAAC,KAAD,CAAgBiB,cAAwB,UAATnB,EAA/B,SACI,cAAC,KAAD,CACIvH,SAAS,OACTlB,MAAOiJ,EACP9H,WAAYoI,EACZpG,QAASyF,EAJb,8C,oBChEHiB,GAAuB,SAACtJ,GACjC,IAAQ4C,EAAyB5C,EAAzB4C,QAAR,EAAiC5C,EAAhBS,UAAjB,MAAsB,OAAtB,EACA,OACI,cAAC,KAAD,CACIA,GAAIA,EACJL,EAAE,OACFW,EAAE,OACFW,GAAG,OACHD,GAAG,aACHhC,MAAM,QACNmD,QAASA,EACTjC,SAAS,OARb,2BCFK4I,GAA8B,SAACvJ,GACxC,IAAQoI,EAAWpI,EAAXoI,OACR,EAA8BxD,oBAAkB,GAAhD,mBAAO4E,EAAP,UAEA,OACI,eAAC,IAAD,WAEKA,GACG,cAAC,EAAD,CACIhG,QAAIyC,EACJ/F,MAAM,MACNgG,WAAOD,EACP9F,YAAQ8F,EACRE,aAASF,IAGjB,eAAC,IAAD,CAAM3D,cAAc,SAAS7B,GAAG,OAAhC,UACI,cAAC,IAAD,CAAME,SAAS,KAAKe,GAAG,OAAvB,wHAGA,eAAC,IAAD,CAAMjB,GAAG,OAAT,UACI,cAAC,KAAD,CAAOL,EAAE,QACT,cAAC,KAAD,CACIsB,GAAG,KACHtB,EAAE,MACFiG,WAAYN,EACZtG,MAAM,QACNkB,SAAS,KALb,6BAUJ,cAAC,GAAD,CAAUiC,QAASwF,EAAQ3H,GAAG,gB,UCjCjCgJ,GAAyB,SAACzJ,GACnC,IAAQ4C,EAAyB5C,EAAzB4C,QAAR,EAAiC5C,EAAhBS,UAAjB,MAAsB,OAAtB,EACA,OACI,cAAC,KAAD,CACIA,GAAIA,EACJL,EAAE,OACFW,EAAE,OACFW,GAAG,OACHD,GAAG,aACHhC,MAAM,QACNmD,QAASA,EACTjC,SAAS,OARb,2BCFK+I,GAAyB,SAAC1J,GACnC,IAAQmI,EAAyBnI,EAAzBmI,YAAaE,EAAYrI,EAAZqI,QAErB,OACI,eAAC,IAAD,CAAM/F,cAAc,SAAS7B,GAAG,OAAhC,UACI,eAAC,IAAD,CAAM6B,cAAc,SAApB,UACI,cAAC,IAAD,CAAM3B,SAAS,KAAKe,GAAG,OAAvB,iCAGA,cAAC,IAAD,CACIf,SAAS,OACTe,GAAG,OACHgF,GAAG,OACH9F,WAAW,QACXnB,MAAM,WALV,+CAUJ,eAAC,IAAD,CAAKgB,GAAG,OAAR,UACI,cAAC,IAAD,CAAME,SAAS,KAAKe,GAAG,OAAvB,6CAGA,cAAC,KAAD,CAAOiI,KAAK,OAAOvJ,EAAE,OAAOK,GAAG,YAEnC,eAAC,IAAD,CAAKA,GAAG,OAAR,UACI,cAAC,IAAD,CAAME,SAAS,KAAKe,GAAG,OAAOX,EAAE,OAAhC,iCAGA,cAAC,KAAD,CAAU4I,KAAK,OAAOvJ,EAAE,OAAOW,EAAE,QAAQN,GAAG,YAEhD,eAAC,IAAD,CAAMiB,GAAG,OAAT,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CAAYkB,QAASuF,EAAa1H,GAAG,WAEzC,cAAC,IAAD,CAAKL,EAAE,SACP,cAAC,IAAD,UACI,cAAC,GAAD,CAAUwC,QAASyF,EAAS5H,GAAG,kBC/CtCmJ,GAAc,WACvB,OAAO,2GCgBEC,GAAS/I,gBAAK,WACN2D,YAAkB/E,EACnCgF,CAAS,CAAE5E,MAAO,WAElB,MAAwB8E,mBAAqC,SAA7D,mBAAOsD,EAAP,KAAa4B,EAAb,KACM3B,EAAc,WAChB2B,EAAQ,UAEN1B,EAAS,WACX0B,EAAQ,SAENzB,EAAU,WACZyB,EAAQ,UAGZ,OACI,eAAC,IAAD,CAAKtH,UAAU,OAAf,UAEI,cAAC,IAAD,CAAQuH,QAAQ,6HAChB,cAAC9B,GAAD,CACIC,KAAMA,EACNC,YAAaA,EACbC,OAAQA,EACRC,QAASA,IAEH,UAATH,EACG,cAAC,GAAD,CAAiBE,OAAQA,IAChB,SAATF,EACA,cAAC,GAAD,CAAYG,QAASA,EAASF,YAAaA,IAE3C,cAAC,GAAD,UCxCH6B,GAAa,CACtB,CACIC,KAAM,GACNC,OAAO,EACPxH,SAAU,cAAC8B,EAAD,KAEd,CACIyF,KAAM,cACNC,OAAO,EAEPxH,SAAU,cAAC8B,EAAD,KAEd,CACIyF,KAAM,UACNC,OAAO,EAEPxH,SAAU,cAAC8B,EAAD,KAEd,CACIyF,KAAM,WACNC,OAAO,EACPxH,SAAU,cAAC,EAAD,KAEd,CACIuH,KAAM,cACNC,OAAO,EACPxH,SAAU,cAACmH,GAAD,KAEd,CACII,KAAM,UACNC,OAAO,EACPxH,SAAU,cAAC,EAAD,KAEd,CACIuH,KAAM,IACNC,OAAO,EACPxH,SAAU,cAAC8B,EAAD,M,8BC/BL2F,GAA8BrJ,gBAAK,SAACd,GAC7C,IAAQoK,EAA4DpK,EAA5DoK,QAASxH,EAAmD5C,EAAnD4C,QAAjB,EAAoE5C,EAA1C0B,UAA1B,MAA+B,OAA/B,IAAoE1B,EAA7BiB,UAAvC,MAA4C,OAA5C,IAAoEjB,EAAhBwB,YAApD,MAA2D,KAA3D,EACA,OACI,cAAC,IAAD,CACI6E,WAAW,gCACX5G,MAAM,QACN,aAAW,YACX8B,KAAM,cAAC8I,GAAA,EAAD,IACN7I,KAAMA,EACNE,GAAIA,EACJT,GAAIA,EACJmJ,QAASA,EACTxH,QAASA,OCjBR0H,GAA4B,SAACtK,GACxC,IAAQ0C,EAAa1C,EAAb0C,SACR,OACE,cAAC,IAAD,CACE6H,GAAG,KACH9K,MAAM,WACNwC,GAAG,OACHxB,GAAG,MACHE,SAAU,CAAE6J,KAAM,OAAQC,GAAI,SALhC,SAOG/H,KCFMgI,GAA0B5J,gBAAK,SAACd,GACzC,IAAQ0C,EAAqB1C,EAArB0C,SAAUiI,EAAW3K,EAAX2K,OACV7K,EAAU8K,YAAelL,GAAzBI,MACF2D,EAAUC,cAMhB,OACI,eAAC,IAAD,CACItD,EAAG,CAAEoK,KAAM,OAAQC,GAAI,QACvB1J,EAAE,QACF8J,QAAS,CAAEL,KAAM,OAAQC,GAAI,OAC7BK,YAAa,CAAEL,GAAI,YACnBnI,cAAc,SALlB,UAQI,eAAC,IAAD,CACIiI,GAAG,MACHnK,EAAE,OACF2K,aAAa,MACbD,YAAY,WAEZhI,GAAG,KANP,UASI,cAAC,IAAD,CAAK7B,GAAG,OAAOF,EAAE,KAAjB,SACe,WAAVjB,EACG,cAAC,GAAD,6CACU,WAAVA,EACA,cAAC,GAAD,uCACU,YAAVA,EACA,cAAC,GAAD,6CACU,WAAVA,EACA,cAAC,GAAD,uCAEA,eAAC,IAAD,WACI,cAAC,IAAD,CACIyB,KAAM,cAAC,KAAD,IACN,aAAW,YACXE,GAAG,OACHQ,GAAI,EACJtB,SAAS,OACTiC,QAvCT,WACfa,EAAQqE,UAuCgBrH,GAAG,OACHD,QAAS,CAAEgK,KAAM,OAAQC,GAAI,UAEjC,cAAC,GAAD,4CAKZ,cAACN,GAAD,CACIC,QAAS,CAAEI,KAAM,SAAUC,GAAI,QAC/B7H,QAAS+H,EACTjJ,GAAG,OACHT,GAAG,OACHO,KAAK,UAIb,cAAC,IAAD,CACIT,EAAE,QACFX,EAAE,OACF4K,SAAS,OACT1I,cAAc,SACd2I,MAAM,SACNC,GAAG,KACHpI,GAAI,EAPR,SASKJ,U,SCpFJyI,GAAaxL,YAAM,CAC5BC,IAAK,aACLC,QAAS,CAAEuL,SAAQ,KCUjBC,GAAY,CAAC7H,GAAG,GAAIrB,KAAK,GAAImJ,MAAM,I,UCL5BC,GAAa,WACxB,IAAMC,EAAQC,eAad,MAAO,CAAEC,YAXWxG,uBAAY,SAAClF,GAC/B,IAAQE,EAAkBF,EAAlBE,MAAOyH,EAAW3H,EAAX2H,OACf6D,EAAM,CACJtL,QACAyH,SACAgE,SAAU,MACVC,SAAU,IACVC,YAAY,MAEb,MCXQC,GAAyBhL,gBAAK,SAACd,GACxC,IAAQ0C,EAAkD1C,EAAlD0C,SAAoBE,GAA8B5C,EAAxCI,EAAwCJ,EAA9B4C,SAA5B,EAA0D5C,EAArB+L,gBAArC,SACA,OACI,cAAC,KAAD,CACIC,YAAY,OACZpE,QAAQ,QACRqE,MAAM,OACN7L,EAAE,IACF2C,OAAQ,CAAEC,OAAQ,WAClBkJ,OAAQ,CAAEC,UAAW,QACrBvJ,QAASA,EACTmJ,SAAUA,EARd,SAUKrJ,OCZA0J,GAA4B,SAACpM,GACtC,IAAQ0C,EAAyD1C,EAAzD0C,SAAR,EAAiE1C,EAA/CI,SAAlB,MAAsB,OAAtB,EAA8BwC,EAAmC5C,EAAnC4C,QAASmJ,EAA0B/L,EAA1B+L,SAAvC,EAAiE/L,EAAhBS,UAAjD,MAAsD,OAAtD,EACA,OACI,cAAC,KAAD,CACImC,QAASA,EACTnD,MAAM,QACN4G,WAAW,gCACXjG,EAAGA,EACH2C,OAAQ,CAAEE,QAAS,GAAKD,OAAQ,WAChC+I,SAAUA,EACVtL,GAAIA,EAPR,SASKiC,KCbA2J,GAAevL,gBAAK,WAC7B,IAAM2C,EAAUC,cAEhB,EJGoB,WAEpB,MAAgCkB,oBAAU,GAA1C,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAayG,IAAzC,mBAAQiB,EAAR,KAAeC,EAAf,KACMC,EAAa/H,YAAmB0G,IAsBtC,MAAO,CAAEsB,MAjBKvH,uBAAY,WACtBF,GAAW,GACXjB,EACKoB,IADL,WAEKC,MAAM,SAAEC,GAELkH,EAAUlH,EAAIC,MACdkH,EAAY,CAAEpB,SAAQ,OAGzB7F,OAAO,WAEJiH,EAAY,CAAEpB,SAAQ,OAEzB5F,SAAQ,kBAAMR,GAAW,QAC/B,IAEasH,QAAOvH,WI7BE2H,GAAjBD,EAAR,EAAQA,MAAOH,EAAf,EAAeA,MACf,ECLqB,WACrB,IAAQZ,EAAgBH,KAAhBG,YACFjI,EAAUC,cACV8I,EAAa/H,YAAmB0G,IAgBtC,MAAO,CAAEwB,OAdMzH,uBAAa,WAExBlB,IAAMb,KAAM,cACPiC,MAAM,SAAAC,GAEHuH,aAAaC,WAAY,QACzBL,EAAY,CAAEpB,SAAQ,IACtB3H,EAAQE,KAAM,UACd+H,EAAa,CAAExL,MAAO,yDAAayH,OAAQ,eAC3CpC,OAAO,SAAAF,GAEPqG,EAAa,CAAExL,MAAO,2EAAgByH,OAAQ,eAEvD,KDbgBmF,GAAXH,EAAR,EAAQA,OAERjH,qBAAU,kBAAM+G,MAAS,CAACA,IAmB1B,OACI,eAAC,IAAD,CAAM7I,SAAS,SAASlC,GAAG,OAAOa,WAAW,QAAQ0E,GAAG,OAAxD,UACI,cAAC,KAAD,CAAM8F,GAAG,IAAT,SACI,cAAC,IAAD,CACIxC,GAAG,KACH5J,SAAS,OACT0F,WAAW,gCACX2G,OAAO,OACPpM,WAAW,OACXK,GAAG,OACHS,GAAG,OAPP,sBAaJ,cAACoK,GAAD,CAAY1L,EAAE,OAAOwC,QAjCZ,WACba,EAAQE,KAAK,MAgCT,4CAGA,cAACmI,GAAD,CAAY1L,EAAE,OAAOwC,QAjCR,WACjBa,EAAQE,KAAK,iBAgCmCoI,UAAU,EAAtD,sCAGA,cAACD,GAAD,CAAY1L,EAAE,OAAOwC,QAjCX,WACda,EAAQE,KAAK,aAgCgCoI,UAAU,EAAnD,4CAGA,cAAC,IAAD,CAAMtL,GAAG,OAAOiB,GAAG,OAAnB,SACI,cAAC,GAAD,CAAetB,EAAE,QAAQwC,QAjCpB,WACba,EAAQE,KAAK,iBAgCL,4BAKJ,eAAC,IAAD,CAAKlD,GAAG,OAAOL,EAAE,OAAOwC,QAlCV,WAClB+J,KAiCI,UACI,cAACzK,EAAD,CACIjC,IAAI,0CACJkC,KAAMmK,EAAMnK,KACZC,WAAW,eACXC,GAAG,SAEP,cAAC,KAAD,CACI1B,SAAU,EACVP,EAAE,OACFW,EAAE,OACFiL,YAAY,MACZvL,GAAG,OALP,qD,mBE3DHwM,GAAyBnM,gBAAK,SAACd,GAC1C,IAAQkN,EAAoBlN,EAApBkN,QAASC,EAAWnN,EAAXmN,OACjB,OACE,cAAC,KAAD,CAAQC,UAAU,OAAO5L,KAAK,KAAK0L,QAASA,EAASC,OAAQA,EAA7D,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAY9M,EAAG,EAAGoB,GAAG,WAArB,SACE,cAAC4K,GAAD,eCVCgB,GAAsBvM,gBAAK,SAACd,GACrC,IAAQ0C,EAA8B1C,EAA9B0C,SAAUyK,EAAoBnN,EAApBmN,OAAQD,EAAYlN,EAAZkN,QAE1B,OACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAMhE,QAAQ,OAAd,SAEI,eAAC,IAAD,CAAMxC,GAAG,OAAOtG,EAAE,OAAlB,UACI,cAAC,IAAD,CACIA,EAAE,MACFW,EAAE,OACFqJ,QAAS,CAAEI,KAAM,OAAQC,GAAI,UAC7BxD,GAAG,OACHvF,GAAG,MALP,SAOI,cAAC2K,GAAD,MAEH3J,OAGT,cAACuK,GAAD,CAAYE,OAAQA,EAAQD,QAASA,UCtBpCI,GAAyBxM,gBAAK,SAACd,GACxC,IAAQ0C,EAAa1C,EAAb0C,SACR,EAAoC6K,eAA5BJ,EAAR,EAAQA,OAAQxC,EAAhB,EAAgBA,OAAQuC,EAAxB,EAAwBA,QAExB,OACI,cAAC,IAAD,CAAK9M,EAAE,OAAP,SACI,cAACiN,GAAD,CAASF,OAAQA,EAAQD,QAASA,EAAlC,SACI,cAACxC,GAAD,CAAaC,OAAQA,EAArB,SAA8BjI,WCjBjC8K,GAAU,WACrB,OAAO,0C,UCQIC,GAAW,WACpB,IAAQ/B,EAAgBH,KAAhBG,YACFjI,EAAUC,cAEhB,EAA0BkB,qBAA1B,mBACM4H,GADN,UACmB/H,YAAmB0G,KAsBtC,MAAO,CAAEuC,MApBKxI,uBAAa,SAACyI,EAAcC,GAEtC7J,EAAUoB,IAAK,uBACVC,MAAM,SAAAC,GAEHtB,EAAUZ,KAAM,aAAc,CAC1BmI,MAAOqC,EACPC,SAAUA,IAETxI,MAAM,SAAAC,GAEHqG,EAAa,CAAExL,MAAO,mDAAYyH,OAAQ,YAC1C6E,EAAY,CAAEpB,SAAQ,IACtB3H,EAAQE,KAAM,QACd4B,OAAO,SAAAsI,GAEPnC,EAAa,CAAExL,MAAO,2EAAgByH,OAAQ,kBAG/D,MCzBMmG,GAAwB,SAAC9N,GAClC,IAAQ+N,EAAkD/N,EAAlD+N,SAAUzM,EAAwCtB,EAAxCsB,MAAOoB,EAAiC1C,EAAjC0C,SAAzB,EAA0D1C,EAAvBgO,iBAAnC,MAA+C,OAA/C,EAEA,OACI,eAAC,IAAD,CAAKxL,UAAU,QAAQzB,EAAE,OAAzB,UACI,cAAC,IAAD,CAAMW,GAAI,EAAGiB,GAAI,EAAGhC,SAAS,KAA7B,SACK+B,IAEL,cAAC,KAAD,CAAOiH,KAAMqE,EAAWD,SAAUA,EAAUzM,MAAOA,QCAlD2M,GAAQ,WAEjB,MAAgDrJ,mBAAS,IAAzD,mBAAOsJ,EAAP,KAAyBC,EAAzB,KACA,EAA0CvJ,mBAAS,IAAnD,mBAAOwJ,EAAP,KAAsBC,EAAtB,KAEA,EAA4CzJ,mBAAS,IAArD,mBAAO0J,EAAP,KAAuBC,EAAvB,KACA,EAAsC3J,mBAAS,IAA/C,mBAAO4J,EAAP,KAAoBC,EAApB,KACA,EAAoD7J,mBAAS,IAA7D,mBAAO8J,EAAP,KAA2BC,EAA3B,KACA,EAA8B/J,mBAAS,IAAvC,mBAAOgK,EAAP,KAAgBC,EAAhB,KAsBA,EC1CuB,WACvB,IAAQnD,EAAgBH,KAAhBG,YACAgC,EAAUD,KAAVC,MAyBR,MAAO,CAAGoB,SArBO5J,uBAAa,SAAC/C,EAAawL,EAAcC,GAEtD,IAAMtI,EAAO,CACTnD,KAAMA,EACNmJ,MAAOqC,EACPC,SAAUA,GAGd5J,IAAMb,KAAM,eAAgBmC,GACvBF,MAAM,SAAEC,GAEc,KAAdA,EAAIsC,QAEL+F,EAAMC,EAAKC,MAGlBrI,OAAQ,WAELmG,EAAa,CAAExL,MAAO,qEAAeyH,OAAQ,eAEtD,KDgBkBoH,GAAbD,EAAR,EAAQA,SAKApB,EAAUD,KAAVC,MAKR,OACI,eAAC,IAAD,CACItN,EAAE,OACFW,EAAE,QACFyB,UAAU,SACV0I,GAAI,CAAEV,KAAM,OAAQwE,GAAI,QAJ5B,UAOI,cAAC,IAAD,CACI5E,QAAS,CAAEI,KAAM,OAAQwE,GAAI,UAC7BzE,GAAG,KACH5J,SAAS,OACT0F,WAAW,gCACX2G,OAAO,OACPpM,WAAW,OANf,oBAWA,eAAC,IAAD,CACIa,GAAG,QACHoB,aAAc,CAAE2H,KAAM,OAAQwE,GAAI,QAClC3O,EAAE,OACFK,OAAQ,CAAE8J,KAAM,OAAQwE,GAAI,MAC5B5O,EAAG,CAAEoK,KAAM,OAAQwE,GAAI,SACvBjO,EAAG,CAAEyJ,KAAM,OAAQwE,GAAI,SACvBxM,UAAU,SACVF,cAAc,SACdoE,GAAG,OACHjG,GAAI,CAAE+J,KAAM,OAAQwE,GAAI,OAV5B,UAYI,cAAC,IAAD,CACI5E,QAAS,CAAEI,KAAM,SAAUwE,GAAI,QAC/BzE,GAAG,KACH5J,SAAS,OACT0F,WAAW,gCACX2G,OAAO,OACPpM,WAAW,OACX+B,GAAG,OAPP,oBAYA,eAAC,KAAD,CAAMsM,UAAQ,EAACrH,QAAQ,WAAvB,UACI,eAAC,KAAD,CAASjF,GAAG,MAAZ,UACI,cAAC,KAAD,CACIuM,UAAW,CAAEzP,MAAO,QAASgC,GAAI,aACjCyK,OAAQ,CAAEiD,QAAS,QACnBvO,WAAW,OAHf,sCAOA,cAAC,KAAD,CACIsO,UAAW,CAAEzP,MAAO,QAASgC,GAAI,aACjCyK,OAAQ,CAAEiD,QAAS,QACnBvO,WAAW,OAHf,yCAUJ,eAAC,KAAD,WAEI,cAAC,KAAD,UACI,eAAC,IAAD,CAAM0B,cAAc,SAASlC,EAAE,OAAOW,EAAE,OAAxC,UACI,cAAC,GAAD,CACIgN,SAhGC,SAACqB,GAAD,OAC7BjB,EAAoBiB,EAAEC,OAAO/N,QAgGDA,MAAO4M,EACPF,UAAU,QAHd,wDAOA,cAAC,GAAD,CACID,SApGF,SAACqB,GAAD,OAC1Bf,EAAiBe,EAAEC,OAAO/N,QAoGEA,MAAO8M,EACPJ,UAAU,WAHd,4CAOA,cAAC,GAAD,CACIpL,QArFX,WACjB8K,EAAMQ,EAAkBE,IAqFIrC,SACyB,KAArBmC,GACkB,KAAlBE,EAEJ3N,GAAG,OANP,2CAaR,cAAC,KAAD,UACI,eAAC,IAAD,CAAM6B,cAAc,SAASlC,EAAE,OAAOW,EAAE,OAAxC,UACI,cAAC,GAAD,CACIgN,SA7GR,SAACqB,GAAD,OACpBP,EAAWO,EAAEC,OAAO/N,QA6GQA,MAAOsN,EAFX,4CAMA,cAAC,GAAD,CACIb,SA5HD,SAACqB,GAAD,OAC3Bb,EAAkBa,EAAEC,OAAO/N,QA4HCA,MAAOgN,EACPN,UAAU,QAHd,wDAOA,cAAC,GAAD,CACID,SAhIJ,SAACqB,GAAD,OACxBX,EAAeW,EAAEC,OAAO/N,QAgIIA,MAAOkN,EACPR,UAAU,WAHd,4CAOA,cAAC,GAAD,CACID,SApIG,SAACqB,GAAD,OAC/BT,EAAsBS,EAAEC,OAAO/N,QAoIHA,MAAOoN,EACPV,UAAU,WAHd,0EAOA,cAAC,GAAD,CACIpL,QApIR,WACpBkM,EAASF,EAASN,EAAgBE,IAoINzC,SACuB,KAAnBuC,GACgB,KAAhBE,GACuB,KAAvBE,GACAF,IAAgBE,GACJ,KAAZE,EAEJnO,GAAG,OATP,wDE1KnB6O,GAAS,WAClB,IAAQlE,EAAYR,YAAeO,IAA3BC,QACR,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlB,OAAK,EAACD,KAAK,SAAlB,SAEKmB,EAAU,cAAC,IAAD,CAAU2B,GAAG,MAAS,cAAC,GAAD,MAIrC,cAACO,GAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIrD,KAAK,IACLsF,OAAQ,gBAAYC,EAAZ,EAAGC,MAASD,IAAZ,OACJ,cAAC,IAAD,UACKxF,GAAWrE,KAAI,SAAC+J,GAAD,OACZ,cAAC,IAAD,CAEIxF,MAAOwF,EAAMxF,MACbD,KAAI,UAAKuF,GAAL,OAAWE,EAAMzF,MAHzB,SAKKyF,EAAMhN,UAJFgN,EAAMzF,kBAavC,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,GAAD,UCpBD0F,OAdf,WACE,OACE,qBAAKC,UAAU,MAAMC,MAAO,CAAEhI,OAAQ,QAAtC,SACE,cAAC,KAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAgB1I,MAAOA,EAAvB,SACE,cAAC,GAAD,aCTZ2Q,IAASP,OACP,cAAC,IAAMQ,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b65726da.chunk.js","sourcesContent":["import { Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    rating: number;\n};\nlet rating_stars: string;\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    rating_stars = \"\";\n\n    for (let i = 0; i < 5; i++) {\n        {\n            i < rating ? (rating_stars += \"★\") : (rating_stars += \"☆\");\n        }\n    }\n\n    return (\n        <Text fontSize=\"25px\" color=\"orange\">\n            {rating_stars}\n        </Text>\n    );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    img: string;\n    title: string;\n    artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n    const { img, title, artist } = props;\n\n    return (\n        <Flex w=\"30%\" p=\"auto\">\n            <Box m=\"auto\">\n                <Image src={img} boxSize=\"90%\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n                <Box mt=\"5%\">\n                    <Text fontSize=\"md\" fontWeight=\"bold\">\n                        {title}\n                    </Text>\n                    <Text fontSize=\"xs\">{artist}</Text>\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n  value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"like\"\n        icon={<GoHeart size=\"27px\" />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n  return (\n    <IconButton\n      aria-label=\"like\"\n      icon={<BsShareFill />}\n      size=\"0px\"\n      color=\"gray\"\n      bg=\"none\"\n    />\n  );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    mb: string;\n    onClick?: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n    const { children, mb, onClick } = props;\n\n    return (\n        <Flex\n            w=\"98%\"\n            h=\"33vh\"\n            bg=\"white\"\n            borderRadius=\"10px\"\n            px=\"30px\"\n            py=\"15px\"\n            shadow=\"md\"\n            mb={mb}\n            _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n            onClick={onClick}\n        >\n            {children}\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"2%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","import axios from 'axios';\n \nconst apiClient = axios.create({\n    baseURL: '',\n    withCredentials: true,\n});\n \nexport default apiClient;\n","import { memo } from \"react\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nexport const LoadingPageSpinner = memo(() => {\n    return (\n        <Spinner\n            thickness=\"4px\"\n            speed=\"0.8s\"\n            emptyColor=\"gray.200\"\n            color=\"#c4de71\"\n            size=\"xl\"\n            m=\"auto\"\n            mt=\"50%\"\n        />\n    );\n});\n","import { memo, useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useApiPosts } from \"../../../hooks/api/useApiPosts\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    const { getPosts, api_posts, loading } = useApiPosts(\"recent\");\n    useEffect(() => getPosts(), [getPosts]);\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    // const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        /* 本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    {/* apiからjsonを引っ張り、map関数でカードを繰り返し描画 */}\n                    {api_posts.map((obj) => (\n                        <Box key={obj.id}>\n                            {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                            <PostCard post={Object.assign(obj)} />\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </>\n\n        /* ↓ローカル開発用 */\n        // <Box>\n        //     {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n        //     {api_posts.map((obj) => (\n        //         <Box key={obj.id}>\n        //             {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n        //             <PostCard post={Object.assign(obj)} />\n        //         </Box>\n        //     ))}\n        // </Box>\n    );\n});\n","import { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport apiClient from \"../../client/apiClient\";\n\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport { useMessage } from \"../message/useMessage\";\nimport { useErrorMessage } from \"../useErrorMessage\";\n\ntype Sort = \"recent\" | \"follow\" | \"popular\";\n\nexport const useApiPosts = (sort: Sort) => {\n    const [api_posts, setApiPosts] = useState<Array<PostsDataType>>([]);\n    const [loading, setLoading] = useState(false);\n\n    const getPosts = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Array<PostsDataType>>(`/api/posts/recent`)\n            .then((res) => setApiPosts(res.data))\n            .catch( () =>\n            {\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getPosts, api_posts, loading };\n};\n","export const gradationGreen = \"linear(to-tl, green, #c4de71)\"\n","import { AspectRatio, Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { gradationGreen } from \"../atoms/color/gradationGreen\";\nimport { BsQuestionCircle } from \"react-icons/bs\";\n\ntype Props = {\n    id: string | undefined;\n    title: string | undefined;\n    album: string | undefined;\n    artist: string | undefined;\n    release: string | undefined;\n};\n\nexport const MusicDetailBox: VFC<Props> = (props) => {\n    const {\n        id = undefined,\n        title = undefined,\n        album = undefined,\n        artist = undefined,\n        release = undefined,\n    } = props;\n    return (\n        <Flex>\n            <AspectRatio ratio={1 / 1} boxSize=\"40%\">\n                {id === undefined ? (\n                    <Box bgGradient={gradationGreen}>\n                        <BsQuestionCircle color=\"gray\" fontSize=\"13vh\" />\n                    </Box>\n                ) : (\n                    <iframe\n                        src={`https://open.spotify.com/embed/track/${id}`}\n                        frameBorder=\"0\"\n                        allow=\"encrypted-media\"\n                    />\n                )}\n            </AspectRatio>\n            <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\" mb=\"2%\">\n                <Text fontWeight=\"bold\" fontSize=\"40px\" mb=\"2%\">\n                    {title === undefined\n                        ? \"楽曲情報が取得できていません\"\n                        : title}\n                </Text>\n                <Text fontSize=\"sm\">\n                    収録アルバム： {album === undefined ? \"???\" : album}\n                </Text>\n                <Text fontSize=\"sm\">\n                    アーティスト：\n                    {artist === undefined ? \"???\" : artist}\n                </Text>\n                <Text fontSize=\"sm\">\n                    リリース： {release === undefined ? \"???\" : release}\n                </Text>\n            </Flex>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { Rating } from \"../../atoms/button/Rating\";\nimport { ReactionButtons } from \"../../molecules/post_detail/ReactionButtons\";\nimport { UserInfoBox } from \"../../molecules/UserInfoBox\";\n\ntype Props = {\n    userName: string;\n    userTitle: string;\n    userImg: string;\n    rating?: number;\n    title: string;\n    body: string;\n    commentVal?: number;\n    likeVal?: number;\n};\n\nexport const DetailBox: VFC<Props> = (props) => {\n    const {\n        userName = \"\",\n        userTitle = \"\",\n        userImg = \"\",\n        rating,\n        title = \"\",\n        body = \"\",\n        commentVal,\n        likeVal,\n    } = props;\n    return (\n        <Box>\n            <Flex textAlign=\"left\">\n                <Box mr={2}>\n                    <UserInfoBox\n                        name={userName}\n                        user_title={userTitle}\n                        img={userImg}\n                    />\n                </Box>\n                {/* コメントのときは評価の星を表示しない */}\n                {rating === undefined ? <div /> : <Rating rating={rating} />}\n            </Flex>\n            <Box mt={5} textAlign=\"left\">\n                <Text fontSize=\"lg\" fontWeight=\"bold\">\n                    {title}\n                </Text>\n                <Text fontSize=\"sm\" pr={10} mt={2}>\n                    {body}\n                </Text>\n            </Box>\n            {/* コメントのときは、「コメント」、「いいね」、「シェア」を表示しない */}\n            {commentVal === undefined || likeVal === undefined ? (\n                <div />\n            ) : (\n                <ReactionButtons comment_val={commentVal} like_val={likeVal} />\n            )}\n        </Box>\n    );\n};\n","import { useEffect, VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { homeState } from \"../../../../store/homeState\";\nimport { useApiPostDetail } from \"../../../../hooks/api/useApiPostDetail\";\nimport json_postDetail from \"../../../../test_json/postDetail.json\";\nimport { LoadingCard } from \"../../../organisms/home/post/LoadingCard\";\nimport { LoadingPageSpinner } from \"../../../organisms/LoadingPageSpinner\";\nimport { MusicDetailBox } from \"../../../organisms/MusicDetailBox\";\nimport { DetailBox } from \"../../../organisms/detail/DetailBox\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { getPostDetail, api_postDetail, loading } = useApiPostDetail(id);\n    useEffect(() => getPostDetail(), []);\n\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        /* ↓本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    <MusicDetailBox\n                        id={api_postDetail.track.id}\n                        title={api_postDetail.track.title}\n                        album={api_postDetail.track.album}\n                        artist={api_postDetail.track.artist}\n                        release={api_postDetail.track.release}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                    <DetailBox\n                        userName={api_postDetail.user.name}\n                        userTitle={api_postDetail.user.job}\n                        userImg={api_postDetail.user.img}\n                        rating={api_postDetail.review.star}\n                        title={api_postDetail.review.title}\n                        body={api_postDetail.review.body}\n                        commentVal={api_postDetail.reaction.comment_val}\n                        likeVal={api_postDetail.reaction.like_val}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                </Box>\n            )}\n        </>\n\n        /* ローカルでのテスト用*/\n        // <Box mx={5}>\n        //     <MusicDetailBox\n        //         id={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n        //         title={api_postDetail.track.title}\n        //         album={api_postDetail.track.album}\n        //         artist={api_postDetail.track.artist}\n        //         release={api_postDetail.track.release}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        //     <DetailBox\n        //         userName={api_postDetail.user.name}\n        //         userTitle={api_postDetail.user.job}\n        //         userImg={api_postDetail.user.img}\n        //         rating={api_postDetail.review.star}\n        //         title={api_postDetail.review.title}\n        //         body={api_postDetail.review.body}\n        //         commentVal={api_postDetail.reaction.comment_val}\n        //         likeVal={api_postDetail.reaction.like_val}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        // </Box>\n    );\n};\n","import { useCallback, useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport failed from \"../../test_json/failedDetail.json\";\nimport apiClient from \"../../client/apiClient\";\n\nexport const useApiPostDetail = ( id: string ) =>\n{\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n    const [ loading, setLoading ] = useState( false )\n    const getPostDetail = useCallback(() =>\n    {\n        setLoading( true );\n\n        apiClient\n        .get<PostsDataType>( `/api/posts/${ id }` )\n        .then( ( res ) => setApiPostDetail( res.data ) )\n        .catch( () =>\n        {\n        }\n        ).finally( () => setLoading( false ) );\n    },[])\n\n    return { getPostDetail, api_postDetail, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n    title: string;\n    body: string;\n};\n\nexport const Alert404: VFC<Props> = memo((props) => {\n    const { title, body } = props;\n    const history = useHistory();\n    const onClickPageBack = () => {\n        history.goBack();\n    };\n\n    return (\n        <Alert\n            status=\"error\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            textAlign=\"center\"\n            height=\"200px\"\n        >\n            <CloseButton onClick={onClickPageBack} ml=\"auto\" boxSize=\"30px\" />\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                {title}\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">{body}</AlertDescription>\n        </Alert>\n    );\n});\n","import { Alert404 } from \"../../../organisms/home/Alert404\";\n\nexport const Detail404 = () => {\n    return <Alert404 title=\"エラー\" body=\"投稿が見つかりませんでした。\" />;\n};\n","import { Breadcrumb, BreadcrumbItem, BreadcrumbLink } from \"@chakra-ui/react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { memo, useEffect, useState, VFC } from \"react\";\n\ntype Props = {\n    step: \"track\" | \"rate\" | \"check\";\n    goTrackInfo: () => void;\n    goRate: () => void;\n    goCheck: () => void;\n};\n\ntype Weight = \"normal\" | \"bold\";\ntype Color = \"black\" | \"gray.500\";\n\nexport const CreateBreadcrumb: VFC<Props> = memo((props) => {\n    const { step, goTrackInfo, goRate, goCheck } = props;\n\n    const [trackColor, setTrackColor] = useState<Color>(\"gray.500\");\n    const [rateColor, setRateColor] = useState<Color>(\"gray.500\");\n    const [checkColor, setCheckColor] = useState<Color>(\"gray.500\");\n    const [trackWeight, setTrackWeight] = useState<Weight>(\"normal\");\n    const [rateWeight, setRateWeight] = useState<Weight>(\"normal\");\n    const [checkWeight, setCheckWeight] = useState<Weight>(\"normal\");\n\n    useEffect(() => {\n        // 一旦初期化して変化部分のみ値を指定する\n        setTrackWeight(\"normal\");\n        setTrackColor(\"gray.500\");\n        setRateWeight(\"normal\");\n        setRateColor(\"gray.500\");\n        setCheckWeight(\"normal\");\n        setCheckColor(\"gray.500\");\n        if (step === \"track\") {\n            setTrackWeight(\"bold\");\n            setTrackColor(\"black\");\n        } else if (step === \"rate\") {\n            setRateWeight(\"bold\");\n            setRateColor(\"black\");\n        } else {\n            setCheckWeight(\"bold\");\n            setCheckColor(\"black\");\n        }\n    }, [step]);\n\n    return (\n        <Breadcrumb\n            spacing=\"20px\"\n            ml=\"50px\"\n            separator={<ChevronRightIcon color=\"gray.500\" fontSize=\"30px\" />}\n            textAlign=\"left\"\n            mb=\"30px\"\n        >\n            <BreadcrumbItem isCurrentPage={step === \"track\"}>\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={trackColor}\n                    fontWeight={trackWeight}\n                    onClick={goTrackInfo}\n                >\n                    楽曲情報\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem isCurrentPage={step === \"rate\"}>\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={rateColor}\n                    fontWeight={rateWeight}\n                    onClick={goRate}\n                >\n                    評価\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem isCurrentPage={step === \"check\"}>\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={checkColor}\n                    fontWeight={checkWeight}\n                    onClick={goCheck}\n                >\n                    内容確認\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n        </Breadcrumb>\n    );\n});\n","import { Button } from \"@chakra-ui/button\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    onClick: () => void;\n    mt?: string;\n};\n\nexport const GoButton: VFC<Props> = (props) => {\n    const { onClick, mt = \"none\" } = props;\n    return (\n        <Button\n            mt={mt}\n            w=\"50px\"\n            h=\"30px\"\n            ml=\"auto\"\n            bg=\"orange.300\"\n            color=\"white\"\n            onClick={onClick}\n            fontSize=\"15px\"\n        >\n            次へ\n        </Button>\n    );\n};\n","import { Box, Button, Flex, Input, Text } from \"@chakra-ui/react\";\nimport { useState, VFC } from \"react\";\nimport { gradationGreen } from \"../../atoms/color/gradationGreen\";\nimport { MusicDetailBox } from \"../MusicDetailBox\";\nimport { GoButton } from \"../../atoms/button/GoButton\";\n\ntype Props = {\n    goRate: () => void;\n};\n\nexport const CreateTrackInfo: VFC<Props> = (props) => {\n    const { goRate } = props;\n    const [isExist, setIsExist] = useState<boolean>(false);\n\n    return (\n        <Box>\n            {/* 入力された共有URIから楽曲が取得できたらその情報を表示 */}\n            {isExist || (\n                <MusicDetailBox\n                    id={undefined}\n                    title=\"???\"\n                    album={undefined}\n                    artist={undefined}\n                    release={undefined}\n                />\n            )}\n            <Flex flexDirection=\"column\" mt=\"30px\">\n                <Text fontSize=\"lg\" ml=\"10px\">\n                    Spotifyの楽曲用シェアURLを入力してください\n                </Text>\n                <Flex mt=\"10px\">\n                    <Input w=\"80%\" />\n                    <Button\n                        ml=\"2%\"\n                        w=\"20%\"\n                        bgGradient={gradationGreen}\n                        color=\"white\"\n                        fontSize=\"lg\"\n                    >\n                        確認\n                    </Button>\n                </Flex>\n                <GoButton onClick={goRate} mt=\"30px\" />\n            </Flex>\n        </Box>\n    );\n};\n","import { Button } from \"@chakra-ui/button\";\nimport { ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    onClick: () => void;\n    mt?: string;\n};\n\nexport const BackButton: VFC<Props> = (props) => {\n    const { onClick, mt = \"none\" } = props;\n    return (\n        <Button\n            mt={mt}\n            w=\"50px\"\n            h=\"30px\"\n            ml=\"auto\"\n            bg=\"orange.300\"\n            color=\"white\"\n            onClick={onClick}\n            fontSize=\"15px\"\n        >\n            戻る\n        </Button>\n    );\n};\n","import { Box, Flex, Input, Text, Textarea } from \"@chakra-ui/react\";\nimport { useState, VFC } from \"react\";\nimport { GoButton } from \"../../atoms/button/GoButton\";\nimport { BackButton } from \"../../atoms/button/BackButton\";\n\ntype Props = {\n    goTrackInfo: () => void;\n    goCheck: () => void;\n};\n\nexport const CreateRate: VFC<Props> = (props) => {\n    const { goTrackInfo, goCheck } = props;\n\n    return (\n        <Flex flexDirection=\"column\" mt=\"30px\">\n            <Flex flexDirection=\"column\">\n                <Text fontSize=\"lg\" ml=\"10px\">\n                    ① 評価\n                </Text>\n                <Text\n                    fontSize=\"50px\"\n                    ml=\"10px\"\n                    mx=\"auto\"\n                    fontWeight=\"light\"\n                    color=\"gray.400\"\n                >\n                    ☆☆☆☆☆\n                </Text>\n            </Flex>\n            <Box mt=\"30px\">\n                <Text fontSize=\"lg\" ml=\"10px\">\n                    ① タイトル\n                </Text>\n                <Input type=\"text\" w=\"100%\" mt=\"10px\" />\n            </Box>\n            <Box mt=\"30px\">\n                <Text fontSize=\"lg\" ml=\"10px\" h=\"auto\">\n                    ① 本文\n                </Text>\n                <Textarea type=\"text\" w=\"100%\" h=\"100px\" mt=\"10px\" />\n            </Box>\n            <Flex ml=\"auto\">\n                <Box>\n                    <BackButton onClick={goTrackInfo} mt=\"30px\" />\n                </Box>\n                <Box w=\"30px\" />\n                <Box>\n                    <GoButton onClick={goCheck} mt=\"30px\" />\n                </Box>\n            </Flex>\n        </Flex>\n    );\n};\n","export const CreateCheck = () => {\n    return <h1>入力コメント確認フォーム</h1>;\n};\n","import { memo, useState } from \"react\";\nimport {\n    Box,\n    Breadcrumb,\n    BreadcrumbItem,\n    BreadcrumbLink,\n} from \"@chakra-ui/react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\n\nimport { CreateBreadcrumb } from \"../../molecules/create/CreateBreadcrumb\";\nimport { CreateTrackInfo } from \"../../organisms/create/CreateTrackInfo\";\nimport { CreateRate } from \"../../organisms/create/CreateRate\";\nimport { CreateCheck } from \"../../organisms/create/CreateCheck\";\nimport { useSetRecoilState } from \"recoil\";\nimport { homeState } from \"../../../store/homeState\";\nimport { Prompt } from \"react-router\";\n\nexport const Create = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"create\" });\n\n    const [step, setStep] = useState<\"track\" | \"rate\" | \"check\">(\"track\");\n    const goTrackInfo = () => {\n        setStep(\"track\");\n    };\n    const goRate = () => {\n        setStep(\"rate\");\n    };\n    const goCheck = () => {\n        setStep(\"check\");\n    };\n\n    return (\n        <Box textAlign=\"left\">\n            {/* react-routeの「Priompt」によって、ページを離れようとしたときに警告 */}\n            <Prompt message=\"ページを離れると入力した内容が失われます\" />\n            <CreateBreadcrumb\n                step={step}\n                goTrackInfo={goTrackInfo}\n                goRate={goRate}\n                goCheck={goCheck}\n            />\n            {step === \"track\" ? (\n                <CreateTrackInfo goRate={goRate} />\n            ) : step === \"rate\" ? (\n                <CreateRate goCheck={goCheck} goTrackInfo={goTrackInfo} />\n            ) : (\n                <CreateCheck />\n            )}\n        </Box>\n    );\n});\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/detail/PostDetail\";\nimport { Detail404 } from \"../components/pages/home/detail/Detail404\";\nimport { Create } from \"../components/pages/create/Create\";\n\nexport const homeRoutes = [\n    {\n        path: \"\",\n        exact: true,\n        children: <Recent />,\n    },\n    {\n        path: \"follow_post\",\n        exact: false,\n        // children: <FollowPosts />,\n        children: <Recent />,\n    },\n    {\n        path: \"popular\",\n        exact: false,\n        // children: <Popular />,\n        children: <Recent />,\n    },\n    {\n        path: \"post/:id\",\n        exact: false,\n        children: <PostDetail />,\n    },\n    {\n        path: \"create_post\",\n        exact: false,\n        children: <Create />,\n    },\n    {\n        path: \"page404\",\n        exact: false,\n        children: <Detail404 />,\n    },\n    {\n        path: \"*\",\n        exact: false,\n        children: <Recent />,\n    },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n    display?: {};\n    onClick: () => void;\n    size?: string;\n    ml?: string;\n    my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n    const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n    return (\n        <IconButton\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            color=\"white\"\n            aria-label=\"Open menu\"\n            icon={<HamburgerIcon />}\n            size={size}\n            ml={ml}\n            my={my}\n            display={display}\n            onClick={onClick}\n        />\n    );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.goBack();\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : topic === \"create\" ? (\n                        <HomePostTitle>投稿する</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<HiArrowNarrowLeft />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"25px\"\n                                onClick={onBackHome}\n                                mt=\"auto\"\n                                boxSize={{ base: \"29px\", md: \"36px\" }}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n                px={5}\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { atom } from \"recoil\";\n\nexport const loginState = atom( {\n    key: \"loginState\",\n    default: { isLogin:true }\n} );\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage } from \"../message/useMessage\";\n\ntype Me = {\n    id: string;\n    name: string;\n    email: string;\n}\n\nconst NullMe:Me = {id:\"\", name:\"\", email:\"\"}\n\nexport const useApiMe = () =>\n{\n    const [ loading, setLoading ] = useState( false );\n    const [ apiMe, setApiMe ] = useState<Me>(NullMe);\n    const setIsLogin = useSetRecoilState( loginState );\n\n    // ユーザーの情報を取得できない＝ログインしていないとみなし、\n    // その場合はログイン状態管理（isLogin）がfalseとなる\n\n    const getMe = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Me>(`/api/me`)\n            .then( ( res ) =>\n            {\n                setApiMe( res.data );\n                setIsLogin( { isLogin:true});\n            }\n            )\n            .catch( () =>\n            {\n                setIsLogin( { isLogin:false});\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getMe, apiMe, loading };\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, []);\n\n  return { showMessage };\n};\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    onClick: () => void;\n    disabled?: boolean;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n    const { children, w = \"md\", onClick, disabled = false } = props;\n    return (\n        <Button\n            colorScheme=\"gray\"\n            variant=\"ghost\"\n            solid=\"none\"\n            w=\"w\"\n            _hover={{ cursor: \"pointer\" }}\n            _focus={{ boxShadow: \"none\" }}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </Button>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    disabled?: boolean;\n    onClick?: () => void;\n    mt?: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n    const { children, w = \"100%\", onClick, disabled, mt = \"none\" } = props;\n    return (\n        <Button\n            onClick={onClick}\n            color=\"white\"\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            w={w}\n            _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n            disabled={disabled}\n            mt={mt}\n        >\n            {children}\n        </Button>\n    );\n};\n","import { Box, Button, Flex, Text } from \"@chakra-ui/react\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useApiMe } from \"../../hooks/api/useApiMe\";\nimport { useLogout } from \"../../hooks/login/useLogout\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n    const history = useHistory();\n    // ユーザーの情報を取得\n    const { getMe, apiMe } = useApiMe();\n    const { logout } = useLogout();\n\n    useEffect(() => getMe(), [getMe]);\n\n    const onRecent = () => {\n        history.push(\"/\");\n    };\n    const onFollowPost = () => {\n        history.push(\"/follow_post\");\n    };\n    const onPopular = () => {\n        history.push(\"/popular\");\n    };\n\n    const onCreate = () => {\n        history.push(\"/create_post\");\n    };\n\n    const onClickLogout = () => {\n        logout();\n    };\n    return (\n        <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n            <Link to=\"/\">\n                <Text\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    my=\"20px\"\n                    ml=\"10px\"\n                >\n                    Bebop!\n                </Text>\n            </Link>\n\n            <MenuButton w=\"100%\" onClick={onRecent}>\n                最新の投稿\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onFollowPost} disabled={true}>\n                フォロー\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onPopular} disabled={true}>\n                人気の投稿\n            </MenuButton>\n            <Flex mt=\"25vh\" ml=\"30px\">\n                <PrimaryButton w=\"130px\" onClick={onCreate}>\n                    投稿\n                </PrimaryButton>\n            </Flex>\n\n            <Box mt=\"25vh\" w=\"100%\" onClick={onClickLogout}>\n                <UserInfoBox\n                    img=\"https://source.unsplash.com/brFsZ7qszSY\"\n                    name={apiMe.name}\n                    user_title=\"学生\"\n                    pl=\"30px\"\n                />\n                <Button\n                    fontSize={5}\n                    w=\"80px\"\n                    h=\"25px\"\n                    colorScheme=\"red\"\n                    mt=\"15px\"\n                >\n                    ログアウト\n                </Button>\n            </Box>\n        </Flex>\n    );\n});\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogout = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n    const setIsLogin = useSetRecoilState( loginState );\n\n    const logout = useCallback( ( ) =>\n    {\n        axios.post( \"api/logout\" )\n            .then( res =>\n            {\n                localStorage.removeItem( \"auth\" );\n                setIsLogin( { isLogin:false});\n                history.push( \"/login\" );\n                showMessage( { title: \"ログアウトしました\", status: \"success\" } );\n            } ).catch( res =>\n            {\n                showMessage( { title: \"ログアウトに失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return { logout };\n}\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n    children: ReactNode;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n    const { children, isOpen, onClose } = props;\n\n    return (\n        <Box>\n            {/* 要素を横並びに */}\n            <Flex spacing=\"none\">\n                {/* メニューバー */}\n                <Flex mx=\"auto\" w=\"100%\">\n                    <Box\n                        w=\"15%\"\n                        h=\"100%\"\n                        display={{ base: \"none\", md: \"inline\" }}\n                        pr=\"auto\"\n                        ml=\"18%\"\n                    >\n                        <MenuContents />\n                    </Box>\n                    {children}\n                </Flex>\n            </Flex>\n            <MenuDrawer isOpen={isOpen} onClose={onClose} />\n        </Box>\n    );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/home/HomePostBox\";\nimport { MenuBar } from \"../organisms/home/MenuBar\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <Box w=\"100%\">\n            <MenuBar isOpen={isOpen} onClose={onClose}>\n                <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n            </MenuBar>\n        </Box>\n    );\n});\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogin = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n\n    const [ user, setUser ] = useState();\n    const setIsLogin = useSetRecoilState( loginState );\n\n    const login = useCallback( (mail: string, password: string ) =>\n    {\n        apiClient.get( 'sanctum/csrf-cookie')\n            .then( res =>\n            {\n                apiClient.post( \"/api/login\", {\n                    email: mail,\n                    password: password\n                })\n                    .then( res =>\n                    {\n                        showMessage( { title: \"ログインしました\", status: \"success\" } );\n                        setIsLogin( { isLogin:true});\n                        history.push( \"/\" );\n                    } ).catch( error =>\n                    {\n                        showMessage( { title: \"ユーザーが見つかりません\", status: \"error\" } );\n                    })\n            })\n    }, [] );\n    return { login };\n}\n","import { Box, Text, Input } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    value: string;\n    inputType?: string;\n};\n\nexport const LoginForm: VFC<Props> = (props) => {\n    const { onChange, value, children, inputType = \"text\" } = props;\n\n    return (\n        <Box textAlign=\"start\" h=\"80px\">\n            <Text ml={1} mb={1} fontSize=\"sm\">\n                {children}\n            </Text>\n            <Input type={inputType} onChange={onChange} value={value} />\n        </Box>\n    );\n};\n","import {\n    Tabs,\n    Text,\n    Box,\n    Flex,\n    Tab,\n    TabList,\n    TabPanels,\n    TabPanel,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\nimport { ChangeEvent, useState } from \"react\";\n\nimport { useLogin } from \"../../hooks/login/useLogin\";\nimport { LoginForm } from \"../molecules/LoginForm\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useRegister } from \"../../hooks/login/useRegister\";\n\nexport const Login = () => {\n    // ログインフォーム用state\n    const [loginMailAddress, setLoginMailAddress] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    // 新規登録フォーム用state\n    const [regMailAddress, setRegMailAddress] = useState(\"\");\n    const [regPassword, setRegPassword] = useState(\"\");\n    const [regPasswordConfirm, setRegPasswordConfirm] = useState(\"\");\n    const [regName, setRegName] = useState(\"\");\n\n    // ログインフォーム入力関数\n    const onChangeLoginMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginMailAddress(e.target.value);\n\n    const onChangeLoginPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginPassword(e.target.value);\n\n    // ログインフォーム入力関数\n    const onChangeRegMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegMailAddress(e.target.value);\n\n    const onChangeRegPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPassword(e.target.value);\n\n    const onChangeRegPasswordConfirm = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPasswordConfirm(e.target.value);\n\n    const onChangeRegName = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegName(e.target.value);\n\n    const { register } = useRegister();\n    const onClickRegister = () => {\n        register(regName, regMailAddress, regPassword);\n    };\n\n    const { login } = useLogin();\n    const onClickLogin = () => {\n        login(loginMailAddress, loginPassword);\n    };\n\n    return (\n        <Box\n            w=\"100%\"\n            h=\"100vh\"\n            textAlign=\"center\"\n            pt={{ base: \"none\", sm: \"10vh\" }}\n        >\n            {/* 画面サイズが大きいときはカードの外に「Bebop！を表示」 */}\n            <Text\n                display={{ base: \"none\", sm: \"inline\" }}\n                as=\"h1\"\n                fontSize=\"60px\"\n                bgGradient=\"linear(to-tl, green, #c4de71)\"\n                bgClip=\"text\"\n                fontWeight=\"bold\"\n            >\n                Bebop!\n            </Text>\n            {/* 以下、カード内 */}\n            <Flex\n                bg=\"white\"\n                borderRadius={{ base: \"none\", sm: \"10px\" }}\n                p=\"20px\"\n                shadow={{ base: \"none\", sm: \"md\" }}\n                w={{ base: \"100%\", sm: \"400px\" }}\n                h={{ base: \"100%\", sm: \"500px\" }}\n                textAlign=\"center\"\n                flexDirection=\"column\"\n                mx=\"auto\"\n                mt={{ base: \"none\", sm: \"2vh\" }}\n            >\n                <Text\n                    display={{ base: \"inline\", sm: \"none\" }}\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    mb=\"20px\"\n                >\n                    Bebop!\n                </Text>\n                {/* タブを作成 */}\n                <Tabs isFitted variant=\"enclosed\">\n                    <TabList mb=\"1em\">\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            ログイン\n                        </Tab>\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            新規登録\n                        </Tab>\n                    </TabList>\n\n                    {/* タブの中身を記述 */}\n                    <TabPanels>\n                        {/* ログイン用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <LoginForm\n                                    onChange={onChangeLoginMailAddress}\n                                    value={loginMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeLoginPassword}\n                                    value={loginPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </LoginForm>\n                                <PrimaryButton\n                                    onClick={onClickLogin}\n                                    disabled={\n                                        loginMailAddress === \"\" ||\n                                        loginPassword === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    ログイン\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                        {/* 新規登録用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <LoginForm\n                                    onChange={onChangeRegName}\n                                    value={regName}\n                                >\n                                    ユーザー名\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeRegMailAddress}\n                                    value={regMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeRegPassword}\n                                    value={regPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeRegPasswordConfirm}\n                                    value={regPasswordConfirm}\n                                    inputType=\"password\"\n                                >\n                                    パスワード（再入力）\n                                </LoginForm>\n                                <PrimaryButton\n                                    onClick={onClickRegister}\n                                    disabled={\n                                        regMailAddress === \"\" ||\n                                        regPassword === \"\" ||\n                                        regPasswordConfirm === \"\" ||\n                                        regPassword !== regPasswordConfirm ||\n                                        regName === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    新規登録\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n            </Flex>\n        </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback } from \"react\"\nimport { useMessage} from \"../message/useMessage\";\nimport { useLogin } from \"./useLogin\";\n\n\nexport const useRegister = () => {\n    const { showMessage } = useMessage();\n    const { login } = useLogin();\n\n\n\n    const register = useCallback( (name:string, mail: string, password: string ) =>\n    {\n        const data = {\n            name: name,\n            email: mail,\n            password: password\n        }\n\n        axios.post( \"api/register\", data )\n            .then( ( res ) =>\n            {\n                if ( res.status == 200 )\n                {\n                    login(mail,password)\n                }\n            } )\n            .catch(  () =>\n            {\n                showMessage( { title: \"新規登録に失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return {  register };\n}\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\nimport { loginState } from \"../store/loginState\";\nimport { AuthGuard } from \"./auth_route/AuthGuard\";\n\nexport const Router = () => {\n    const { isLogin } = useRecoilValue(loginState);\n    return (\n        <Switch>\n            <Route exact path=\"/login\">\n                {/* ログイン済の場合はトップページにリダイレクトされる */}\n                {isLogin ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            {/* 未ログインの場合は「AuthGuard」によってログイン画面へリダイレクトされる */}\n            {/* <AuthGuard> */}\n            <HomeLayout>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        render={({ match: { url } }) => (\n                            <Switch>\n                                {homeRoutes.map((route) => (\n                                    <Route\n                                        key={route.path}\n                                        exact={route.exact}\n                                        path={`${url}${route.path}`}\n                                    >\n                                        {route.children}\n                                    </Route>\n                                ))}\n                            </Switch>\n                        )}\n                    />\n                </Switch>\n            </HomeLayout>\n            {/* </AuthGuard> */}\n            <Route path=\"*\">\n                <Page404 />\n            </Route>\n        </Switch>\n    );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}