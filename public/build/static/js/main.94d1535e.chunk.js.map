{"version":3,"sources":["components/atoms/button/Rating.tsx","theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/Home/post/PostCard.tsx","components/organisms/LoadingPageSpinner.tsx","components/pages/home/Recent.tsx","hooks/api/useApiPosts.tsx","components/pages/home/FollowPosts.tsx","components/pages/home/Popular.tsx","components/molecules/post_detail/ReactionButtons.tsx","components/pages/home/detail/PostDetail.tsx","hooks/api/useApiPostDetail.ts","components/organisms/Home/Alert404.tsx","components/pages/home/Home404.tsx","components/pages/home/detail/Detail404.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/Home/HomePostBox.tsx","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","components/organisms/Home/MenuDrawer.tsx","components/organisms/Home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Page404.tsx","components/pages/Login.tsx","router/Router.tsx","App.tsx","index.tsx"],"names":["rating_stars","theme","extendTheme","styles","global","body","backgroundColor","color","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","i","LikeButton","value","icon","size","bg","ml","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","LoadingPageSpinner","thickness","speed","emptyColor","Recent","useSetRecoilState","setTopic","sort","useState","api_posts","setApiPosts","loading","setLoading","getPosts","useCallback","axios","get","then","res","data","catch","finally","useApiPosts","useEffect","map","obj","Object","assign","FollowPosts","Popular","ReactionButtons","justifyContent","mx","PostDetail","failed","api_postDetail","setApiPostDetail","getPostDetail","useApiPostDetail","useParams","ratio","frameBorder","allow","album","release","orientation","pr","Alert404","status","variant","height","goBack","maxWidth","HomePage404","Detail404","homeRoutes","path","exact","HamburgerButton","display","bgGradient","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","ArrowBack","overflow","align","pt","MenuButton","colorScheme","solid","_focus","boxShadow","PrimaryButton","MenuContents","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","spacing","HomeLayout","useDisclosure","Page404","Login","Router","render","url","match","route","App","className","style","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94d1535e.chunk.js","sourcesContent":["import { Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    rating: number;\n};\nlet rating_stars: string;\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    rating_stars = \"\";\n\n    for (let i = 0; i < 5; i++) {\n        {\n            i < rating ? (rating_stars += \"★\") : (rating_stars += \"☆\");\n        }\n    }\n\n    return (\n        <Text fontSize=\"30px\" color=\"orange\">\n            {rating_stars}\n        </Text>\n    );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\ntype HomeStateType = {\n    key: \"string\",\n    default: {\n        topic:\"recent\"|\"follow\"|\"popular\"|\"detail\"\n    }\n}\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n  img: string;\n  title: string;\n  artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n  const { img, title, artist } = props;\n\n  return (\n    <Flex w=\"30%\" p=\"auto\">\n      <Box m=\"auto\">\n        <Image src={img} boxSize=\"150\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n        <Box mt=\"5%\">\n          <Text fontSize=\"md\" fontWeight=\"bold\">\n            {title}\n          </Text>\n          <Text fontSize=\"xs\">{artist}</Text>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n  value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"like\"\n        icon={<GoHeart size=\"27px\" />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n  return (\n    <IconButton\n      aria-label=\"like\"\n      icon={<BsShareFill />}\n      size=\"0px\"\n      color=\"gray\"\n      bg=\"none\"\n    />\n  );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    mb: string;\n    onClick?: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n    const { children, mb, onClick } = props;\n\n    return (\n        <Flex\n            w=\"90%\"\n            h=\"33vh\"\n            bg=\"white\"\n            borderRadius=\"10px\"\n            px=\"30px\"\n            py=\"15px\"\n            shadow=\"md\"\n            mb={mb}\n            _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n            onClick={onClick}\n        >\n            {children}\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/home/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"1.5%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","import { memo } from \"react\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nexport const LoadingPageSpinner = memo(() => {\n    return (\n        <Spinner\n            thickness=\"4px\"\n            speed=\"0.8s\"\n            emptyColor=\"gray.200\"\n            color=\"#c4de71\"\n            size=\"xl\"\n            m=\"auto\"\n            mt=\"50%\"\n        />\n    );\n});\n","import { memo, useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/Home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useApiPosts } from \"../../../hooks/api/useApiPosts\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    const { getPosts, api_posts, loading } = useApiPosts(\"recent\");\n    useEffect(() => getPosts(), [getPosts]);\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    // const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        /* 本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    {/* apiからjsonを引っ張り、map関数でカードを繰り返し描画 */}\n                    {api_posts.map((obj) => (\n                        <Box key={obj.id}>\n                            {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                            <PostCard post={Object.assign(obj)} />\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </>\n\n        /* ↓ローカル開発用 */\n        // <Box>\n        //     {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n        //     {api_posts.map((obj) =>\n        //         <Box key={obj.id}>\n        //             {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n        //             <PostCard post={Object.assign(obj)} />\n        //         </Box>\n        //     )}\n        // </Box>\n    );\n});\n","import axios from \"axios\";\nimport { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\n\ntype Sort = \"recent\" | \"follow\" | \"popular\";\n\nexport const useApiPosts = (sort: Sort) => {\n    const [api_posts, setApiPosts] = useState<Array<PostsDataType>>([]);\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    const getPosts = useCallback(() => {\n        setLoading(true);\n        axios\n            .get<Array<PostsDataType>>(`/api/posts/recent`)\n            .then((res) => setApiPosts(res.data))\n            .catch(() => {\n                history.push(\"/home/page404\");\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getPosts, api_posts, loading };\n};\n","import { memo } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\nimport { HomePage404 } from \"./Home404\";\n\nexport const FollowPosts = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"follow\" });\n\n    return <LoadingPageSpinner />;\n});\n","import { memo } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box, Spinner } from \"@chakra-ui/react\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { LoadingCard } from \"../../organisms/Home/post/LoadingCard\";\nimport { HomePage404 } from \"./Home404\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Popular = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"popular\" });\n    return (\n        <Box>\n            <LoadingPageSpinner />\n        </Box>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { useEffect, VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { AspectRatio, Flex, Text, Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { homeState } from \"../../../../store/homeState\";\nimport { ReactionButtons } from \"../../../molecules/post_detail/ReactionButtons\";\nimport { useApiPostDetail } from \"../../../../hooks/api/useApiPostDetail\";\nimport json_postDetail from \"../../../../test_json/postDetail.json\";\nimport { LoadingCard } from \"../../../organisms/Home/post/LoadingCard\";\nimport { LoadingPageSpinner } from \"../../../organisms/LoadingPageSpinner\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { getPostDetail, api_postDetail, loading } = useApiPostDetail(id);\n    useEffect(() => getPostDetail(), []);\n\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        /* ↓本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box mx={5}>\n                    <Flex>\n                        <AspectRatio ratio={1 / 1} w=\"300px\">\n                            <iframe\n                                src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n                                frameBorder=\"0\"\n                                allow=\"encrypted-media\"\n                            />\n                        </AspectRatio>\n                        <Flex\n                            alignItems=\"start\"\n                            flexFlow=\"column\"\n                            ml={5}\n                            mt=\"auto\"\n                        >\n                            <Text fontWeight=\"bold\" fontSize=\"md\">\n                                {api_postDetail.track.title}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                収録アルバム：{api_postDetail.track.album}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                アーティスト：{api_postDetail.track.artist}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                リリース：{api_postDetail.track.release}\n                            </Text>\n                        </Flex>\n                    </Flex>\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                    <Flex textAlign=\"left\">\n                        <Box mr={2}>\n                            <UserInfoBox\n                                name={api_postDetail.user.name}\n                                user_title={api_postDetail.user.job}\n                                img={api_postDetail.user.img}\n                            />\n                        </Box>\n                        <Rating rating={api_postDetail.review.star} />\n                    </Flex>\n                    <Box mt={5} textAlign=\"left\">\n                        <Text fontSize=\"lg\" fontWeight=\"bold\">\n                            {api_postDetail.review.title}\n                        </Text>\n                        <Text fontSize=\"sm\" pr={10} mt={2}>\n                            {api_postDetail.review.body}\n                        </Text>\n                    </Box>\n                    <ReactionButtons\n                        comment_val={api_postDetail.reaction.comment_val}\n                        like_val={api_postDetail.reaction.like_val}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                </Box>\n            )}\n        </>\n\n        /* ローカルでのテスト用*/\n        // <Box mx={5}>\n        //     <Flex>\n        //         <AspectRatio ratio={1 / 1} w=\"300px\">\n        //             <iframe\n        //                 src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n        //                 frameBorder=\"0\"\n        //                 allow=\"encrypted-media\"\n        //             />\n        //         </AspectRatio>\n        //         <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\">\n        //             <Text fontWeight=\"bold\" fontSize=\"md\">\n        //                 {api_postDetail.track.title}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 収録アルバム：{api_postDetail.track.album}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 アーティスト：{api_postDetail.track.artist}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 リリース：{api_postDetail.track.release}\n        //             </Text>\n        //         </Flex>\n        //     </Flex>\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        //     <Flex textAlign=\"left\">\n        //         <Box mr={2}>\n        //             <UserInfoBox\n        //                 name={api_postDetail.user.name}\n        //                 user_title={api_postDetail.user.job}\n        //                 img={api_postDetail.user.img}\n        //             />\n        //         </Box>\n        //         <Rating rating={api_postDetail.review.star} />\n        //     </Flex>\n        //     <Box mt={5} textAlign=\"left\">\n        //         <Text fontSize=\"lg\" fontWeight=\"bold\">\n        //             {api_postDetail.review.title}\n        //         </Text>\n        //         <Text fontSize=\"sm\" pr={10} mt={2}>\n        //             {api_postDetail.review.body}\n        //         </Text>\n        //     </Box>\n        //     <ReactionButtons\n        //         comment_val={api_postDetail.reaction.comment_val}\n        //         like_val={api_postDetail.reaction.like_val}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        // </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport failed from \"../../test_json/postDetail.json\";\nimport { useHistory} from \"react-router-dom\" ;\n\n\nexport const useApiPostDetail = ( id: string ) =>\n{\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n    const [loading, setLoading] = useState(false)\n    const history = useHistory();\n\n    const getPostDetail = useCallback(() =>\n    {\n        setLoading( true );\n\n        axios\n        .get<PostsDataType>( `/api/posts/${ id }` )\n        .then( ( res ) => setApiPostDetail( res.data ) )\n        .catch( () =>\n        {\n            history.push( \"/home/page404\" )\n        } ).finally( ()=>setLoading(false));\n    },[])\n\n    return { getPostDetail, api_postDetail, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n    title: string;\n    body: string;\n};\n\nexport const Alert404: VFC<Props> = memo((props) => {\n    const { title, body } = props;\n    const history = useHistory();\n    const onClickPageBack = () => {\n        history.goBack();\n    };\n\n    return (\n        <Alert\n            status=\"error\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            textAlign=\"center\"\n            height=\"200px\"\n        >\n            <CloseButton onClick={onClickPageBack} ml=\"auto\" boxSize=\"30px\" />\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                {title}\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">{body}</AlertDescription>\n        </Alert>\n    );\n});\n","import { Alert404 } from \"../../organisms/Home/Alert404\";\n\nexport const HomePage404 = () => {\n    return <Alert404 title=\"エラー\" body=\"データの読み込みに失敗しました。\" />;\n};\n","import { Alert404 } from \"../../../organisms/Home/Alert404\";\n\nexport const Detail404 = () => {\n    return <Alert404 title=\"エラー\" body=\"投稿が見つかりませんでした。\" />;\n};\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/detail/PostDetail\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { HomePage404 } from \"../components/pages/home/Home404\";\nimport { Detail404 } from \"../components/pages/home/detail/Detail404\";\n\nexport const homeRoutes = [\n    {\n        path: \"/\",\n        exact: true,\n        children: <Recent />,\n    },\n    {\n        path: \"/follow_post\",\n        exact: false,\n        children: <FollowPosts />,\n    },\n    {\n        path: \"/popular\",\n        exact: false,\n        children: <Popular />,\n    },\n    {\n        path: \"/post/:id\",\n        exact: false,\n        children: <PostDetail />,\n    },\n    {\n        path: \"/page404\",\n        exact: false,\n        children: <Detail404 />,\n    },\n    {\n        path: \"*\",\n        exact: false,\n        children: <HomePage404 />,\n    },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  display?: {};\n  onClick: () => void;\n  size?: string;\n  ml?: string;\n  my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n  const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n  return (\n    <IconButton\n      bgGradient=\"linear(to-tl, green, #c4de71)\"\n      color=\"white\"\n      aria-label=\"Open menu\"\n      icon={<HamburgerIcon />}\n      size={size}\n      ml={ml}\n      my={my}\n      display={display}\n      onClick={onClick}\n    />\n  );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.push(\"/home\");\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<ArrowBackIcon />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"xl\"\n                                onClick={onBackHome}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  w?: string;\n  onClick: () => void;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n  const { children, w = \"md\", onClick } = props;\n  return (\n    <Button\n      colorScheme=\"gray\"\n      variant=\"ghost\"\n      solid=\"none\"\n      w=\"w\"\n      _hover={{ cursor: \"pointer\" }}\n      _focus={{ boxShadow: \"none\" }}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  w: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n  const { children, w } = props;\n  return (\n    <Button\n      color=\"white\"\n      bgGradient=\"linear(to-tl, green, #c4de71)\"\n      w={w}\n      _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { memo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n    const history = useHistory();\n    const onRecent = () => {\n        history.push(\"/home\");\n    };\n    const onFollowPost = () => {\n        history.push(\"/home/follow_post\");\n    };\n    const onPopular = () => {\n        history.push(\"/home/popular\");\n    };\n    return (\n        <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n            <Link to=\"/home\">\n                <Text\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    my=\"20px\"\n                    ml=\"10px\"\n                >\n                    Bebop!\n                </Text>\n            </Link>\n\n            <MenuButton w=\"100%\" onClick={onRecent}>\n                最新の投稿\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onFollowPost}>\n                フォロー\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onPopular}>\n                人気の投稿\n            </MenuButton>\n            <Flex mt=\"300px\" ml=\"30px\">\n                <PrimaryButton w=\"130px\">投稿</PrimaryButton>\n            </Flex>\n\n            <Box mt=\"200px\" w=\"100%\" ml=\"15%\">\n                <UserInfoBox\n                    img=\"https://source.unsplash.com/brFsZ7qszSY\"\n                    name=\"中村 優太\"\n                    user_title=\"学生\"\n                    pl=\"30px\"\n                />\n            </Box>\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n    children: ReactNode;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n    const { children, isOpen, onClose } = props;\n\n    return (\n        <Box>\n            {/* 要素を横並びに */}\n            <Flex spacing=\"none\">\n                {/* メニューバー */}\n                <Flex mx=\"auto\" w=\"100%\">\n                    <Box\n                        w=\"15%\"\n                        h=\"100vh\"\n                        display={{ base: \"none\", md: \"inline\" }}\n                        pr=\"auto\"\n                        ml=\"18%\"\n                    >\n                        <MenuContents />\n                    </Box>\n                    {children}\n                </Flex>\n            </Flex>\n            <MenuDrawer isOpen={isOpen} onClose={onClose} />\n        </Box>\n    );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/Home/HomePostBox\";\nimport { MenuBar } from \"../organisms/Home/MenuBar\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <Box w=\"100%\">\n            <MenuBar isOpen={isOpen} onClose={onClose}>\n                <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n            </MenuBar>\n        </Box>\n    );\n});\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import { Button } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\n\nexport const Login = () => {\n  const history = useHistory();\n  const onLogin = () => {\n    history.push(\"/home\");\n  };\n  return (\n    <>\n      <h1>ログインページ</h1>\n      <Button onClick={onLogin}>ログイン</Button>\n    </>\n  );\n};\n","import { Route, Switch } from \"react-router-dom\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\n\nexport const Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login />\n      </Route>\n      <Route\n        path=\"/home\"\n        render={({ match: { url } }) => (\n          <Switch>\n            {homeRoutes.map((route) => (\n              <Route\n                key={route.path}\n                exact={route.exact}\n                path={`${url}${route.path}`}\n              >\n                <HomeLayout>{route.children}</HomeLayout>\n              </Route>\n            ))}\n          </Switch>\n        )}\n      />\n      <Route path=\"*\">\n        <Page404 />\n      </Route>\n    </Switch>\n  );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}