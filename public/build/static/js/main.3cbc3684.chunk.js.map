{"version":3,"sources":["theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/Rating.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/home/post/PostCard.tsx","client/apiClient.ts","components/organisms/LoadingPageSpinner.tsx","components/pages/home/Recent.tsx","hooks/api/useGetPosts.ts","components/atoms/color/gradationGreen.ts","components/organisms/MusicDetailBox.tsx","components/molecules/post_detail/ReactionButtons.tsx","components/organisms/detail/DetailBox.tsx","components/pages/home/detail/PostDetail.tsx","hooks/api/useGetDetail.ts","components/organisms/home/Alert404.tsx","components/pages/home/detail/Detail404.tsx","components/molecules/create/CreateBreadcrumb.tsx","components/atoms/button/CreateTransButton.tsx","components/molecules/Form.tsx","hooks/message/useMessage.ts","components/organisms/create/CreateTrackInfo.tsx","hooks/api/useGetTrack.ts","hooks/useValidateTrackURL.ts","components/atoms/button/StarButton.tsx","components/molecules/create/FiveStarButton.tsx","components/organisms/create/CreateRate.tsx","components/organisms/create/CreateCheck.tsx","hooks/api/usePostCreate.ts","components/pages/Create.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/home/HomePostBox.tsx","store/loginState.ts","hooks/api/useGetMe.ts","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","hooks/login/useLogout.ts","components/organisms/home/MenuDrawer.tsx","components/organisms/home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Page404.tsx","hooks/login/useLogin.ts","components/pages/Login.tsx","hooks/login/useRegister.ts","router/auth_route/AuthGuard.tsx","router/Router.tsx","App.tsx","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","components","Button","baseStyle","_focus","outline","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","starSize","gap","fixedRating","toFixed","map","value","mx","ml","pt","LikeButton","icon","size","bg","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","apiClient","axios","create","baseURL","withCredentials","LoadingPageSpinner","thickness","speed","emptyColor","Recent","useSetRecoilState","setTopic","sort","useState","api_posts","setApiPosts","loading","setLoading","getPosts","useCallback","get","then","res","data","catch","finally","useGetPosts","useEffect","obj","Object","assign","gradationGreen","MusicDetailBox","undefined","album","release","ratio","bgGradient","frameBorder","allow","ReactionButtons","justifyContent","DetailBox","userName","userTitle","userImg","commentVal","likeVal","pr","PostDetail","failed","api_postDetail","setApiPostDetail","getPostDetail","useGetDetail","useParams","orientation","Alert404","status","variant","height","maxWidth","Detail404","CreateBreadcrumb","step","goTrackInfo","goRate","goCheck","isTrackNull","isRatesNull","trackColor","setTrackColor","rateColor","setRateColor","checkColor","setCheckColor","trackWeight","setTrackWeight","rateWeight","setRateWeight","checkWeight","setCheckWeight","canMoveRate","canMoveCheck","spacing","separator","ChevronRight","isCurrentPage","pointerEvents","CreateTransButton","isDisabled","text","Form","onChange","inputType","type","useMessage","toast","useToast","showMessage","position","duration","isClosable","CreateTrackInfo","onChangeTrackURL","trackUrl","trackId","setTrackId","trackData","saveTrackData","getTrack","saveTrack","useGetTrack","validateTrackURL","head","foot","url","regexHead","test","regexFoot","result","match","length","useValidateTrackURL","onceTrack","setOnceTrack","saveOnceTrackData","val","validatedTrackId","StarButton","num","rate","setRate","StarSize","zIndex","style","width","FiveStarButton","CreateRate","onChangeRate","onChangeTitle","onChangeBody","CreateCheck","setTransAlert","postCreate","usePostCreate","Create","setStep","setTrackUrl","setTitle","setBody","setIsTrackNull","setIsRatesNull","setTrackData","transAlert","message","e","target","bool","homeRoutes","path","exact","HamburgerButton","display","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","goBack","overflow","align","loginState","isLogin","NullMe","email","MenuButton","disabled","colorScheme","solid","boxShadow","PrimaryButton","MenuContents","apiMe","setApiMe","setIsLogin","getMe","useGetMe","logout","localStorage","removeItem","useLogout","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","HomeLayout","useDisclosure","Page404","useLogin","login","mail","password","error","Login","loginMailAddress","setLoginMailAddress","loginPassword","setLoginPassword","regMailAddress","setRegMailAddress","regPassword","setRegPassword","regPasswordConfirm","setRegPasswordConfirm","regName","setRegName","register","useRegister","sm","isFitted","_selected","AuthGuard","Router","render","route","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cbc3684.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    },\n    components: {\n      Button: {\n        baseStyle: {\n          _focus: { outline: \"none\" }\n        }\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    img: string;\n    title: string;\n    artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n    const { img, title, artist } = props;\n\n    return (\n        <Flex w=\"30%\" p=\"auto\">\n            <Box m=\"auto\">\n                <Image src={img} boxSize=\"90%\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n                <Box mt=\"5%\">\n                    <Text fontSize=\"md\" fontWeight=\"bold\">\n                        {title}\n                    </Text>\n                    <Text fontSize=\"xs\">{artist}</Text>\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"react-icons/bs\";\n\ntype Props = {\n    rating: number;\n};\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    const starSize = \"25px\";\n    const gap = \"1px\";\n    // 小数点第一位をつける\n    const fixedRating = rating.toFixed(1);\n\n    return (\n        <Flex>\n            {[1, 2, 3, 4, 5].map((value) =>\n                rating >= value ? (\n                    <Box mx={gap}>\n                        <BsStarFill fontSize={starSize} color=\"orange\" />\n                    </Box>\n                ) : rating >= value - 0.5 ? (\n                    <Box mx={gap}>\n                        <BsStarHalf fontSize={starSize} color=\"orange\" />\n                    </Box>\n                ) : (\n                    <Box mx={gap}>\n                        <BsStar fontSize={starSize} color=\"orange\" />\n                    </Box>\n                )\n            )}\n            <Text ml=\"10px\" pt=\"2px\" fontWeight=\"semibold\" color=\"gray.600\">\n                {fixedRating}\n            </Text>\n        </Flex>\n    );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n    value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n    const { value } = props;\n    return (\n        <Flex>\n            <IconButton\n                aria-label=\"like\"\n                icon={<GoHeart size=\"27px\" />}\n                size=\"0px\"\n                color=\"gray\"\n                bg=\"none\"\n                _focus={{ outline: \"none\" }}\n            />\n            <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n                {value}\n            </Text>\n        </Flex>\n    );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n    return (\n        <IconButton\n            aria-label=\"like\"\n            icon={<BsShareFill />}\n            size=\"0px\"\n            color=\"gray\"\n            bg=\"none\"\n            _focus={{ outline: \"none\" }}\n        />\n    );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    mb: string;\n    onClick?: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n    const { children, mb, onClick } = props;\n\n    return (\n        <Flex\n            w=\"98%\"\n            h=\"33vh\"\n            bg=\"white\"\n            borderRadius=\"10px\"\n            px=\"30px\"\n            py=\"15px\"\n            shadow=\"md\"\n            mb={mb}\n            _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n            onClick={onClick}\n        >\n            {children}\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"2%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","import axios from 'axios';\n\nconst apiClient = axios.create({\n    baseURL: '',\n    withCredentials: true,\n});\n\nexport default apiClient;\n","import { memo } from \"react\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nexport const LoadingPageSpinner = memo(() => {\n    return (\n        <Spinner\n            thickness=\"4px\"\n            speed=\"0.8s\"\n            emptyColor=\"gray.200\"\n            color=\"#c4de71\"\n            size=\"xl\"\n            m=\"auto\"\n            mt=\"50%\"\n        />\n    );\n});\n","import { memo, useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useGetPosts } from \"../../../hooks/api/useGetPosts\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    const { getPosts, api_posts, loading } = useGetPosts(\"recent\");\n    useEffect(() => getPosts(), [getPosts]);\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    // const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        /* 本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    {/* apiからjsonを引っ張り、map関数でカードを繰り返し描画 */}\n                    {api_posts.map((obj) => (\n                        <Box key={obj.id}>\n                            {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                            <PostCard post={Object.assign(obj)} />\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </>\n\n        /* ↓ローカル開発用 */\n        // <Box>\n        //     {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n        //     {api_posts.map((obj) => (\n        //         <Box key={obj.id}>\n        //             {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n        //             <PostCard post={Object.assign(obj)} />\n        //         </Box>\n        //     ))}\n        // </Box>\n    );\n});\n","import { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport apiClient from \"../../client/apiClient\";\n\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport { useMessage } from \"../message/useMessage\";\nimport { useErrorMessage } from \"../useErrorMessage\";\n\ntype Sort = \"recent\" | \"follow\" | \"popular\";\n\nexport const useGetPosts = (sort: Sort) => {\n    const [api_posts, setApiPosts] = useState<Array<PostsDataType>>([]);\n    const [loading, setLoading] = useState(false);\n\n    const getPosts = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Array<PostsDataType>>(`/api/posts/recent`)\n            .then((res) => setApiPosts(res.data))\n            .catch( () =>\n            {\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getPosts, api_posts, loading };\n};\n","export const gradationGreen = \"linear(to-tl, green, #c4de71)\"\n","import { AspectRatio, Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { gradationGreen } from \"../atoms/color/gradationGreen\";\nimport { BsQuestionCircle } from \"react-icons/bs\";\n\ntype Props = {\n    id: string | undefined;\n    title: string | undefined;\n    album: string | undefined;\n    artist: string | undefined;\n    release: string | undefined;\n};\n\nexport const MusicDetailBox: VFC<Props> = (props) => {\n    const {\n        id = undefined,\n        title = undefined,\n        album = undefined,\n        artist = undefined,\n        release = undefined,\n    } = props;\n    return (\n        <Flex>\n            <AspectRatio ratio={1 / 1} boxSize=\"40%\">\n                {id === undefined ? (\n                    <Box bgGradient={gradationGreen}>\n                        <BsQuestionCircle color=\"gray\" fontSize=\"13vh\" />\n                    </Box>\n                ) : (\n                    <iframe\n                        src={`https://open.spotify.com/embed/track/${id}`}\n                        frameBorder=\"0\"\n                        allow=\"encrypted-media\"\n                    />\n                )}\n            </AspectRatio>\n            <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\" mb=\"2%\">\n                <Text fontWeight=\"bold\" fontSize=\"25px\" mb=\"2%\">\n                    {title === undefined ? \"楽曲情報が取得できません\" : title}\n                </Text>\n                <Text fontSize=\"sm\">\n                    収録アルバム： {album === undefined ? \"???\" : album}\n                </Text>\n                <Text fontSize=\"sm\">\n                    アーティスト：\n                    {artist === undefined ? \"???\" : artist}\n                </Text>\n                <Text fontSize=\"sm\">\n                    リリース： {release === undefined ? \"???\" : release}\n                </Text>\n            </Flex>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { Rating } from \"../../atoms/button/Rating\";\nimport { ReactionButtons } from \"../../molecules/post_detail/ReactionButtons\";\nimport { UserInfoBox } from \"../../molecules/UserInfoBox\";\n\ntype Props = {\n    userName: string;\n    userTitle: string;\n    userImg: string;\n    rating?: number;\n    title: string;\n    body: string;\n    commentVal?: number;\n    likeVal?: number;\n};\n\nexport const DetailBox: VFC<Props> = (props) => {\n    const {\n        userName = \"\",\n        userTitle = \"\",\n        userImg = \"\",\n        rating,\n        title = \"\",\n        body = \"\",\n        commentVal,\n        likeVal,\n    } = props;\n    return (\n        <Box>\n            <Flex textAlign=\"left\">\n                <Box mr={2}>\n                    <UserInfoBox\n                        name={userName}\n                        user_title={userTitle}\n                        img={userImg}\n                    />\n                </Box>\n                {/* コメントのときは評価の星を表示しない */}\n                {rating === undefined ? <div /> : <Rating rating={rating} />}\n            </Flex>\n            <Box mt={5} textAlign=\"left\">\n                <Text fontSize=\"lg\" fontWeight=\"bold\">\n                    {title}\n                </Text>\n                <Text fontSize=\"sm\" pr={10} mt={2}>\n                    {body}\n                </Text>\n            </Box>\n            {/* コメントのときは、「コメント」、「いいね」、「シェア」を表示しない */}\n            {commentVal === undefined || likeVal === undefined ? (\n                <div />\n            ) : (\n                <ReactionButtons comment_val={commentVal} like_val={likeVal} />\n            )}\n        </Box>\n    );\n};\n","import { useEffect, VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { homeState } from \"../../../../store/homeState\";\nimport { useGetDetail } from \"../../../../hooks/api/useGetDetail\";\nimport json_postDetail from \"../../../../test_json/postDetail.json\";\nimport { LoadingCard } from \"../../../organisms/home/post/LoadingCard\";\nimport { LoadingPageSpinner } from \"../../../organisms/LoadingPageSpinner\";\nimport { MusicDetailBox } from \"../../../organisms/MusicDetailBox\";\nimport { DetailBox } from \"../../../organisms/detail/DetailBox\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { getPostDetail, api_postDetail, loading } = useGetDetail(id);\n    useEffect(() => getPostDetail(), []);\n\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        /* ↓本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    <MusicDetailBox\n                        id={api_postDetail.track.id}\n                        title={api_postDetail.track.title}\n                        album={api_postDetail.track.album}\n                        artist={api_postDetail.track.artist}\n                        release={api_postDetail.track.release}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                    <DetailBox\n                        userName={api_postDetail.user.name}\n                        userTitle={api_postDetail.user.job}\n                        userImg={api_postDetail.user.img}\n                        rating={api_postDetail.review.star}\n                        title={api_postDetail.review.title}\n                        body={api_postDetail.review.body}\n                        commentVal={api_postDetail.reaction.comment_val}\n                        likeVal={api_postDetail.reaction.like_val}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                </Box>\n            )}\n        </>\n\n        /* ローカルでのテスト用*/\n        // <Box mx={5}>\n        //     <MusicDetailBox\n        //         id={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n        //         title={api_postDetail.track.title}\n        //         album={api_postDetail.track.album}\n        //         artist={api_postDetail.track.artist}\n        //         release={api_postDetail.track.release}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        //     <DetailBox\n        //         userName={api_postDetail.user.name}\n        //         userTitle={api_postDetail.user.job}\n        //         userImg={api_postDetail.user.img}\n        //         rating={api_postDetail.review.star}\n        //         title={api_postDetail.review.title}\n        //         body={api_postDetail.review.body}\n        //         commentVal={api_postDetail.reaction.comment_val}\n        //         likeVal={api_postDetail.reaction.like_val}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        // </Box>\n    );\n};\n","import { useCallback, useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport failed from \"../../test_json/failedDetail.json\";\nimport apiClient from \"../../client/apiClient\";\nimport { useHistory } from \"react-router\";\n\nexport const useGetDetail = ( id: string ) =>\n{\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n    const [ loading, setLoading ] = useState( false )\n    const history = useHistory()\n    const getPostDetail = useCallback(() =>\n    {\n        setLoading( true );\n\n        apiClient\n        .get<PostsDataType>( `/api/posts/${ id }` )\n        .then( ( res ) => setApiPostDetail( res.data ) )\n        .catch( () =>\n        {\n            history.push(\"/page404\")\n        }\n        ).finally( () => setLoading( false ) );\n    },[])\n\n    return { getPostDetail, api_postDetail, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n    title: string;\n    body: string;\n};\n\nexport const Alert404: VFC<Props> = memo((props) => {\n    const { title, body } = props;\n    const history = useHistory();\n    const onClickPageBack = () => {\n        history.goBack();\n    };\n\n    return (\n        <Alert\n            status=\"error\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            textAlign=\"center\"\n            height=\"200px\"\n            pt=\"40px\"\n        >\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                {title}\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">{body}</AlertDescription>\n        </Alert>\n    );\n});\n","import { Alert404 } from \"../../../organisms/home/Alert404\";\n\nexport const Detail404 = () => {\n    return <Alert404 title=\"エラー\" body=\"投稿が見つかりませんでした。\" />;\n};\n","import {\n    Breadcrumb,\n    BreadcrumbItem,\n    BreadcrumbLink,\n    Text,\n} from \"@chakra-ui/react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { memo, useEffect, useState, VFC } from \"react\";\n\ntype Props = {\n    step: \"track\" | \"rate\" | \"check\";\n    goTrackInfo: () => void;\n    goRate: () => void;\n    goCheck: () => void;\n    isTrackNull: boolean;\n    isRatesNull: boolean;\n};\n\ntype Weight = \"normal\" | \"bold\";\ntype Color = \"black\" | \"gray.500\";\n\nexport const CreateBreadcrumb: VFC<Props> = memo((props) => {\n    const { step, goTrackInfo, goRate, goCheck, isTrackNull, isRatesNull } =\n        props;\n\n    const [trackColor, setTrackColor] = useState<Color>(\"gray.500\");\n    const [rateColor, setRateColor] = useState<Color>(\"gray.500\");\n    const [checkColor, setCheckColor] = useState<Color>(\"gray.500\");\n    const [trackWeight, setTrackWeight] = useState<Weight>(\"normal\");\n    const [rateWeight, setRateWeight] = useState<Weight>(\"normal\");\n    const [checkWeight, setCheckWeight] = useState<Weight>(\"normal\");\n\n    useEffect(() => {\n        // 一旦初期化して変化部分のみ値を指定する\n        setTrackWeight(\"normal\");\n        setTrackColor(\"gray.500\");\n        setRateWeight(\"normal\");\n        setRateColor(\"gray.500\");\n        setCheckWeight(\"normal\");\n        setCheckColor(\"gray.500\");\n        if (step === \"track\") {\n            setTrackWeight(\"bold\");\n            setTrackColor(\"black\");\n        } else if (step === \"rate\") {\n            setRateWeight(\"bold\");\n            setRateColor(\"black\");\n        } else {\n            setCheckWeight(\"bold\");\n            setCheckColor(\"black\");\n        }\n    }, [step]);\n\n    // 楽曲情報が入力されていなければ評価画面に行けない\n    // 評価が入力されていなければ内容確認画面に行けない\n    var canMoveRate: \"auto\" | \"none\" = isTrackNull ? \"none\" : \"auto\";\n    var canMoveCheck: \"auto\" | \"none\" =\n        isTrackNull || isRatesNull ? \"none\" : \"auto\";\n\n    useEffect(() => {\n        isTrackNull ? (canMoveRate = \"none\") : (canMoveRate = \"auto\");\n    }, [isTrackNull]);\n\n    useEffect(() => {\n        isTrackNull && isRatesNull\n            ? (canMoveCheck = \"none\")\n            : (canMoveCheck = \"auto\");\n    }, [isTrackNull]);\n\n    return (\n        <Breadcrumb\n            spacing=\"20px\"\n            ml=\"0px\"\n            separator={<ChevronRightIcon color=\"gray.500\" fontSize=\"30px\" />}\n            textAlign=\"left\"\n            mb=\"30px\"\n        >\n            <BreadcrumbItem isCurrentPage={step === \"track\"}>\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={trackColor}\n                    fontWeight={trackWeight}\n                    onClick={goTrackInfo}\n                >\n                    楽曲情報\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem\n                isCurrentPage={step === \"rate\"}\n                pointerEvents={canMoveRate}\n            >\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={rateColor}\n                    fontWeight={rateWeight}\n                    onClick={goRate}\n                >\n                    評価\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem\n                isCurrentPage={step === \"check\"}\n                pointerEvents={canMoveCheck}\n            >\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={checkColor}\n                    fontWeight={checkWeight}\n                    onClick={goCheck}\n                >\n                    内容確認\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n        </Breadcrumb>\n    );\n});\n","import { Button } from \"@chakra-ui/button\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    onClick: () => void;\n    mt?: string;\n    isDisabled?: boolean;\n    text: string;\n};\n\nexport const CreateTransButton: VFC<Props> = (props) => {\n    const { onClick, mt = \"none\", isDisabled = false, text } = props;\n    return (\n        <Button\n            mt={mt}\n            w=\"auto\"\n            h=\"30px\"\n            ml=\"auto\"\n            bg=\"orange.300\"\n            color=\"white\"\n            onClick={onClick}\n            fontSize=\"15px\"\n            _focus={{ outline: \"none\" }}\n            isDisabled={isDisabled}\n        >\n            {text}\n        </Button>\n    );\n};\n","import { Box, Text, Input } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    value: string;\n    inputType?: string;\n    fontSize?: string;\n    fontWeight?: string;\n};\n\nexport const Form: VFC<Props> = (props) => {\n    const {\n        onChange,\n        value,\n        children,\n        inputType = \"text\",\n        fontSize = \"sm\",\n        fontWeight = \"normal\",\n    } = props;\n\n    return (\n        <Box textAlign=\"start\" w=\"100%\">\n            <Text\n                ml={1}\n                mb={1}\n                fontSize={fontSize}\n                fontWeight={fontWeight}\n                color=\"gray.700\"\n            >\n                {children}\n            </Text>\n            <Input type={inputType} onChange={onChange} value={value} />\n        </Box>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, []);\n\n  return { showMessage };\n};\n","import { Box, Button, Flex, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState, VFC } from \"react\";\n\nimport { gradationGreen } from \"../../atoms/color/gradationGreen\";\nimport { MusicDetailBox } from \"../MusicDetailBox\";\nimport { CreateTransButton } from \"../../atoms/button/CreateTransButton\";\nimport { Form } from \"../../molecules/Form\";\nimport { useGetTrack } from \"../../../hooks/api/useGetTrack\";\nimport { useValidateTrackURL } from \"../../../hooks/useValidateTrackURL\";\nimport { useMessage } from \"../../../hooks/message/useMessage\";\nimport { TrackDataType } from \"../../../type/api/TrackDataType\";\n\ntype Props = {\n    goRate: () => void;\n    onChangeTrackURL: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    trackUrl: string;\n    trackId: string | undefined;\n    setTrackId: (id: string | undefined) => void;\n    trackData: TrackDataType;\n    saveTrackData: (obj: TrackDataType) => void;\n    isTrackNull: boolean;\n};\n\nexport const CreateTrackInfo: VFC<Props> = (props) => {\n    const {\n        goRate,\n        onChangeTrackURL,\n        trackUrl,\n        trackId,\n        setTrackId,\n        isTrackNull,\n        trackData,\n        saveTrackData,\n    } = props;\n    const { getTrack } = useGetTrack();\n    const { validateTrackURL } = useValidateTrackURL();\n    const { showMessage } = useMessage();\n\n    // checkTrackとuseEffect内の楽曲登録作業の橋渡しをするstateを準備したい\n    // 一旦、このページ内の状態で楽曲データを預かるためのstate\n    // これを使って楽曲有無の確認をするapiを叩き、確認できたら正式にcreateグローバルstateに登録\n    const [onceTrack, setOnceTrack] = useState<TrackDataType>();\n    const saveOnceTrackData = (val: TrackDataType) => {\n        setOnceTrack(val);\n    };\n\n    const checkTrack = () => {\n        const validatedTrackId = validateTrackURL(trackUrl);\n        // バリデーションを行う\n        if (validatedTrackId === undefined) {\n            showMessage({\n                title: \"正しいURLを入力してください\",\n                status: \"error\",\n            });\n        }\n        // バリデーションをクリアしたidで実際に楽曲を取得できるか判定\n        else {\n            getTrack(validatedTrackId, saveOnceTrackData);\n        }\n    };\n\n    // APIで楽曲情報が確認できたタイミングで保存\n    // ちゃんと取得できていたら、一旦保存しておいた楽曲情報を正式にグローバルで保存\n    useEffect(() => {\n        if (onceTrack !== undefined) {\n            setTrackId(onceTrack.id);\n            saveTrackData(onceTrack);\n        }\n    }, [onceTrack]);\n\n    return (\n        <Box>\n            {/* 入力された共有URIから楽曲が取得できていたら表示 */}\n            {trackId !== undefined && (\n                <MusicDetailBox\n                    id={trackData?.id}\n                    title={trackData?.title}\n                    album={trackData?.album}\n                    artist={trackData?.artist}\n                    release={trackData?.release}\n                />\n            )}\n            <Flex flexDirection=\"column\" mt=\"30px\">\n                <Flex mt=\"10px\">\n                    <Form\n                        onChange={onChangeTrackURL}\n                        value={trackUrl}\n                        fontSize=\"lg\"\n                        fontWeight=\"semibold\"\n                    >\n                        Spotifyの楽曲シェア用URLを入力してください\n                    </Form>\n                    <Button\n                        ml=\"2%\"\n                        w=\"20%\"\n                        bgGradient={gradationGreen}\n                        color=\"white\"\n                        fontSize=\"lg\"\n                        mt=\"auto\"\n                        onClick={checkTrack}\n                    >\n                        確認\n                    </Button>\n                </Flex>\n                <CreateTransButton\n                    onClick={goRate}\n                    mt=\"30px\"\n                    isDisabled={isTrackNull}\n                    text=\"次へ\"\n                />\n            </Flex>\n        </Box>\n    );\n};\n","import { useCallback, useState } from \"react\";\n\nimport apiClient from \"../../client/apiClient\";\nimport { TrackDataType } from \"../../type/api/TrackDataType\";\nimport {useMessage} from \"../message/useMessage\"\n\n\nexport const useGetTrack = () =>\n{\n    const { showMessage } = useMessage();\n    const getTrack = useCallback( ( id: string | undefined, saveTrack: (val:TrackDataType )=>void ) =>\n    {\n        var track: TrackDataType\n\n        apiClient\n            .get<TrackDataType>(`/api/track/${id}`)\n            .then( ( res ) =>\n            {\n                saveTrack(res.data)\n            }\n            )\n            .catch( () =>\n            {\n                saveTrack( undefined )\n                showMessage( {title: \"楽曲を取得できませんでした\",status: \"error\",});\n            })\n    }, []);\n\n    return { getTrack };\n};\n","import { useCallback, useState } from \"react\";\nimport { useMessage } from \"./message/useMessage\";\n\nexport const useValidateTrackURL = () =>\n{    const head = /(https\\:\\/\\/open\\.spotify\\.com\\/track\\/)/;\n    const foot = /(\\?si=)/;\n    const validateTrackURL = useCallback( ( url: string ) =>\n    {\n        var id:string|undefined;\n        const regexHead = head.test( url );\n        const regexFoot = foot.test( url );\n        {\n            // urlの頭とおしりがspotifyの楽曲シェアURLのものか判定\n            if ( regexHead && regexFoot )\n            {\n                 const result = url.match(\n                    /https\\:\\/\\/open\\.spotify\\.com\\/track\\/(.*)\\?si=/\n                 );\n                // もし楽曲のURLであれば、楽曲IDの部分の文字数が適切なものか判定\n                if ( result![1].length === 22 )\n                {\n                    id = result![1];\n                }\n                else\n                {\n                    id = undefined;\n                }\n            } else{\n                    id = undefined;\n            }\n        }\n        return id;\n    },[])\n        return { validateTrackURL }\n}\n","import { useState, VFC } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"react-icons/bs\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\ntype Props = {\n    num: number;\n    rate: number;\n    setRate: (val: number) => void;\n};\n\nexport const StarButton: VFC<Props> = (props) => {\n    const { num, rate, setRate } = props;\n    const [shape, setShape] = useState<\"null\" | \"half\" | \"fill\">(\"null\");\n\n    const onClickHalf = () => {\n        setRate(num - 0.5);\n    };\n    const onClickFill = () => {\n        setRate(num);\n    };\n\n    const StarSize = \"50px\";\n    const starGap = \"60px\";\n\n    return (\n        <Box>\n            {/* 星のアイコンを表示、zIndexによってボタンと重ねる  */}\n            <Flex\n                boxSize=\"50px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                position=\"absolute\"\n                zIndex=\"1\"\n            >\n                {rate >= num ? (\n                    <BsStarFill fontSize={StarSize} color=\"orange\" />\n                ) : rate >= num - 0.5 ? (\n                    <BsStarHalf fontSize={StarSize} color=\"orange\" />\n                ) : (\n                    <BsStar fontSize={StarSize} color=\"orange\" />\n                )}\n            </Flex>\n            {/* 星のアイコンの上に見えないボタンを設置 */}\n            <Flex boxSize=\"50px\" position=\"absolute\" zIndex=\"2\">\n                {/* 左半分のボタン */}\n                <button\n                    onClick={onClickHalf}\n                    style={{\n                        borderRadius: \"0\",\n                        height: \"100%\",\n                        width: \"50%\",\n                    }}\n                ></button>\n                {/* 右半分のボタン */}\n                <button\n                    onClick={onClickFill}\n                    style={{\n                        borderRadius: \"0\",\n                        height: \"100%\",\n                        width: \"50%\",\n                    }}\n                ></button>\n            </Flex>\n            <Box w={starGap} />\n        </Box>\n    );\n};\n","import { useState, VFC } from \"react\";\nimport { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { StarButton } from \"../../atoms/button/StarButton\";\n\ntype Props = {\n    rate: number;\n    setRate: (val: number) => void;\n};\n\nexport const FiveStarButton: VFC<Props> = (props) => {\n    const { rate, setRate } = props;\n    return (\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Flex mt=\"10px\" mb=\"50px\">\n                {[1, 2, 3, 4, 5].map((value) => (\n                    <StarButton num={value} rate={rate} setRate={setRate} />\n                ))}\n            </Flex>\n            <Text\n                mt=\"5px\"\n                mx=\"auto\"\n                pr=\"10px\"\n                w=\"30%\"\n                fontWeight=\"bold\"\n                fontSize=\"25px\"\n                color=\"gray.600\"\n            >\n                {rate.toFixed(1)}\n            </Text>\n        </Flex>\n    );\n};\n","import { Box, Flex, Input, Text, Textarea } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { CreateTransButton } from \"../../atoms/button/CreateTransButton\";\nimport { FiveStarButton } from \"../../molecules/create/FiveStarButton\";\n\ntype Props = {\n    goTrackInfo: () => void;\n    goCheck: () => void;\n    onChangeRate: (val: number) => void;\n    onChangeTitle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    onChangeBody: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n    rate: number;\n    title: string;\n    body: string;\n    isRatesNull: boolean;\n};\n\nexport const CreateRate: VFC<Props> = (props) => {\n    const {\n        goTrackInfo,\n        goCheck,\n        onChangeRate,\n        onChangeTitle,\n        onChangeBody,\n        rate,\n        title,\n        body,\n        isRatesNull,\n    } = props;\n\n    return (\n        <Flex flexDirection=\"column\" mt=\"30px\">\n            <Flex flexDirection=\"column\">\n                <Text\n                    fontSize=\"lg\"\n                    ml=\"10px\"\n                    fontWeight=\"semibold\"\n                    color=\"gray.700\"\n                >\n                    ① 評価\n                </Text>\n                <Box textAlign=\"center\">\n                    <FiveStarButton rate={rate} setRate={onChangeRate} />\n                </Box>\n            </Flex>\n            <Box mt=\"30px\">\n                <Flex>\n                    <Text\n                        fontSize=\"lg\"\n                        ml=\"10px\"\n                        fontWeight=\"semibold\"\n                        color=\"gray.700\"\n                    >\n                        ① タイトル（30字以内）\n                    </Text>\n                    {title.length >= 30 && (\n                        <Text color=\"red\">※30字を超えています</Text>\n                    )}\n                </Flex>\n                <Input\n                    type=\"text\"\n                    w=\"100%\"\n                    mt=\"10px\"\n                    onChange={onChangeTitle}\n                    value={title}\n                />\n            </Box>\n            <Box mt=\"30px\">\n                <Flex>\n                    <Text\n                        fontSize=\"lg\"\n                        ml=\"10px\"\n                        h=\"auto\"\n                        fontWeight=\"semibold\"\n                        color=\"gray.700\"\n                    >\n                        ① 本文（500字以内）\n                    </Text>\n                    {body.length >= 500 && (\n                        <Text color=\"red\">※500字を超えています</Text>\n                    )}\n                </Flex>\n                <Textarea\n                    type=\"text\"\n                    w=\"100%\"\n                    h=\"100px\"\n                    mt=\"10px\"\n                    onChange={onChangeBody}\n                    value={body}\n                />\n            </Box>\n            <Flex ml=\"auto\">\n                <Box>\n                    <CreateTransButton\n                        onClick={goTrackInfo}\n                        mt=\"30px\"\n                        text=\"戻る\"\n                    />\n                </Box>\n                <Box w=\"30px\" />\n                <Box>\n                    <CreateTransButton\n                        onClick={goCheck}\n                        mt=\"30px\"\n                        isDisabled={isRatesNull}\n                        text=\"次へ\"\n                    />\n                </Box>\n            </Flex>\n        </Flex>\n    );\n};\n","import { Box, Divider, Flex } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { usePostCreate } from \"../../../hooks/api/usePostCreate\";\nimport { TrackDataType } from \"../../../type/api/TrackDataType\";\nimport { CreateTransButton } from \"../../atoms/button/CreateTransButton\";\nimport { DetailBox } from \"../detail/DetailBox\";\nimport { MusicDetailBox } from \"../MusicDetailBox\";\n\ntype Props = {\n    trackData: TrackDataType;\n    rate: number;\n    title: string;\n    body: string;\n    trackId: string | undefined;\n    goRate: () => void;\n    setTransAlert: (bool: boolean) => void;\n};\n\nexport const CreateCheck: VFC<Props> = (props) => {\n    const { trackData, rate, title, body, goRate, trackId, setTransAlert } =\n        props;\n\n    // 現在の内容で確定して投稿する\n    const { postCreate } = usePostCreate();\n    const onConfirm = () => {\n        postCreate(title, body, rate, trackId, setTransAlert);\n    };\n\n    return (\n        <Flex flexDirection=\"column\" mt=\"30px\">\n            <MusicDetailBox\n                id={trackData?.id}\n                title={trackData?.title}\n                album={trackData?.album}\n                artist={trackData?.artist}\n                release={trackData?.release}\n            />\n            <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n            <DetailBox\n                userName=\"ゆうた\"\n                userTitle=\"学生\"\n                userImg=\"\"\n                rating={rate}\n                title={title}\n                body={body}\n            />\n            <Divider orientation=\"horizontal\" w=\"100%\" mt={5} />\n            <Flex ml=\"auto\">\n                <Box>\n                    <CreateTransButton onClick={goRate} mt=\"30px\" text=\"戻る\" />\n                </Box>\n\n                <Box w=\"30px\" />\n                <Box>\n                    <CreateTransButton\n                        onClick={onConfirm}\n                        mt=\"30px\"\n                        text=\"この内容で投稿する\"\n                    />\n                </Box>\n            </Flex>\n        </Flex>\n    );\n};\n","import { string } from \"prop-types\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport apiClient from \"../../client/apiClient\";\nimport {useMessage} from \"../message/useMessage\"\n\n\nexport const usePostCreate = () =>\n{\n    const history = useHistory();\n    const { showMessage } = useMessage();\n    const postCreate = useCallback( ( title:string, body:string, rate: number, trackId:string|undefined, setTransAlert:(bool:boolean)=>void ) =>\n    {\n        const data = {\n            title: title,\n            body: body,\n            rate: rate,\n            trackId:trackId\n        }\n\n        apiClient\n            .post( `/api/create`, data)\n            .then( ( res ) =>\n            {\n                showMessage( { title: \"投稿しました\", status: \"success\", } );\n                setTransAlert( false );\n                history.push( \"/\" );\n            }\n            )\n            .catch( () =>\n            {\n                showMessage( {title: \"投稿に失敗しました\",status: \"error\",});\n            })\n    }, []);\n\n    return { postCreate };\n};\n","import { ChangeEvent, memo, useEffect, useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Prompt } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { CreateBreadcrumb } from \"../molecules/create/CreateBreadcrumb\";\nimport { CreateTrackInfo } from \"../organisms/create/CreateTrackInfo\";\nimport { CreateRate } from \"../organisms/create/CreateRate\";\nimport { CreateCheck } from \"../organisms/create/CreateCheck\";\nimport { homeState } from \"../../store/homeState\";\nimport { TrackDataType } from \"../../type/api/TrackDataType\";\n\nexport const Create = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"create\" });\n\n    // 画面遷移のためのState\n    const [step, setStep] = useState<\"track\" | \"rate\" | \"check\">(\"track\");\n    const goTrackInfo = () => {\n        setStep(\"track\");\n    };\n    const goRate = () => {\n        setStep(\"rate\");\n    };\n    const goCheck = () => {\n        setStep(\"check\");\n    };\n\n    // 各種投稿内容を保存しておくためのState\n    // trackIdは楽曲情報表示や「次へ」ボタンが押せるかなどの判定に使われる\n    const [trackUrl, setTrackUrl] = useState<string>(\"\");\n    const [trackId, setTrackId] = useState<string | undefined>(undefined);\n    // const [trackId, setTrackId] = useState<string | undefined>(\"\");\n    const [rate, setRate] = useState<number>(0);\n    const [title, setTitle] = useState<string>(\"\");\n    const [body, setBody] = useState<string>(\"\");\n\n    const onChangeTrackURL = (e: ChangeEvent<HTMLInputElement>) =>\n        setTrackUrl(e.target.value);\n\n    const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) =>\n        setTitle(e.target.value);\n\n    const onChangeBody = (e: ChangeEvent<HTMLTextAreaElement>) =>\n        setBody(e.target.value);\n\n    const onChangeRate = (val: number) => {\n        setRate(val);\n    };\n\n    const changeTrackId = (id: string | undefined) => {\n        setTrackId(id);\n    };\n\n    // TrackIdが空の場合はほかの画面への遷移をブロックする\n    const [isTrackNull, setIsTrackNull] = useState<boolean>(true);\n    useEffect(() => {\n        trackId === undefined ? setIsTrackNull(true) : setIsTrackNull(false);\n    }, [trackId]);\n\n    // 評価が書かれていないor字数制限よりも多い場合は確認画面への遷移をブロックする\n    const [isRatesNull, setIsRatesNull] = useState<boolean>(true);\n    useEffect(() => {\n        rate === 0.0 ||\n        title === \"\" ||\n        title.length >= 30 ||\n        body === \"\" ||\n        body.length >= 500\n            ? setIsRatesNull(true)\n            : setIsRatesNull(false);\n    }, [rate, title, body]);\n\n    // 取得に成功した楽曲データを保持する\n    const [trackData, setTrackData] = useState<TrackDataType>();\n    const saveTrackData = (obj: TrackDataType) => {\n        setTrackData(obj);\n    };\n\n    const [transAlert, setTransAlert] = useState<boolean>(true);\n    const passTransAlert = (bool: boolean) => {\n        setTransAlert(bool);\n    };\n\n    return (\n        <Box textAlign=\"left\">\n            {/* react-routeの「Prompt」によって、ページを離れようとしたときに警告\n            (投稿確定時のリダイレクトでは無効) */}\n            {transAlert && (\n                <Prompt message=\"ページを離れると入力した内容が失われます\" />\n            )}\n            <CreateBreadcrumb\n                step={step}\n                goTrackInfo={goTrackInfo}\n                goRate={goRate}\n                goCheck={goCheck}\n                isTrackNull={isTrackNull}\n                isRatesNull={isRatesNull}\n            />\n\n            {step === \"track\" ? (\n                <CreateTrackInfo\n                    goRate={goRate}\n                    onChangeTrackURL={onChangeTrackURL}\n                    trackUrl={trackUrl}\n                    trackId={trackId}\n                    setTrackId={changeTrackId}\n                    isTrackNull={isTrackNull}\n                    trackData={trackData}\n                    saveTrackData={saveTrackData}\n                />\n            ) : step === \"rate\" ? (\n                <CreateRate\n                    goCheck={goCheck}\n                    goTrackInfo={goTrackInfo}\n                    onChangeRate={onChangeRate}\n                    rate={rate}\n                    onChangeTitle={onChangeTitle}\n                    title={title}\n                    onChangeBody={onChangeBody}\n                    body={body}\n                    isRatesNull={isRatesNull}\n                />\n            ) : (\n                <CreateCheck\n                    rate={rate}\n                    title={title}\n                    body={body}\n                    trackData={trackData}\n                    trackId={trackId}\n                    goRate={goRate}\n                    setTransAlert={passTransAlert}\n                />\n            )}\n        </Box>\n    );\n});\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/detail/PostDetail\";\nimport { Detail404 } from \"../components/pages/home/detail/Detail404\";\nimport { Create } from \"../components/pages/Create\";\n\nexport const homeRoutes = [\n    {\n        path: \"\",\n        exact: true,\n        children: <Recent />,\n    },\n    {\n        path: \"follow_post\",\n        exact: false,\n        // children: <FollowPosts />,\n        children: <Recent />,\n    },\n    {\n        path: \"popular\",\n        exact: false,\n        // children: <Popular />,\n        children: <Recent />,\n    },\n    {\n        path: \"post/:id\",\n        exact: false,\n        children: <PostDetail />,\n    },\n    {\n        path: \"create_post\",\n        exact: false,\n        children: <Create />,\n    },\n    {\n        path: \"page404\",\n        exact: false,\n        children: <Detail404 />,\n    },\n    {\n        path: \"*\",\n        exact: false,\n        children: <Recent />,\n    },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n    display?: {};\n    onClick: () => void;\n    size?: string;\n    ml?: string;\n    my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n    const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n    return (\n        <IconButton\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            color=\"white\"\n            aria-label=\"Open menu\"\n            icon={<HamburgerIcon />}\n            _focus={{ outline: \"none\" }}\n            size={size}\n            ml={ml}\n            my={my}\n            display={display}\n            onClick={onClick}\n        />\n    );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.goBack();\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : topic === \"create\" ? (\n                        <HomePostTitle>投稿する</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<HiArrowNarrowLeft />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"25px\"\n                                onClick={onBackHome}\n                                mt=\"auto\"\n                                boxSize={{ base: \"29px\", md: \"36px\" }}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n                px={5}\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { atom } from \"recoil\";\n\nexport const loginState = atom( {\n    key: \"loginState\",\n    default: { isLogin:true }\n} );\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage } from \"../message/useMessage\";\n\ntype Me = {\n    id: string;\n    name: string;\n    email: string;\n}\n\nconst NullMe:Me = {id:\"\", name:\"\", email:\"\"}\n\nexport const useGetMe = () =>\n{\n    const [ loading, setLoading ] = useState( false );\n    const [ apiMe, setApiMe ] = useState<Me>(NullMe);\n    const setIsLogin = useSetRecoilState( loginState );\n\n    // ユーザーの情報を取得できない＝ログインしていないとみなし、\n    // その場合はログイン状態管理（isLogin）がfalseとなる\n\n    const getMe = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Me>(`/api/me`)\n            .then( ( res ) =>\n            {\n                setApiMe( res.data );\n                setIsLogin( { isLogin:true});\n            }\n            )\n            .catch( () =>\n            {\n                setIsLogin( { isLogin:false});\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getMe, apiMe, loading };\n};\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    onClick: () => void;\n    disabled?: boolean;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n    const { children, w = \"md\", onClick, disabled = false } = props;\n    return (\n        <Button\n            colorScheme=\"gray\"\n            variant=\"ghost\"\n            solid=\"none\"\n            w=\"w\"\n            _hover={{ cursor: \"pointer\" }}\n            _focus={{ boxShadow: \"none\", outline: \"none\" }}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </Button>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    disabled?: boolean;\n    onClick?: () => void;\n    mt?: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n    const { children, w = \"100%\", onClick, disabled, mt = \"none\" } = props;\n    return (\n        <Button\n            onClick={onClick}\n            color=\"white\"\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            _focus={{ outline: \"none\" }}\n            _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n            disabled={disabled}\n            w={w}\n            mt={mt}\n        >\n            {children}\n        </Button>\n    );\n};\n","import { Box, Button, Flex, Text } from \"@chakra-ui/react\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useGetMe } from \"../../hooks/api/useGetMe\";\nimport { useLogout } from \"../../hooks/login/useLogout\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n    const history = useHistory();\n    // ユーザーの情報を取得\n    const { getMe, apiMe } = useGetMe();\n    const { logout } = useLogout();\n\n    useEffect(() => getMe(), [getMe]);\n\n    const onRecent = () => {\n        history.push(\"/\");\n    };\n    const onFollowPost = () => {\n        history.push(\"/follow_post\");\n    };\n    const onPopular = () => {\n        history.push(\"/popular\");\n    };\n\n    const onCreate = () => {\n        history.push(\"/create_post\");\n    };\n\n    const onClickLogout = () => {\n        logout();\n    };\n    return (\n        <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n            <Link to=\"/\">\n                <Text\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    my=\"20px\"\n                    ml=\"10px\"\n                >\n                    Bebop!\n                </Text>\n            </Link>\n\n            <MenuButton w=\"100%\" onClick={onRecent}>\n                最新の投稿\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onFollowPost} disabled={true}>\n                フォロー\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onPopular} disabled={true}>\n                人気の投稿\n            </MenuButton>\n            <Flex mt=\"25vh\" ml=\"30px\">\n                <PrimaryButton w=\"130px\" onClick={onCreate}>\n                    投稿\n                </PrimaryButton>\n            </Flex>\n\n            <Box mt=\"25vh\" w=\"100%\">\n                <UserInfoBox\n                    img=\"https://source.unsplash.com/brFsZ7qszSY\"\n                    name={apiMe.name}\n                    user_title=\"\"\n                    pl=\"30px\"\n                />\n                <Button\n                    fontSize={5}\n                    w=\"80px\"\n                    h=\"25px\"\n                    colorScheme=\"red\"\n                    mt=\"15px\"\n                    _focus={{ outline: \"none\" }}\n                    onClick={onClickLogout}\n                >\n                    ログアウト\n                </Button>\n            </Box>\n        </Flex>\n    );\n});\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogout = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n    const setIsLogin = useSetRecoilState( loginState );\n\n    const logout = useCallback( ( ) =>\n    {\n        axios.post( \"api/logout\" )\n            .then( res =>\n            {\n                localStorage.removeItem( \"auth\" );\n                setIsLogin( { isLogin:false});\n                history.push( \"/login\" );\n                showMessage( { title: \"ログアウトしました\", status: \"success\" } );\n            } ).catch( res =>\n            {\n                showMessage( { title: \"ログアウトに失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return { logout };\n}\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n    children: ReactNode;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n    const { children, isOpen, onClose } = props;\n\n    return (\n        <Box>\n            {/* 要素を横並びに */}\n            <Flex spacing=\"none\">\n                {/* メニューバー */}\n                <Flex mx=\"auto\" w=\"100%\">\n                    <Box\n                        w=\"15%\"\n                        h=\"100%\"\n                        display={{ base: \"none\", md: \"inline\" }}\n                        pr=\"auto\"\n                        ml=\"18%\"\n                    >\n                        <MenuContents />\n                    </Box>\n                    {children}\n                </Flex>\n            </Flex>\n            <MenuDrawer isOpen={isOpen} onClose={onClose} />\n        </Box>\n    );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/home/HomePostBox\";\nimport { MenuBar } from \"../organisms/home/MenuBar\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <Box w=\"100%\">\n            <MenuBar isOpen={isOpen} onClose={onClose}>\n                <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n            </MenuBar>\n        </Box>\n    );\n});\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogin = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n\n    const [ user, setUser ] = useState();\n    const setIsLogin = useSetRecoilState( loginState );\n\n    const login = useCallback( (mail: string, password: string ) =>\n    {\n        apiClient.get( 'sanctum/csrf-cookie')\n            .then( res =>\n            {\n                apiClient.post( \"/api/login\", {\n                    email: mail,\n                    password: password\n                })\n                    .then( res =>\n                    {\n                        showMessage( { title: \"ログインしました\", status: \"success\" } );\n                        setIsLogin( { isLogin:true});\n                        history.push( \"/\" );\n                    } ).catch( error =>\n                    {\n                        showMessage( { title: \"ユーザーが見つかりません\", status: \"error\" } );\n                    })\n            })\n    }, [] );\n    return { login };\n}\n","import {\n    Tabs,\n    Text,\n    Box,\n    Flex,\n    Tab,\n    TabList,\n    TabPanels,\n    TabPanel,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\nimport { ChangeEvent, useState } from \"react\";\n\nimport { useLogin } from \"../../hooks/login/useLogin\";\nimport { Form } from \"../molecules/Form\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useRegister } from \"../../hooks/login/useRegister\";\n\nexport const Login = () => {\n    // ログインフォーム用state\n    const [loginMailAddress, setLoginMailAddress] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    // 新規登録フォーム用state\n    const [regMailAddress, setRegMailAddress] = useState(\"\");\n    const [regPassword, setRegPassword] = useState(\"\");\n    const [regPasswordConfirm, setRegPasswordConfirm] = useState(\"\");\n    const [regName, setRegName] = useState(\"\");\n\n    // ログインフォーム入力関数\n    const onChangeLoginMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginMailAddress(e.target.value);\n\n    const onChangeLoginPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginPassword(e.target.value);\n\n    // ログインフォーム入力関数\n    const onChangeRegMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegMailAddress(e.target.value);\n\n    const onChangeRegPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPassword(e.target.value);\n\n    const onChangeRegPasswordConfirm = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPasswordConfirm(e.target.value);\n\n    const onChangeRegName = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegName(e.target.value);\n\n    const { register } = useRegister();\n    const onClickRegister = () => {\n        register(regName, regMailAddress, regPassword);\n    };\n\n    const { login } = useLogin();\n    const onClickLogin = () => {\n        login(loginMailAddress, loginPassword);\n    };\n\n    return (\n        <Box\n            w=\"100%\"\n            h=\"100vh\"\n            textAlign=\"center\"\n            pt={{ base: \"none\", sm: \"10vh\" }}\n        >\n            {/* 画面サイズが大きいときはカードの外に「Bebop！を表示」 */}\n            <Text\n                display={{ base: \"none\", sm: \"inline\" }}\n                as=\"h1\"\n                fontSize=\"60px\"\n                bgGradient=\"linear(to-tl, green, #c4de71)\"\n                bgClip=\"text\"\n                fontWeight=\"bold\"\n            >\n                Bebop!\n            </Text>\n            {/* 以下、カード内 */}\n            <Flex\n                bg=\"white\"\n                borderRadius={{ base: \"none\", sm: \"10px\" }}\n                p=\"20px\"\n                shadow={{ base: \"none\", sm: \"md\" }}\n                w={{ base: \"100%\", sm: \"400px\" }}\n                h={{ base: \"100%\", sm: \"500px\" }}\n                textAlign=\"center\"\n                flexDirection=\"column\"\n                mx=\"auto\"\n                mt={{ base: \"none\", sm: \"2vh\" }}\n            >\n                <Text\n                    display={{ base: \"inline\", sm: \"none\" }}\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    mb=\"20px\"\n                >\n                    Bebop!\n                </Text>\n                {/* タブを作成 */}\n                <Tabs isFitted variant=\"enclosed\">\n                    <TabList mb=\"1em\">\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            ログイン\n                        </Tab>\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            新規登録\n                        </Tab>\n                    </TabList>\n\n                    {/* タブの中身を記述 */}\n                    <TabPanels>\n                        {/* ログイン用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <Form\n                                    onChange={onChangeLoginMailAddress}\n                                    value={loginMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeLoginPassword}\n                                    value={loginPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </Form>\n                                <Box h=\"10px\" />\n                                <PrimaryButton\n                                    onClick={onClickLogin}\n                                    disabled={\n                                        loginMailAddress === \"\" ||\n                                        loginPassword === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    ログイン\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                        {/* 新規登録用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <Form\n                                    onChange={onChangeRegName}\n                                    value={regName}\n                                >\n                                    ユーザー名\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeRegMailAddress}\n                                    value={regMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeRegPassword}\n                                    value={regPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeRegPasswordConfirm}\n                                    value={regPasswordConfirm}\n                                    inputType=\"password\"\n                                >\n                                    パスワード（再入力）\n                                </Form>\n                                <Box h=\"10px\" />\n                                <PrimaryButton\n                                    onClick={onClickRegister}\n                                    disabled={\n                                        regMailAddress === \"\" ||\n                                        regPassword === \"\" ||\n                                        regPasswordConfirm === \"\" ||\n                                        regPassword !== regPasswordConfirm ||\n                                        regName === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    新規登録\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n            </Flex>\n        </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback } from \"react\"\nimport { useMessage} from \"../message/useMessage\";\nimport { useLogin } from \"./useLogin\";\n\n\nexport const useRegister = () => {\n    const { showMessage } = useMessage();\n    const { login } = useLogin();\n\n\n\n    const register = useCallback( (name:string, mail: string, password: string ) =>\n    {\n        const data = {\n            name: name,\n            email: mail,\n            password: password\n        }\n\n        axios.post( \"api/register\", data )\n            .then( ( res ) =>\n            {\n                if ( res.status == 200 )\n                {\n                    login(mail,password)\n                }\n            } )\n            .catch(  () =>\n            {\n                showMessage( { title: \"新規登録に失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return {  register };\n}\n","import { memo, ReactNode, VFC } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginState } from \"../../store/loginState\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const AuthGuard: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isLogin } = useRecoilValue(loginState);\n\n    return isLogin ? <>{children}</> : <Redirect to=\"/login\" />;\n});\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\nimport { loginState } from \"../store/loginState\";\nimport { AuthGuard } from \"./auth_route/AuthGuard\";\n\nexport const Router = () => {\n    const { isLogin } = useRecoilValue(loginState);\n    return (\n        <Switch>\n            <Route exact path=\"/login\">\n                {/* ログイン済の場合はトップページにリダイレクトされる */}\n                {isLogin ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            {/* 未ログインの場合は「AuthGuard」によってログイン画面へリダイレクトされる */}\n            <AuthGuard>\n                <HomeLayout>\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            render={({ match: { url } }) => (\n                                <Switch>\n                                    {homeRoutes.map((route) => (\n                                        <Route\n                                            key={route.path}\n                                            exact={route.exact}\n                                            path={`${url}${route.path}`}\n                                        >\n                                            {route.children}\n                                        </Route>\n                                    ))}\n                                </Switch>\n                            )}\n                        />\n                    </Switch>\n                </HomeLayout>\n            </AuthGuard>\n            <Route path=\"*\">\n                <Page404 />\n            </Route>\n        </Switch>\n    );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}