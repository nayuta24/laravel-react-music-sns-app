{"version":3,"sources":["theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/Rating.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/home/post/PostCard.tsx","client/apiClient.ts","components/organisms/LoadingPageSpinner.tsx","components/pages/home/Recent.tsx","hooks/api/useApiPosts.ts","components/atoms/color/gradationGreen.ts","components/organisms/MusicDetailBox.tsx","components/molecules/post_detail/ReactionButtons.tsx","components/organisms/detail/DetailBox.tsx","components/pages/home/detail/PostDetail.tsx","hooks/api/useApiPostDetail.ts","components/organisms/home/Alert404.tsx","components/pages/home/detail/Detail404.tsx","components/molecules/create/CreateBreadcrumb.tsx","components/atoms/button/GoButton.tsx","components/molecules/Form.tsx","hooks/message/useMessage.ts","components/organisms/create/CreateTrackInfo.tsx","hooks/api/useApiTrack.ts","hooks/useValidateTrackURL.ts","components/atoms/button/BackButton.tsx","components/atoms/button/StarButton.tsx","components/molecules/create/FiveStarButton.tsx","components/organisms/create/CreateRate.tsx","components/organisms/create/CreateCheck.tsx","components/pages/create/Create.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/home/HomePostBox.tsx","store/loginState.ts","hooks/api/useApiMe.ts","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","hooks/login/useLogout.ts","components/organisms/home/MenuDrawer.tsx","components/organisms/home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Page404.tsx","hooks/login/useLogin.ts","components/pages/Login.tsx","hooks/login/useRegister.ts","router/auth_route/AuthGuard.tsx","router/Router.tsx","App.tsx","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","starSize","gap","map","value","mx","ml","pt","toFixed","LikeButton","icon","size","bg","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","apiClient","axios","create","baseURL","withCredentials","LoadingPageSpinner","thickness","speed","emptyColor","Recent","useSetRecoilState","setTopic","sort","useState","api_posts","setApiPosts","loading","setLoading","getPosts","useCallback","get","then","res","data","catch","finally","useApiPosts","useEffect","obj","Object","assign","gradationGreen","MusicDetailBox","undefined","album","release","ratio","bgGradient","frameBorder","allow","ReactionButtons","justifyContent","DetailBox","userName","userTitle","userImg","commentVal","likeVal","pr","PostDetail","failed","api_postDetail","setApiPostDetail","getPostDetail","useApiPostDetail","useParams","orientation","Alert404","status","variant","height","maxWidth","Detail404","CreateBreadcrumb","step","goTrackInfo","goRate","goCheck","blockTrack","blockRates","trackColor","setTrackColor","rateColor","setRateColor","checkColor","setCheckColor","trackWeight","setTrackWeight","rateWeight","setRateWeight","checkWeight","setCheckWeight","canMoveRate","canMoveCheck","spacing","separator","ChevronRight","isCurrentPage","pointerEvents","GoButton","isDisabled","Form","onChange","inputType","type","useMessage","toast","useToast","showMessage","position","duration","isClosable","CreateTrackInfo","onChangeTrackURL","trackUrl","setTrackId","trackData","saveTrackData","isExist","setIsExist","getTrack","saveTrack","useTrack","validateTrackURL","head","foot","url","regexHead","test","regexFoot","result","match","length","useValidateTrackURL","setTrack","onceSaveTrackData","val","trackId","BackButton","StarButton","num","rate","setRate","StarSize","zIndex","style","width","FiveStarButton","CreateRate","onChangeRate","onChangeTitle","onChangeBody","CreateCheck","Create","setStep","setTrackUrl","setTitle","setBody","setBlockTrack","setBlockRates","setTrackData","message","e","target","homeRoutes","path","exact","HamburgerButton","display","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","goBack","overflow","align","loginState","isLogin","NullMe","email","MenuButton","disabled","colorScheme","solid","_focus","boxShadow","PrimaryButton","MenuContents","apiMe","setApiMe","setIsLogin","getMe","useApiMe","logout","localStorage","removeItem","useLogout","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","HomeLayout","useDisclosure","Page404","useLogin","login","mail","password","error","Login","loginMailAddress","setLoginMailAddress","loginPassword","setLoginPassword","regMailAddress","setRegMailAddress","regPassword","setRegPassword","regPasswordConfirm","setRegPasswordConfirm","regName","setRegName","register","useRegister","sm","isFitted","_selected","outline","AuthGuard","Router","render","route","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"6gBAYeA,EAVDC,YAAY,CACxBC,OAAQ,CACNC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,UACjBC,MAAO,gB,yBCLFC,EAAYC,YAAM,CAC3BC,IAAK,YACLC,QAAS,CAAEC,MAAM,Y,kCCKRC,EAA2B,SAACC,GACrC,IAAQC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAEpB,OACI,cAAC,IAAD,CAAMC,EAAE,MAAMC,EAAE,OAAhB,SACI,eAAC,IAAD,CAAKC,EAAE,OAAP,UACI,cAAC,IAAD,CAAOC,IAAKN,EAAKO,QAAQ,MAAMC,GAAG,MAAMC,OAAO,iBAC/C,eAAC,IAAD,CAAKD,GAAG,KAAR,UACI,cAAC,IAAD,CAAME,SAAS,KAAKC,WAAW,OAA/B,SACKV,IAEL,cAAC,IAAD,CAAMS,SAAS,KAAf,SAAqBR,aCZ5BU,EAA0BC,gBAAK,SAACd,GAC3C,IAAQE,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KAEf,OACE,eAAC,IAAD,CAAKwB,EAAE,MAAMC,GAAG,KAAKC,GAAG,OAAxB,UACE,cAAC,IAAD,CAAMN,SAAS,KAAKC,WAAW,OAA/B,SACGV,IAEH,cAAC,IAAD,CAAMS,SAAS,KAAKF,GAAG,KAAvB,SACGlB,U,QCTI2B,EAAqB,SAAClB,GAC/B,IAAQmB,EAAWnB,EAAXmB,OACFC,EAAW,OACXC,EAAM,MACZ,OACI,eAAC,IAAD,WACK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,GAAD,OACjBJ,GAAUI,EACN,cAAC,IAAD,CAAKC,GAAIH,EAAT,SACI,cAAC,IAAD,CAAYV,SAAUS,EAAU3B,MAAM,aAE1C0B,GAAUI,EAAQ,GAClB,cAAC,IAAD,CAAKC,GAAIH,EAAT,SACI,cAAC,IAAD,CAAYV,SAAUS,EAAU3B,MAAM,aAG1C,cAAC,IAAD,CAAK+B,GAAIH,EAAT,SACI,cAAC,IAAD,CAAQV,SAAUS,EAAU3B,MAAM,gBAI9C,cAAC,IAAD,CAAMgC,GAAG,OAAOC,GAAG,MAAMd,WAAW,WAAWnB,MAAM,WAArD,SACK0B,EAAOQ,QAAQ,S,kBCtBnBC,EAAyB,SAAC5B,GACrC,IAAQuB,EAAUvB,EAAVuB,MACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,OACXM,KAAM,cAAC,IAAD,CAASC,KAAK,SACpBA,KAAK,MACLrC,MAAM,OACNsC,GAAG,SAEL,cAAC,IAAD,CAAMpB,SAAS,OAAOlB,MAAM,OAAOgC,GAAG,MAAtC,SACGF,QCjBIS,EAAc,WACzB,OACE,cAAC,IAAD,CACE,aAAW,OACXH,KAAM,cAAC,IAAD,IACNC,KAAK,MACLrC,MAAM,OACNsC,GAAG,U,SCFIE,EAA4B,SAACjC,GACxC,IAAQuB,EAAUvB,EAAVuB,MACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,UACXM,KAAM,cAACK,EAAA,EAAD,IACNJ,KAAK,MACLrC,MAAM,OACNsC,GAAG,SAEL,cAAC,IAAD,CAAMpB,SAAS,OAAOlB,MAAM,OAAOgC,GAAG,MAAtC,SACGF,QCTIY,EAAkCrB,gBAAK,SAACd,GACnD,IAAQoC,EAA0BpC,EAA1BoC,YAAaC,EAAarC,EAAbqC,SAErB,OACE,eAAC,IAAD,CAAM5B,GAAG,KAAT,UACE,cAAC,IAAD,CAAML,EAAE,MAAMkC,GAAG,OAAjB,SACE,cAAC,EAAD,CAAef,MAAOa,MAExB,cAAC,IAAD,CAAMhC,EAAE,MAAMkC,GAAG,OAAjB,SACE,cAAC,EAAD,CAAYf,MAAOc,MAErB,cAAC,IAAD,CAAMjC,EAAE,MAAMqB,GAAG,OAAjB,SACE,cAAC,EAAD,Y,SCbKc,EAA0BzB,gBAAK,SAACd,GAC3C,IAAQC,EAAoCD,EAApCC,IAAKuC,EAA+BxC,EAA/BwC,KAAMC,EAAyBzC,EAAzByC,WAAyBzC,EAAb0C,GAC/B,OACE,eAAC,IAAD,CAAM3B,EAAE,MAAMN,GAAG,OAAOgB,GAAG,OAA3B,UACE,cAAC,IAAD,CAAQM,GAAG,WAAWD,KAAK,KAAKQ,GAAG,OAAOrB,GAAG,OAAOV,IAAKN,IACzD,eAAC,IAAD,CAAM0C,cAAc,SAAS1B,GAAG,OAAOb,EAAE,QAAQwC,WAAW,QAA5D,UACE,cAAC,IAAD,CAAMjC,SAAS,KAAKP,EAAE,QAAQyC,UAAU,OAAxC,SACGL,IAEH,cAAC,IAAD,CAAM7B,SAAS,OAAOlB,MAAM,OAA5B,SACGgD,aCXEK,EAAwBhC,gBAAK,SAACd,GACvC,IAAQ+C,EAA0B/C,EAA1B+C,SAAUC,EAAgBhD,EAAhBgD,GAAIC,EAAYjD,EAAZiD,QAEtB,OACI,cAAC,IAAD,CACI7C,EAAE,MACFW,EAAE,OACFgB,GAAG,QACHmB,aAAa,OACbC,GAAG,OACHnC,GAAG,OACHN,OAAO,KACPsC,GAAIA,EACJI,OAAQ,CAAEC,OAAQ,UAAWC,QAAS,IACtCL,QAASA,EAVb,SAYKF,OCTAQ,EAAuBzC,gBAAK,SAACd,GACtC,IAAQwD,EAASxD,EAATwD,KACAC,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,OAAQC,EAAiBJ,EAAjBI,SAAUC,EAAOL,EAAPK,GACjCC,EAAUC,cAKhB,OACI,eAACjB,EAAD,CAAWE,GAAG,KAAKC,QALH,WAChBa,EAAQE,KAAR,gBAAsBH,KAItB,UAEI,cAAC,EAAD,CACI5D,IAAKyD,EAAMzD,IACXC,MAAOwD,EAAMxD,MACbC,OAAQuD,EAAMvD,SAElB,eAAC,IAAD,CACIC,EAAE,MACFW,EAAE,OACFuB,GAAG,OACH2B,SAAS,SACTpB,UAAU,OACVpB,GAAG,KANP,UASI,cAACZ,EAAD,CAAaX,MAAOyD,EAAOzD,MAAOX,KAAMoE,EAAOpE,OAC/C,eAAC,IAAD,CAAMkB,GAAG,OAAT,UACI,eAAC,IAAD,CAAKL,EAAE,MAAP,UAEI,cAAC,EAAD,CAAQe,OAAQwC,EAAOO,OAEvB,cAAC/B,EAAD,CACIC,YAAawB,EAASxB,YACtBC,SAAUuB,EAASvB,cAI3B,cAACE,EAAD,CACItC,IAAKwD,EAAKxD,IACVuC,KAAMiB,EAAKjB,KACXC,WAAYgB,EAAKU,IACjBzB,GAAG,mB,wBClDZ0B,EALGC,IAAMC,OAAO,CAC3BC,QAAS,GACTC,iBAAiB,I,SCDRC,EAAqB3D,gBAAK,WACnC,OACI,cAAC,IAAD,CACI4D,UAAU,MACVC,MAAM,OACNC,WAAW,WACXnF,MAAM,UACNqC,KAAK,KACLxB,EAAE,OACFG,GAAG,WCAFoE,EAAS/D,gBAAK,WAENgE,YAAkBpF,EACnCqF,CAAS,CAAEjF,MAAO,WAElB,MCPuB,SAACkF,GACxB,MAAiCC,mBAA+B,IAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,MAAO,CAAEC,SAXQC,uBAAY,WACzBF,GAAW,GACXjB,EACKoB,IADL,qBAEKC,MAAK,SAACC,GAAD,OAASP,EAAYO,EAAIC,SAC9BC,OAAO,eAGPC,SAAQ,kBAAMR,GAAW,QAC/B,IAEgBH,YAAWE,WDRWU,GAAjCR,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,UAAWE,EAA7B,EAA6BA,QAM7B,OALAW,qBAAU,kBAAMT,MAAY,CAACA,IAOzB,aADA,CACA,qBACKF,EACG,cAACX,EAAD,IAEA,cAAC,IAAD,UAEKS,EAAU5D,KAAI,SAAC0E,GAAD,OACX,cAAC,IAAD,UAEI,cAACzC,EAAD,CAAUC,KAAMyC,OAAOC,OAAOF,MAFxBA,EAAInC,c,oCEhCzBsC,EAAiB,gCCajBC,EAA6B,SAACpG,GACvC,MAMIA,EALA6D,UADJ,WACSwC,EADT,IAMIrG,EAJAE,aAFJ,WAEYmG,EAFZ,IAMIrG,EAHAsG,aAHJ,WAGYD,EAHZ,IAMIrG,EAFAG,cAJJ,WAIakG,EAJb,IAMIrG,EADAuG,eALJ,WAKcF,EALd,EAOA,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAaG,MAAO,EAAOhG,QAAQ,MAAnC,cACY6F,IAAPxC,EACG,cAAC,IAAD,CAAK4C,WAAYN,EAAjB,SACI,cAAC,IAAD,CAAkB1G,MAAM,OAAOkB,SAAS,WAG5C,wBACIJ,IAAG,+CAA0CsD,GAC7C6C,YAAY,IACZC,MAAM,sBAIlB,eAAC,IAAD,CAAM/D,WAAW,QAAQqB,SAAS,SAASxC,GAAI,EAAGhB,GAAG,OAAOuC,GAAG,KAA/D,UACI,cAAC,IAAD,CAAMpC,WAAW,OAAOD,SAAS,OAAOqC,GAAG,KAA3C,cACeqD,IAAVnG,EACK,uFACAA,IAEV,eAAC,IAAD,CAAMS,SAAS,KAAf,6DACuB0F,IAAVC,EAAsB,MAAQA,KAE3C,eAAC,IAAD,CAAM3F,SAAS,KAAf,4DAEgB0F,IAAXlG,EAAuB,MAAQA,KAEpC,eAAC,IAAD,CAAMQ,SAAS,KAAf,iDACuB0F,IAAZE,EAAwB,MAAQA,YCvC9CK,EAA8B9F,gBAAK,SAACd,GAC/C,IAAQoC,EAA0BpC,EAA1BoC,YAAaC,EAAarC,EAAbqC,SACrB,OACE,eAAC,IAAD,CAAMwE,eAAe,SAASzG,EAAE,MAAMK,GAAI,EAA1C,UACE,cAAC,IAAD,CAAK6B,GAAG,OAAR,SACE,cAAC,EAAD,CAAef,MAAOa,MAExB,cAAC,IAAD,CAAKZ,GAAG,OAAR,SACE,cAAC,EAAD,CAAYD,MAAOc,MAErB,cAAC,IAAD,CAAKZ,GAAG,OAAR,SACE,cAAC,EAAD,YCLKqF,EAAwB,SAAC9G,GAClC,MASIA,EARA+G,gBADJ,MACe,GADf,IASI/G,EAPAgH,iBAFJ,MAEgB,GAFhB,IASIhH,EANAiH,eAHJ,MAGc,GAHd,EAII9F,EAKAnB,EALAmB,OAJJ,EASInB,EAJAE,aALJ,MAKY,GALZ,IASIF,EAHAT,YANJ,MAMW,GANX,EAOI2H,EAEAlH,EAFAkH,WACAC,EACAnH,EADAmH,QAEJ,OACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAMtE,UAAU,OAAhB,UACI,cAAC,IAAD,CAAKP,GAAI,EAAT,SACI,cAACC,EAAD,CACIC,KAAMuE,EACNtE,WAAYuE,EACZ/G,IAAKgH,WAIDZ,IAAXlF,EAAuB,wBAAU,cAAC,EAAD,CAAQA,OAAQA,OAEtD,eAAC,IAAD,CAAKV,GAAI,EAAGoC,UAAU,OAAtB,UACI,cAAC,IAAD,CAAMlC,SAAS,KAAKC,WAAW,OAA/B,SACKV,IAEL,cAAC,IAAD,CAAMS,SAAS,KAAKyG,GAAI,GAAI3G,GAAI,EAAhC,SACKlB,YAIO8G,IAAfa,QAAwCb,IAAZc,EACzB,wBAEA,cAACP,EAAD,CAAiBxE,YAAa8E,EAAY7E,SAAU8E,QClCvDE,EAAyB,SAACrH,GACnC,YAAWA,GACM8E,YAAkBpF,EACnCqF,CAAS,CAAEjF,MAAO,WAClB,IAEA,ECnB4B,SAAE+D,GAE9B,MAA6CoB,mBAAyBqC,GAAtE,mBAAQC,EAAR,KAAwBC,EAAxB,KACA,EAAgCvC,oBAAU,GAA1C,mBAAQG,EAAR,KAAiBC,EAAjB,KACMvB,EAAUC,cAehB,MAAO,CAAE0D,cAdalC,uBAAY,WAE9BF,GAAY,GAEZjB,EACCoB,IADD,qBACoC3B,IACnC4B,MAAM,SAAEC,GAAF,OAAW8B,EAAkB9B,EAAIC,SACvCC,OAAO,WAEJ9B,EAAQE,KAAK,eAEf6B,SAAS,kBAAMR,GAAY,QAC/B,IAEsBkC,iBAAgBnC,WDAWsC,CAFpCC,cAAP9D,IAEA4D,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,eAAgBnC,EAAvC,EAAuCA,QAMvC,OALAW,qBAAU,kBAAM0B,MAAiB,IAO7B,aADA,CACA,qBACKrC,EACG,cAACX,EAAD,IAEA,eAAC,IAAD,WACI,cAAC,EAAD,CACIZ,GAAI0D,EAAe7D,MAAMG,GACzB3D,MAAOqH,EAAe7D,MAAMxD,MAC5BoG,MAAOiB,EAAe7D,MAAM4C,MAC5BnG,OAAQoH,EAAe7D,MAAMvD,OAC7BoG,QAASgB,EAAe7D,MAAM6C,UAElC,cAAC,IAAD,CAASqB,YAAY,aAAaxH,EAAE,OAAOK,GAAI,EAAGuC,GAAG,MACrD,cAAC,EAAD,CACI+D,SAAUQ,EAAe9D,KAAKjB,KAC9BwE,UAAWO,EAAe9D,KAAKU,IAC/B8C,QAASM,EAAe9D,KAAKxD,IAC7BkB,OAAQoG,EAAe5D,OAAOO,KAC9BhE,MAAOqH,EAAe5D,OAAOzD,MAC7BX,KAAMgI,EAAe5D,OAAOpE,KAC5B2H,WAAYK,EAAe3D,SAASxB,YACpC+E,QAASI,EAAe3D,SAASvB,WAErC,cAAC,IAAD,CAASuF,YAAY,aAAaxH,EAAE,OAAOK,GAAI,EAAGuC,GAAG,Y,SEzC5D6E,EAAuB/G,gBAAK,SAACd,GACtC,IAAQE,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KACCwE,cAKhB,OACI,eAAC,IAAD,CACI+D,OAAO,QACPC,QAAQ,SACRpF,cAAc,SACdC,WAAW,SACXC,UAAU,SACVmF,OAAO,QACPtG,GAAG,OAPP,UASI,cAAC,IAAD,CAAWlB,QAAQ,OAAO8B,GAAI,IAC9B,cAAC,IAAD,CAAY7B,GAAI,EAAGuC,GAAI,EAAGrC,SAAS,KAAnC,SACKT,IAEL,cAAC,IAAD,CAAkB+H,SAAS,KAA3B,SAAiC1I,UClChC2I,EAAY,WACrB,OAAO,cAACL,EAAD,CAAU3H,MAAM,qBAAMX,KAAK,0F,kBCkBzB4I,GAA+BrH,gBAAK,SAACd,GAC9C,IAAQoI,EACJpI,EADIoI,KAAMC,EACVrI,EADUqI,YAAaC,EACvBtI,EADuBsI,OAAQC,EAC/BvI,EAD+BuI,QAASC,EACxCxI,EADwCwI,WAAYC,EACpDzI,EADoDyI,WAGxD,EAAoCxD,mBAAgB,YAApD,mBAAOyD,EAAP,KAAmBC,EAAnB,KACA,EAAkC1D,mBAAgB,YAAlD,mBAAO2D,EAAP,KAAkBC,EAAlB,KACA,EAAoC5D,mBAAgB,YAApD,mBAAO6D,EAAP,KAAmBC,EAAnB,KACA,EAAsC9D,mBAAiB,UAAvD,mBAAO+D,EAAP,KAAoBC,EAApB,KACA,EAAoChE,mBAAiB,UAArD,mBAAOiE,EAAP,KAAmBC,EAAnB,KACA,EAAsClE,mBAAiB,UAAvD,mBAAOmE,EAAP,KAAoBC,EAApB,KAEAtD,qBAAU,WAENkD,EAAe,UACfN,EAAc,YACdQ,EAAc,UACdN,EAAa,YACbQ,EAAe,UACfN,EAAc,YACD,UAATX,GACAa,EAAe,QACfN,EAAc,UACE,SAATP,GACPe,EAAc,QACdN,EAAa,WAEbQ,EAAe,QACfN,EAAc,YAEnB,CAACX,IAIJ,IAAIkB,EAA+Bd,EAAa,OAAS,OACrDe,EACAf,GAAcC,EAAa,OAAS,OAYxC,OAVA1C,qBAAU,WACQuD,EAAdd,EAA4B,OAAyB,SACtD,CAACA,IAEJzC,qBAAU,WAECwD,EADPf,GAAcC,EACQ,OACA,SACvB,CAACD,IAGA,eAAC,IAAD,CACIgB,QAAQ,OACR/H,GAAG,MACHgI,UAAW,cAACC,EAAA,EAAD,CAAkBjK,MAAM,WAAWkB,SAAS,SACvDkC,UAAU,OACVG,GAAG,OALP,UAOI,cAAC,IAAD,CAAgB2G,cAAwB,UAATvB,EAA/B,SACI,cAAC,IAAD,CACIzH,SAAS,OACTlB,MAAOiJ,EACP9H,WAAYoI,EACZ/F,QAASoF,EAJb,wCASJ,cAAC,IAAD,CACIsB,cAAwB,SAATvB,EACfwB,cAAeN,EAFnB,SAII,cAAC,IAAD,CACI3I,SAAS,OACTlB,MAAOmJ,EACPhI,WAAYsI,EACZjG,QAASqF,EAJb,4BASJ,cAAC,IAAD,CACIqB,cAAwB,UAATvB,EACfwB,cAAeL,EAFnB,SAII,cAAC,IAAD,CACI5I,SAAS,OACTlB,MAAOqJ,EACPlI,WAAYwI,EACZnG,QAASsF,EAJb,8C,UC7FHsB,GAAuB,SAAC7J,GACjC,IAAQiD,EAA6CjD,EAA7CiD,QAAR,EAAqDjD,EAApCS,UAAjB,MAAsB,OAAtB,IAAqDT,EAAvB8J,kBAA9B,SACA,OACI,cAAC,KAAD,CACIrJ,GAAIA,EACJL,EAAE,OACFW,EAAE,OACFU,GAAG,OACHM,GAAG,aACHtC,MAAM,QACNwD,QAASA,EACTtC,SAAS,OACTmJ,WAAYA,EAThB,2B,UCDKC,GAAmB,SAAC/J,GAC7B,IACIgK,EAMAhK,EANAgK,SACAzI,EAKAvB,EALAuB,MACAwB,EAIA/C,EAJA+C,SAHJ,EAOI/C,EAHAiK,iBAJJ,MAIgB,OAJhB,IAOIjK,EAFAW,gBALJ,MAKe,KALf,IAOIX,EADAY,kBANJ,MAMiB,SANjB,EASA,OACI,eAAC,IAAD,CAAKiC,UAAU,QAAQzC,EAAE,OAAzB,UACI,cAAC,IAAD,CACIqB,GAAI,EACJuB,GAAI,EACJrC,SAAUA,EACVC,WAAYA,EACZnB,MAAM,WALV,SAOKsD,IAEL,cAAC,KAAD,CAAOmH,KAAMD,EAAWD,SAAUA,EAAUzI,MAAOA,Q,UCxBlD4I,GAAa,WACxB,IAAMC,EAAQC,eAad,MAAO,CAAEC,YAXW/E,uBAAY,SAACvF,GAC/B,IAAQE,EAAkBF,EAAlBE,MAAO4H,EAAW9H,EAAX8H,OACfsC,EAAM,CACJlK,QACA4H,SACAyC,SAAU,MACVC,SAAU,IACVC,YAAY,MAEb,MCSQC,GAA8B,SAAC1K,GACxC,IACIsI,EAOAtI,EAPAsI,OACAqC,EAMA3K,EANA2K,iBACAC,EAKA5K,EALA4K,SACAC,EAIA7K,EAJA6K,WACArC,EAGAxI,EAHAwI,WACAsC,EAEA9K,EAFA8K,UACAC,EACA/K,EADA+K,cAEJ,EAA8B9F,oBAAkB,GAAhD,mBAAO+F,EAAP,KAAgBC,EAAhB,KACA,EClCoB,WAEpB,IAAQX,EAAgBH,KAAhBG,YAmBR,MAAO,CAAEY,SAlBQ3F,uBAAa,SAAE1B,EAAwBsH,GAIpD/G,EACKoB,IADL,qBACsC3B,IACjC4B,MAAM,SAAEC,GAELyF,EAAUzF,EAAIC,SAGjBC,OAAO,WAEJuF,OAAW9E,GACXiE,EAAa,CAACpK,MAAO,iFAAgB4H,OAAQ,eAEtD,KDekBsD,GAAbF,EAAR,EAAQA,SACAG,EEvCuB,WAC9B,IAAMC,EAAO,2CACRC,EAAO,UA4BT,MAAO,CAAEF,iBA3BY9F,uBAAa,SAAEiG,GAEpC,IAAI3H,EACE4H,EAAYH,EAAKI,KAAMF,GACvBG,EAAYJ,EAAKG,KAAMF,GAGzB,GAAKC,GAAaE,EAClB,CACK,IAAMC,EAASJ,EAAIK,MAChB,mDAKAhI,EAFuB,KAAtB+H,EAAQ,GAAGE,OAEPF,EAAQ,QAIRvF,OAGLxC,OAAKwC,EAGjB,OAAOxC,IACT,KFU2BkI,GAArBV,iBACAf,EAAgBH,KAAhBG,YACR,EAA0BrF,qBAA1B,mBAAOvB,EAAP,KAAcsI,EAAd,KAGMC,EAAoB,SAACC,GACvBF,EAASE,IAgCb,OAVAnG,qBAAU,gBACQM,IAAV3C,GACAuH,GAAW,GACXJ,EAAW,MAEXI,GAAW,GACXF,EAAcrH,MAEnB,CAACA,IAGA,eAAC,IAAD,WAEKsH,GACG,cAAC,EAAD,CACInH,GAAE,OAAEiH,QAAF,IAAEA,OAAF,EAAEA,EAAWjH,GACf3D,MAAK,OAAE4K,QAAF,IAAEA,OAAF,EAAEA,EAAW5K,MAClBoG,MAAK,OAAEwE,QAAF,IAAEA,OAAF,EAAEA,EAAWxE,MAClBnG,OAAM,OAAE2K,QAAF,IAAEA,OAAF,EAAEA,EAAW3K,OACnBoG,QAAO,OAAEuE,QAAF,IAAEA,OAAF,EAAEA,EAAWvE,UAG5B,eAAC,IAAD,CAAM5D,cAAc,SAASlC,GAAG,OAAhC,UACI,eAAC,IAAD,CAAMA,GAAG,OAAT,UACI,cAAC,GAAD,CACIuJ,SAAUW,EACVpJ,MAAOqJ,EACPjK,SAAS,KACTC,WAAW,WAJf,wHAQA,cAAC,KAAD,CACIa,GAAG,KACHrB,EAAE,MACFqG,WAAYN,EACZ1G,MAAM,QACNkB,SAAS,KACTF,GAAG,OACHwC,QA1DD,WACf,IAAMkJ,EAAUd,EAAiBT,QAEjBvE,IAAZ8F,GACAlB,GAAW,GACXX,EAAY,CACRpK,MAAO,8EACP4H,OAAQ,UAEZ+C,EAAW,MAIXK,EAASiB,EAASF,GAClBpB,EAAWsB,KAqCH,6BAYJ,cAAC,IAAD,IACA,cAAC,GAAD,CAAUlJ,QAASqF,EAAQ7H,GAAG,OAAOqJ,WAAYtB,W,UG1GpD4D,GAAyB,SAACpM,GACnC,IAAQiD,EAAyBjD,EAAzBiD,QAAR,EAAiCjD,EAAhBS,UAAjB,MAAsB,OAAtB,EACA,OACI,cAAC,KAAD,CACIA,GAAIA,EACJL,EAAE,OACFW,EAAE,OACFU,GAAG,OACHM,GAAG,aACHtC,MAAM,QACNwD,QAASA,EACTtC,SAAS,OARb,2BCFK0L,GAAyB,SAACrM,GACnC,IAAQsM,EAAuBtM,EAAvBsM,IAAKC,EAAkBvM,EAAlBuM,KAAMC,EAAYxM,EAAZwM,QACnB,EAA0BvH,mBAAmC,QAA7D,mBASMwH,GATN,UASiB,QAGjB,OACI,eAAC,IAAD,WAEI,cAAC,IAAD,CACIjM,QAAQ,OACRqG,eAAe,SACfjE,WAAW,SACX2H,SAAS,WACTmC,OAAO,IALX,SAOKH,GAAQD,EACL,cAAC,IAAD,CAAY3L,SAAU8L,EAAUhN,MAAM,WACtC8M,GAAQD,EAAM,GACd,cAAC,IAAD,CAAY3L,SAAU8L,EAAUhN,MAAM,WAEtC,cAAC,IAAD,CAAQkB,SAAU8L,EAAUhN,MAAM,aAI1C,eAAC,IAAD,CAAMe,QAAQ,OAAO+J,SAAS,WAAWmC,OAAO,IAAhD,UAEI,wBACIzJ,QAhCI,WAChBuJ,EAAQF,EAAM,KAgCFK,MAAO,CACHzJ,aAAc,IACd8E,OAAQ,OACR4E,MAAO,SAIf,wBACI3J,QAtCI,WAChBuJ,EAAQF,IAsCIK,MAAO,CACHzJ,aAAc,IACd8E,OAAQ,OACR4E,MAAO,YAInB,cAAC,IAAD,CAAKxM,EAzCG,aCbPyM,GAA6B,SAAC7M,GACvC,IAAQuM,EAAkBvM,EAAlBuM,KAAMC,EAAYxM,EAAZwM,QACd,OACI,eAAC,IAAD,CAAM7J,cAAc,SAASC,WAAW,SAAxC,UACI,cAAC,IAAD,CAAMnC,GAAG,OAAOuC,GAAG,OAAnB,SACK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG1B,KAAI,SAACC,GAAD,OACjB,cAAC,GAAD,CAAY+K,IAAK/K,EAAOgL,KAAMA,EAAMC,QAASA,SAGrD,cAAC,IAAD,CACI/L,GAAG,MACHe,GAAG,OACH4F,GAAG,OACHhH,EAAE,MACFQ,WAAW,OACXD,SAAS,OACTlB,MAAM,WAPV,SASK8M,EAAK5K,QAAQ,SCTjBmL,GAAyB,SAAC9M,GACnC,IACIqI,EASArI,EATAqI,YACAE,EAQAvI,EARAuI,QACAwE,EAOA/M,EAPA+M,aACAC,EAMAhN,EANAgN,cACAC,EAKAjN,EALAiN,aACAV,EAIAvM,EAJAuM,KACArM,EAGAF,EAHAE,MACAX,EAEAS,EAFAT,KACAkJ,EACAzI,EADAyI,WAGJ,OACI,eAAC,IAAD,CAAM9F,cAAc,SAASlC,GAAG,OAAhC,UACI,eAAC,IAAD,CAAMkC,cAAc,SAApB,UACI,cAAC,IAAD,CACIhC,SAAS,KACTc,GAAG,OACHb,WAAW,WACXnB,MAAM,WAJV,iCAQA,cAAC,IAAD,CAAKoD,UAAU,SAAf,SACI,cAAC,GAAD,CAAgB0J,KAAMA,EAAMC,QAASO,SAG7C,eAAC,IAAD,CAAKtM,GAAG,OAAR,UACI,cAAC,IAAD,CACIE,SAAS,KACTc,GAAG,OACHb,WAAW,WACXnB,MAAM,WAJV,6EAQA,cAAC,KAAD,CACIyK,KAAK,OACL9J,EAAE,OACFK,GAAG,OACHuJ,SAAUgD,EACVzL,MAAOrB,OAGf,eAAC,IAAD,CAAKO,GAAG,OAAR,UACI,cAAC,IAAD,CACIE,SAAS,KACTc,GAAG,OACHV,EAAE,OACFH,WAAW,WACXnB,MAAM,WALV,kEASA,cAAC,KAAD,CACIyK,KAAK,OACL9J,EAAE,OACFW,EAAE,QACFN,GAAG,OACHuJ,SAAUiD,EACV1L,MAAOhC,OAGf,eAAC,IAAD,CAAMkC,GAAG,OAAT,UACI,cAAC,IAAD,UACI,cAAC,GAAD,CAAYwB,QAASoF,EAAa5H,GAAG,WAEzC,cAAC,IAAD,CAAKL,EAAE,SACP,cAAC,IAAD,UACI,cAAC,GAAD,CACI6C,QAASsF,EACT9H,GAAG,OACHqJ,WAAYrB,aC9EvByE,GAA0B,SAAClN,GACpC,IAAQ8K,EAAiC9K,EAAjC8K,UAAWyB,EAAsBvM,EAAtBuM,KAAMrM,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KAChC,OACI,eAAC,IAAD,WACI,cAAC,EAAD,CACIsE,GAAE,OAAEiH,QAAF,IAAEA,OAAF,EAAEA,EAAWjH,GACf3D,MAAK,OAAE4K,QAAF,IAAEA,OAAF,EAAEA,EAAW5K,MAClBoG,MAAK,OAAEwE,QAAF,IAAEA,OAAF,EAAEA,EAAWxE,MAClBnG,OAAM,OAAE2K,QAAF,IAAEA,OAAF,EAAEA,EAAW3K,OACnBoG,QAAO,OAAEuE,QAAF,IAAEA,OAAF,EAAEA,EAAWvE,UAExB,cAAC,IAAD,CAASqB,YAAY,aAAaxH,EAAE,OAAOK,GAAI,EAAGuC,GAAG,MACrD,cAAC,EAAD,CACI+D,SAAS,qBACTC,UAAU,eACVC,QAAQ,GACR9F,OAAQoL,EACRrM,MAAOA,EACPX,KAAMA,IAEV,cAAC,IAAD,CAASqI,YAAY,aAAaxH,EAAE,OAAOK,GAAI,EAAGuC,GAAG,UCrBpDmK,GAASrM,gBAAK,WACNgE,YAAkBpF,EACnCqF,CAAS,CAAEjF,MAAO,WAGlB,MAAwBmF,mBAAqC,SAA7D,mBAAOmD,EAAP,KAAagF,EAAb,KACM/E,EAAc,WAChB+E,EAAQ,UAEN9E,EAAS,WACX8E,EAAQ,SAEN7E,EAAU,WACZ6E,EAAQ,UAIZ,EAAgCnI,mBAAiB,IAAjD,mBAAO2F,EAAP,KAAiByC,EAAjB,KACA,EAA8BpI,mBAAiB,IAA/C,mBAAOkH,EAAP,KAAgBtB,EAAhB,KACA,EAAwB5F,mBAAiB,GAAzC,mBAAOsH,EAAP,KAAaC,EAAb,KACA,EAA0BvH,mBAAiB,IAA3C,mBAAO/E,EAAP,KAAcoN,EAAd,KACA,EAAwBrI,mBAAiB,IAAzC,mBAAO1F,EAAP,KAAagO,EAAb,KAoBA,EAAoCtI,oBAAkB,GAAtD,mBAAOuD,EAAP,KAAmBgF,EAAnB,KACAzH,qBAAU,WACWyH,EAAL,KAAZrB,KACD,CAACA,IAGJ,MAAoClH,oBAAkB,GAAtD,mBAAOwD,EAAP,KAAmBgF,EAAnB,KACA1H,qBAAU,WAEA0H,EADG,IAATlB,GAA0B,KAAVrM,GAAyB,KAATX,KAGjC,CAACgN,EAAMrM,EAAOX,IAGjB,MAAkC0F,qBAAlC,mBAAO6F,EAAP,KAAkB4C,EAAlB,KAKA,OACI,eAAC,IAAD,CAAK7K,UAAU,OAAf,UAEI,cAAC,IAAD,CAAQ8K,QAAQ,6HAChB,cAACxF,GAAD,CACIC,KAAMA,EACNC,YAAaA,EACbC,OAAQA,EACRC,QAASA,EACTC,WAAYA,EACZC,WAAYA,IAGN,UAATL,EACG,cAAC,GAAD,CACIE,OAAQA,EACRqC,iBArDS,SAACiD,GAAD,OACrBP,EAAYO,EAAEC,OAAOtM,QAqDTqJ,SAAUA,EACVuB,QAASA,EACTtB,WA3CM,SAAChH,GACnBgH,EAAWhH,IA2CC2E,WAAYA,EACZsC,UAAWA,EACXC,cA1BM,SAAC/E,GACnB0H,EAAa1H,MA2BI,SAAToC,EACA,cAAC,GAAD,CACIG,QAASA,EACTF,YAAaA,EACb0E,aAxDK,SAACb,GAClBM,EAAQN,IAwDIK,KAAMA,EACNS,cAhEM,SAACY,GAAD,OAClBN,EAASM,EAAEC,OAAOtM,QAgENrB,MAAOA,EACP+M,aA/DK,SAACW,GAAD,OACjBL,EAAQK,EAAEC,OAAOtM,QA+DLhC,KAAMA,EACNkJ,WAAYA,IAGhB,cAAC,GAAD,CACI8D,KAAMA,EACNrM,MAAOA,EACPX,KAAMA,EACNuL,UAAWA,UC1GlBgD,GAAa,CACtB,CACIC,KAAM,GACNC,OAAO,EACPjL,SAAU,cAAC8B,EAAD,KAEd,CACIkJ,KAAM,cACNC,OAAO,EAEPjL,SAAU,cAAC8B,EAAD,KAEd,CACIkJ,KAAM,UACNC,OAAO,EAEPjL,SAAU,cAAC8B,EAAD,KAEd,CACIkJ,KAAM,WACNC,OAAO,EACPjL,SAAU,cAAC,EAAD,KAEd,CACIgL,KAAM,cACNC,OAAO,EACPjL,SAAU,cAACoK,GAAD,KAEd,CACIY,KAAM,UACNC,OAAO,EACPjL,SAAU,cAAC,EAAD,KAEd,CACIgL,KAAM,IACNC,OAAO,EACPjL,SAAU,cAAC8B,EAAD,M,8BC/BLoJ,GAA8BnN,gBAAK,SAACd,GAC7C,IAAQkO,EAA4DlO,EAA5DkO,QAASjL,EAAmDjD,EAAnDiD,QAAjB,EAAoEjD,EAA1CyB,UAA1B,MAA+B,OAA/B,IAAoEzB,EAA7BiB,UAAvC,MAA4C,OAA5C,IAAoEjB,EAAhB8B,YAApD,MAA2D,KAA3D,EACA,OACI,cAAC,IAAD,CACI2E,WAAW,gCACXhH,MAAM,QACN,aAAW,YACXoC,KAAM,cAACsM,GAAA,EAAD,IACNrM,KAAMA,EACNL,GAAIA,EACJR,GAAIA,EACJiN,QAASA,EACTjL,QAASA,OCjBRmL,GAA4B,SAACpO,GACxC,IAAQ+C,EAAa/C,EAAb+C,SACR,OACE,cAAC,IAAD,CACEsL,GAAG,KACH5O,MAAM,WACN6C,GAAG,OACH7B,GAAG,MACHE,SAAU,CAAE2N,KAAM,OAAQC,GAAI,SALhC,SAOGxL,KCFMyL,GAA0B1N,gBAAK,SAACd,GACzC,IAAQ+C,EAAqB/C,EAArB+C,SAAU0L,EAAWzO,EAAXyO,OACV3O,EAAU4O,YAAehP,GAAzBI,MACFgE,EAAUC,cAMhB,OACI,eAAC,IAAD,CACI3D,EAAG,CAAEkO,KAAM,OAAQC,GAAI,QACvBxN,EAAE,QACF4N,QAAS,CAAEL,KAAM,OAAQC,GAAI,OAC7BK,YAAa,CAAEL,GAAI,YACnB5L,cAAc,SALlB,UAQI,eAAC,IAAD,CACI0L,GAAG,MACHjO,EAAE,OACFyO,aAAa,MACbD,YAAY,WAEZzL,GAAG,KANP,UASI,cAAC,IAAD,CAAKlC,GAAG,OAAOF,EAAE,KAAjB,SACe,WAAVjB,EACG,cAAC,GAAD,6CACU,WAAVA,EACA,cAAC,GAAD,uCACU,YAAVA,EACA,cAAC,GAAD,6CACU,WAAVA,EACA,cAAC,GAAD,uCAEA,eAAC,IAAD,WACI,cAAC,IAAD,CACI+B,KAAM,cAAC,KAAD,IACN,aAAW,YACXE,GAAG,OACHO,GAAI,EACJ3B,SAAS,OACTsC,QAvCT,WACfa,EAAQgL,UAuCgBrO,GAAG,OACHD,QAAS,CAAE8N,KAAM,OAAQC,GAAI,UAEjC,cAAC,GAAD,4CAKZ,cAACN,GAAD,CACIC,QAAS,CAAEI,KAAM,SAAUC,GAAI,QAC/BtL,QAASwL,EACThN,GAAG,OACHR,GAAG,OACHa,KAAK,UAIb,cAAC,IAAD,CACIf,EAAE,QACFX,EAAE,OACF2O,SAAS,OACTpM,cAAc,SACdqM,MAAM,SACNtN,GAAG,KACHyB,GAAI,EAPR,SASKJ,U,SCpFJkM,GAAatP,YAAM,CAC5BC,IAAK,aACLC,QAAS,CAAEqP,SAAQ,KCUjBC,GAAY,CAACtL,GAAG,GAAIrB,KAAK,GAAI4M,MAAM,ICJ5BC,GAAyBvO,gBAAK,SAACd,GACxC,IAAQ+C,EAAkD/C,EAAlD+C,SAAoBE,GAA8BjD,EAAxCI,EAAwCJ,EAA9BiD,SAA5B,EAA0DjD,EAArBsP,gBAArC,SACA,OACI,cAAC,KAAD,CACIC,YAAY,OACZxH,QAAQ,QACRyH,MAAM,OACNpP,EAAE,IACFgD,OAAQ,CAAEC,OAAQ,WAClBoM,OAAQ,CAAEC,UAAW,QACrBzM,QAASA,EACTqM,SAAUA,EARd,SAUKvM,OCZA4M,GAA4B,SAAC3P,GACtC,IAAQ+C,EAAyD/C,EAAzD+C,SAAR,EAAiE/C,EAA/CI,SAAlB,MAAsB,OAAtB,EAA8B6C,EAAmCjD,EAAnCiD,QAASqM,EAA0BtP,EAA1BsP,SAAvC,EAAiEtP,EAAhBS,UAAjD,MAAsD,OAAtD,EACA,OACI,cAAC,KAAD,CACIwC,QAASA,EACTxD,MAAM,QACNgH,WAAW,gCACXrG,EAAGA,EACHgD,OAAQ,CAAEE,QAAS,GAAKD,OAAQ,WAChCiM,SAAUA,EACV7O,GAAIA,EAPR,SASKsC,KCbA6M,GAAe9O,gBAAK,WAC7B,IAAMgD,EAAUC,cAEhB,EHGoB,WAEpB,MAAgCkB,oBAAU,GAA1C,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAakK,IAAzC,mBAAQU,EAAR,KAAeC,EAAf,KACMC,EAAajL,YAAmBmK,IAsBtC,MAAO,CAAEe,MAjBKzK,uBAAY,WACtBF,GAAW,GACXjB,EACKoB,IADL,WAEKC,MAAM,SAAEC,GAELoK,EAAUpK,EAAIC,MACdoK,EAAY,CAAEb,SAAQ,OAGzBtJ,OAAO,WAEJmK,EAAY,CAAEb,SAAQ,OAEzBrJ,SAAQ,kBAAMR,GAAW,QAC/B,IAEawK,QAAOzK,WG7BE6K,GAAjBD,EAAR,EAAQA,MAAOH,EAAf,EAAeA,MACf,ECLqB,WACrB,IAAQvF,EAAgBH,KAAhBG,YACFxG,EAAUC,cACVgM,EAAajL,YAAmBmK,IAgBtC,MAAO,CAAEiB,OAdM3K,uBAAa,WAExBlB,IAAMb,KAAM,cACPiC,MAAM,SAAAC,GAEHyK,aAAaC,WAAY,QACzBL,EAAY,CAAEb,SAAQ,IACtBpL,EAAQE,KAAM,UACdsG,EAAa,CAAEpK,MAAO,yDAAa4H,OAAQ,eAC3ClC,OAAO,SAAAF,GAEP4E,EAAa,CAAEpK,MAAO,2EAAgB4H,OAAQ,eAEvD,KDbgBuI,GAAXH,EAAR,EAAQA,OAERnK,qBAAU,kBAAMiK,MAAS,CAACA,IAmB1B,OACI,eAAC,IAAD,CAAM/L,SAAS,SAASxC,GAAG,OAAOmB,WAAW,QAAQwE,GAAG,OAAxD,UACI,cAAC,KAAD,CAAMkJ,GAAG,IAAT,SACI,cAAC,IAAD,CACIjC,GAAG,KACH1N,SAAS,OACT8F,WAAW,gCACX8J,OAAO,OACP3P,WAAW,OACXK,GAAG,OACHQ,GAAG,OAPP,sBAaJ,cAAC4N,GAAD,CAAYjP,EAAE,OAAO6C,QAjCZ,WACba,EAAQE,KAAK,MAgCT,4CAGA,cAACqL,GAAD,CAAYjP,EAAE,OAAO6C,QAjCR,WACjBa,EAAQE,KAAK,iBAgCmCsL,UAAU,EAAtD,sCAGA,cAACD,GAAD,CAAYjP,EAAE,OAAO6C,QAjCX,WACda,EAAQE,KAAK,aAgCgCsL,UAAU,EAAnD,4CAGA,cAAC,IAAD,CAAM7O,GAAG,OAAOgB,GAAG,OAAnB,SACI,cAAC,GAAD,CAAerB,EAAE,QAAQ6C,QAjCpB,WACba,EAAQE,KAAK,iBAgCL,4BAKJ,eAAC,IAAD,CAAKvD,GAAG,OAAOL,EAAE,OAAO6C,QAlCV,WAClBiN,KAiCI,UACI,cAAC3N,EAAD,CACItC,IAAI,0CACJuC,KAAMqN,EAAMrN,KACZC,WAAW,eACXC,GAAG,SAEP,cAAC,KAAD,CACI/B,SAAU,EACVP,EAAE,OACFW,EAAE,OACFwO,YAAY,MACZ9O,GAAG,OALP,qD,mBE3DH+P,GAAyB1P,gBAAK,SAACd,GAC1C,IAAQyQ,EAAoBzQ,EAApByQ,QAASC,EAAW1Q,EAAX0Q,OACjB,OACE,cAAC,KAAD,CAAQC,UAAU,OAAO7O,KAAK,KAAK2O,QAASA,EAASC,OAAQA,EAA7D,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAYrQ,EAAG,EAAG0B,GAAG,WAArB,SACE,cAAC6N,GAAD,eCVCgB,GAAsB9P,gBAAK,SAACd,GACrC,IAAQ+C,EAA8B/C,EAA9B+C,SAAU2N,EAAoB1Q,EAApB0Q,OAAQD,EAAYzQ,EAAZyQ,QAE1B,OACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAMjH,QAAQ,OAAd,SAEI,eAAC,IAAD,CAAMhI,GAAG,OAAOpB,EAAE,OAAlB,UACI,cAAC,IAAD,CACIA,EAAE,MACFW,EAAE,OACFmN,QAAS,CAAEI,KAAM,OAAQC,GAAI,UAC7BnH,GAAG,OACH3F,GAAG,MALP,SAOI,cAACmO,GAAD,MAEH7M,OAGT,cAACyN,GAAD,CAAYE,OAAQA,EAAQD,QAASA,UCtBpCI,GAAyB/P,gBAAK,SAACd,GACxC,IAAQ+C,EAAa/C,EAAb+C,SACR,EAAoC+N,eAA5BJ,EAAR,EAAQA,OAAQjC,EAAhB,EAAgBA,OAAQgC,EAAxB,EAAwBA,QAExB,OACI,cAAC,IAAD,CAAKrQ,EAAE,OAAP,SACI,cAACwQ,GAAD,CAASF,OAAQA,EAAQD,QAASA,EAAlC,SACI,cAACjC,GAAD,CAAaC,OAAQA,EAArB,SAA8B1L,WCjBjCgO,GAAU,WACrB,OAAO,0C,UCQIC,GAAW,WACpB,IAAQ1G,EAAgBH,KAAhBG,YACFxG,EAAUC,cAEhB,EAA0BkB,qBAA1B,mBACM8K,GADN,UACmBjL,YAAmBmK,KAsBtC,MAAO,CAAEgC,MApBK1L,uBAAa,SAAC2L,EAAcC,GAEtC/M,EAAUoB,IAAK,uBACVC,MAAM,SAAAC,GAEHtB,EAAUZ,KAAM,aAAc,CAC1B4L,MAAO8B,EACPC,SAAUA,IAET1L,MAAM,SAAAC,GAEH4E,EAAa,CAAEpK,MAAO,mDAAY4H,OAAQ,YAC1CiI,EAAY,CAAEb,SAAQ,IACtBpL,EAAQE,KAAM,QACd4B,OAAO,SAAAwL,GAEP9G,EAAa,CAAEpK,MAAO,2EAAgB4H,OAAQ,kBAG/D,MCjBMuJ,GAAQ,WAEjB,MAAgDpM,mBAAS,IAAzD,mBAAOqM,EAAP,KAAyBC,EAAzB,KACA,EAA0CtM,mBAAS,IAAnD,mBAAOuM,EAAP,KAAsBC,EAAtB,KAEA,EAA4CxM,mBAAS,IAArD,mBAAOyM,EAAP,KAAuBC,EAAvB,KACA,EAAsC1M,mBAAS,IAA/C,mBAAO2M,EAAP,KAAoBC,EAApB,KACA,EAAoD5M,mBAAS,IAA7D,mBAAO6M,EAAP,KAA2BC,EAA3B,KACA,EAA8B9M,mBAAS,IAAvC,mBAAO+M,EAAP,KAAgBC,EAAhB,KAsBA,EC1CuB,WACvB,IAAQ3H,EAAgBH,KAAhBG,YACA2G,EAAUD,KAAVC,MAyBR,MAAO,CAAGiB,SArBO3M,uBAAa,SAAC/C,EAAa0O,EAAcC,GAEtD,IAAMxL,EAAO,CACTnD,KAAMA,EACN4M,MAAO8B,EACPC,SAAUA,GAGd9M,IAAMb,KAAM,eAAgBmC,GACvBF,MAAM,SAAEC,GAEc,KAAdA,EAAIoC,QAELmJ,EAAMC,EAAKC,MAGlBvL,OAAQ,WAEL0E,EAAa,CAAEpK,MAAO,qEAAe4H,OAAQ,eAEtD,KDgBkBqK,GAAbD,EAAR,EAAQA,SAKAjB,EAAUD,KAAVC,MAKR,OACI,eAAC,IAAD,CACI7Q,EAAE,OACFW,EAAE,QACF8B,UAAU,SACVnB,GAAI,CAAE4M,KAAM,OAAQ8D,GAAI,QAJ5B,UAOI,cAAC,IAAD,CACIlE,QAAS,CAAEI,KAAM,OAAQ8D,GAAI,UAC7B/D,GAAG,KACH1N,SAAS,OACT8F,WAAW,gCACX8J,OAAO,OACP3P,WAAW,OANf,oBAWA,eAAC,IAAD,CACImB,GAAG,QACHmB,aAAc,CAAEoL,KAAM,OAAQ8D,GAAI,QAClC/R,EAAE,OACFK,OAAQ,CAAE4N,KAAM,OAAQ8D,GAAI,MAC5BhS,EAAG,CAAEkO,KAAM,OAAQ8D,GAAI,SACvBrR,EAAG,CAAEuN,KAAM,OAAQ8D,GAAI,SACvBvP,UAAU,SACVF,cAAc,SACdnB,GAAG,OACHf,GAAI,CAAE6N,KAAM,OAAQ8D,GAAI,OAV5B,UAYI,cAAC,IAAD,CACIlE,QAAS,CAAEI,KAAM,SAAU8D,GAAI,QAC/B/D,GAAG,KACH1N,SAAS,OACT8F,WAAW,gCACX8J,OAAO,OACP3P,WAAW,OACXoC,GAAG,OAPP,oBAYA,eAAC,KAAD,CAAMqP,UAAQ,EAACtK,QAAQ,WAAvB,UACI,eAAC,KAAD,CAAS/E,GAAG,MAAZ,UACI,cAAC,KAAD,CACIsP,UAAW,CAAE7S,MAAO,QAASsC,GAAI,aACjC0N,OAAQ,CAAE8C,QAAS,QACnB3R,WAAW,OAHf,sCAOA,cAAC,KAAD,CACI0R,UAAW,CAAE7S,MAAO,QAASsC,GAAI,aACjC0N,OAAQ,CAAE8C,QAAS,QACnB3R,WAAW,OAHf,yCAUJ,eAAC,KAAD,WAEI,cAAC,KAAD,UACI,eAAC,IAAD,CAAM+B,cAAc,SAASvC,EAAE,OAAOW,EAAE,OAAxC,UACI,cAAC,GAAD,CACIiJ,SAhGC,SAAC4D,GAAD,OAC7B2D,EAAoB3D,EAAEC,OAAOtM,QAgGDA,MAAO+P,EACPrH,UAAU,QAHd,wDAOA,cAAC,IAAD,CAAKlJ,EAAE,SACP,cAAC,GAAD,CACIiJ,SArGF,SAAC4D,GAAD,OAC1B6D,EAAiB7D,EAAEC,OAAOtM,QAqGEA,MAAOiQ,EACPvH,UAAU,WAHd,4CAOA,cAAC,IAAD,CAAKlJ,EAAE,SACP,cAAC,GAAD,CACIkC,QAvFX,WACjBgO,EAAMK,EAAkBE,IAuFIlC,SACyB,KAArBgC,GACkB,KAAlBE,EAEJ/Q,GAAG,OANP,2CAaR,cAAC,KAAD,UACI,eAAC,IAAD,CAAMkC,cAAc,SAASvC,EAAE,OAAOW,EAAE,OAAxC,UACI,cAAC,GAAD,CACIiJ,SA/GR,SAAC4D,GAAD,OACpBqE,EAAWrE,EAAEC,OAAOtM,QA+GQA,MAAOyQ,EAFX,4CAMA,cAAC,IAAD,CAAKjR,EAAE,SACP,cAAC,GAAD,CACIiJ,SA/HD,SAAC4D,GAAD,OAC3B+D,EAAkB/D,EAAEC,OAAOtM,QA+HCA,MAAOmQ,EACPzH,UAAU,QAHd,wDAOA,cAAC,IAAD,CAAKlJ,EAAE,SACP,cAAC,GAAD,CACIiJ,SApIJ,SAAC4D,GAAD,OACxBiE,EAAejE,EAAEC,OAAOtM,QAoIIA,MAAOqQ,EACP3H,UAAU,WAHd,4CAOA,cAAC,IAAD,CAAKlJ,EAAE,SACP,cAAC,GAAD,CACIiJ,SAzIG,SAAC4D,GAAD,OAC/BmE,EAAsBnE,EAAEC,OAAOtM,QAyIHA,MAAOuQ,EACP7H,UAAU,WAHd,0EAOA,cAAC,IAAD,CAAKlJ,EAAE,SACP,cAAC,GAAD,CACIkC,QA1IR,WACpBiP,EAASF,EAASN,EAAgBE,IA0INtC,SACuB,KAAnBoC,GACgB,KAAhBE,GACuB,KAAvBE,GACAF,IAAgBE,GACJ,KAAZE,EAEJvR,GAAG,OATP,wDEjLnB+R,GAAwB1R,gBAAK,SAACd,GACvC,IAAQ+C,EAAa/C,EAAb+C,SAGR,OAFoB2L,YAAeO,IAA3BC,QAES,mCAAGnM,IAAe,cAAC,IAAD,CAAUuN,GAAG,cCHvCmC,GAAS,WAClB,IAAQvD,EAAYR,YAAeO,IAA3BC,QACR,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlB,OAAK,EAACD,KAAK,SAAlB,SAEKmB,EAAU,cAAC,IAAD,CAAUoB,GAAG,MAAS,cAAC,GAAD,MAGrC,cAACkC,GAAD,UACI,cAAC3B,GAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACI9C,KAAK,IACL2E,OAAQ,gBAAYlH,EAAZ,EAAGK,MAASL,IAAZ,OACJ,cAAC,IAAD,UACKsC,GAAWxM,KAAI,SAACqR,GAAD,OACZ,cAAC,IAAD,CAEI3E,MAAO2E,EAAM3E,MACbD,KAAI,UAAKvC,GAAL,OAAWmH,EAAM5E,MAHzB,SAKK4E,EAAM5P,UAJF4P,EAAM5E,oBAa3C,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,GAAD,UCpBD6E,OAdf,WACE,OACE,qBAAKC,UAAU,MAAMlG,MAAO,CAAE3E,OAAQ,QAAtC,SACE,cAAC,KAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAgB7I,MAAOA,EAAvB,SACE,cAAC,GAAD,aCTZ2T,IAASJ,OACP,cAAC,IAAMK,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3f25a56.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    img: string;\n    title: string;\n    artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n    const { img, title, artist } = props;\n\n    return (\n        <Flex w=\"30%\" p=\"auto\">\n            <Box m=\"auto\">\n                <Image src={img} boxSize=\"90%\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n                <Box mt=\"5%\">\n                    <Text fontSize=\"md\" fontWeight=\"bold\">\n                        {title}\n                    </Text>\n                    <Text fontSize=\"xs\">{artist}</Text>\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"react-icons/bs\";\n\ntype Props = {\n    rating: number;\n};\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    const starSize = \"25px\";\n    const gap = \"1px\";\n    return (\n        <Flex>\n            {[1, 2, 3, 4, 5].map((value) =>\n                rating >= value ? (\n                    <Box mx={gap}>\n                        <BsStarFill fontSize={starSize} color=\"orange\" />\n                    </Box>\n                ) : rating >= value - 0.5 ? (\n                    <Box mx={gap}>\n                        <BsStarHalf fontSize={starSize} color=\"orange\" />\n                    </Box>\n                ) : (\n                    <Box mx={gap}>\n                        <BsStar fontSize={starSize} color=\"orange\" />\n                    </Box>\n                )\n            )}\n            <Text ml=\"10px\" pt=\"2px\" fontWeight=\"semibold\" color=\"gray.600\">\n                {rating.toFixed(1)}\n            </Text>\n        </Flex>\n    );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n  value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"like\"\n        icon={<GoHeart size=\"27px\" />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n  return (\n    <IconButton\n      aria-label=\"like\"\n      icon={<BsShareFill />}\n      size=\"0px\"\n      color=\"gray\"\n      bg=\"none\"\n    />\n  );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    mb: string;\n    onClick?: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n    const { children, mb, onClick } = props;\n\n    return (\n        <Flex\n            w=\"98%\"\n            h=\"33vh\"\n            bg=\"white\"\n            borderRadius=\"10px\"\n            px=\"30px\"\n            py=\"15px\"\n            shadow=\"md\"\n            mb={mb}\n            _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n            onClick={onClick}\n        >\n            {children}\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"2%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","import axios from 'axios';\n \nconst apiClient = axios.create({\n    baseURL: '',\n    withCredentials: true,\n});\n \nexport default apiClient;\n","import { memo } from \"react\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nexport const LoadingPageSpinner = memo(() => {\n    return (\n        <Spinner\n            thickness=\"4px\"\n            speed=\"0.8s\"\n            emptyColor=\"gray.200\"\n            color=\"#c4de71\"\n            size=\"xl\"\n            m=\"auto\"\n            mt=\"50%\"\n        />\n    );\n});\n","import { memo, useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useApiPosts } from \"../../../hooks/api/useApiPosts\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    const { getPosts, api_posts, loading } = useApiPosts(\"recent\");\n    useEffect(() => getPosts(), [getPosts]);\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    // const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        /* 本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    {/* apiからjsonを引っ張り、map関数でカードを繰り返し描画 */}\n                    {api_posts.map((obj) => (\n                        <Box key={obj.id}>\n                            {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                            <PostCard post={Object.assign(obj)} />\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </>\n\n        /* ↓ローカル開発用 */\n        // <Box>\n        //     {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n        //     {api_posts.map((obj) => (\n        //         <Box key={obj.id}>\n        //             {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n        //             <PostCard post={Object.assign(obj)} />\n        //         </Box>\n        //     ))}\n        // </Box>\n    );\n});\n","import { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport apiClient from \"../../client/apiClient\";\n\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport { useMessage } from \"../message/useMessage\";\nimport { useErrorMessage } from \"../useErrorMessage\";\n\ntype Sort = \"recent\" | \"follow\" | \"popular\";\n\nexport const useApiPosts = (sort: Sort) => {\n    const [api_posts, setApiPosts] = useState<Array<PostsDataType>>([]);\n    const [loading, setLoading] = useState(false);\n\n    const getPosts = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Array<PostsDataType>>(`/api/posts/recent`)\n            .then((res) => setApiPosts(res.data))\n            .catch( () =>\n            {\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getPosts, api_posts, loading };\n};\n","export const gradationGreen = \"linear(to-tl, green, #c4de71)\"\n","import { AspectRatio, Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { gradationGreen } from \"../atoms/color/gradationGreen\";\nimport { BsQuestionCircle } from \"react-icons/bs\";\n\ntype Props = {\n    id: string | undefined;\n    title: string | undefined;\n    album: string | undefined;\n    artist: string | undefined;\n    release: string | undefined;\n};\n\nexport const MusicDetailBox: VFC<Props> = (props) => {\n    const {\n        id = undefined,\n        title = undefined,\n        album = undefined,\n        artist = undefined,\n        release = undefined,\n    } = props;\n    return (\n        <Flex>\n            <AspectRatio ratio={1 / 1} boxSize=\"40%\">\n                {id === undefined ? (\n                    <Box bgGradient={gradationGreen}>\n                        <BsQuestionCircle color=\"gray\" fontSize=\"13vh\" />\n                    </Box>\n                ) : (\n                    <iframe\n                        src={`https://open.spotify.com/embed/track/${id}`}\n                        frameBorder=\"0\"\n                        allow=\"encrypted-media\"\n                    />\n                )}\n            </AspectRatio>\n            <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\" mb=\"2%\">\n                <Text fontWeight=\"bold\" fontSize=\"40px\" mb=\"2%\">\n                    {title === undefined\n                        ? \"楽曲情報が取得できていません\"\n                        : title}\n                </Text>\n                <Text fontSize=\"sm\">\n                    収録アルバム： {album === undefined ? \"???\" : album}\n                </Text>\n                <Text fontSize=\"sm\">\n                    アーティスト：\n                    {artist === undefined ? \"???\" : artist}\n                </Text>\n                <Text fontSize=\"sm\">\n                    リリース： {release === undefined ? \"???\" : release}\n                </Text>\n            </Flex>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { Rating } from \"../../atoms/button/Rating\";\nimport { ReactionButtons } from \"../../molecules/post_detail/ReactionButtons\";\nimport { UserInfoBox } from \"../../molecules/UserInfoBox\";\n\ntype Props = {\n    userName: string;\n    userTitle: string;\n    userImg: string;\n    rating?: number;\n    title: string;\n    body: string;\n    commentVal?: number;\n    likeVal?: number;\n};\n\nexport const DetailBox: VFC<Props> = (props) => {\n    const {\n        userName = \"\",\n        userTitle = \"\",\n        userImg = \"\",\n        rating,\n        title = \"\",\n        body = \"\",\n        commentVal,\n        likeVal,\n    } = props;\n    return (\n        <Box>\n            <Flex textAlign=\"left\">\n                <Box mr={2}>\n                    <UserInfoBox\n                        name={userName}\n                        user_title={userTitle}\n                        img={userImg}\n                    />\n                </Box>\n                {/* コメントのときは評価の星を表示しない */}\n                {rating === undefined ? <div /> : <Rating rating={rating} />}\n            </Flex>\n            <Box mt={5} textAlign=\"left\">\n                <Text fontSize=\"lg\" fontWeight=\"bold\">\n                    {title}\n                </Text>\n                <Text fontSize=\"sm\" pr={10} mt={2}>\n                    {body}\n                </Text>\n            </Box>\n            {/* コメントのときは、「コメント」、「いいね」、「シェア」を表示しない */}\n            {commentVal === undefined || likeVal === undefined ? (\n                <div />\n            ) : (\n                <ReactionButtons comment_val={commentVal} like_val={likeVal} />\n            )}\n        </Box>\n    );\n};\n","import { useEffect, VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { homeState } from \"../../../../store/homeState\";\nimport { useApiPostDetail } from \"../../../../hooks/api/useApiPostDetail\";\nimport json_postDetail from \"../../../../test_json/postDetail.json\";\nimport { LoadingCard } from \"../../../organisms/home/post/LoadingCard\";\nimport { LoadingPageSpinner } from \"../../../organisms/LoadingPageSpinner\";\nimport { MusicDetailBox } from \"../../../organisms/MusicDetailBox\";\nimport { DetailBox } from \"../../../organisms/detail/DetailBox\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { getPostDetail, api_postDetail, loading } = useApiPostDetail(id);\n    useEffect(() => getPostDetail(), []);\n\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        /* ↓本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    <MusicDetailBox\n                        id={api_postDetail.track.id}\n                        title={api_postDetail.track.title}\n                        album={api_postDetail.track.album}\n                        artist={api_postDetail.track.artist}\n                        release={api_postDetail.track.release}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                    <DetailBox\n                        userName={api_postDetail.user.name}\n                        userTitle={api_postDetail.user.job}\n                        userImg={api_postDetail.user.img}\n                        rating={api_postDetail.review.star}\n                        title={api_postDetail.review.title}\n                        body={api_postDetail.review.body}\n                        commentVal={api_postDetail.reaction.comment_val}\n                        likeVal={api_postDetail.reaction.like_val}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                </Box>\n            )}\n        </>\n\n        /* ローカルでのテスト用*/\n        // <Box mx={5}>\n        //     <MusicDetailBox\n        //         id={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n        //         title={api_postDetail.track.title}\n        //         album={api_postDetail.track.album}\n        //         artist={api_postDetail.track.artist}\n        //         release={api_postDetail.track.release}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        //     <DetailBox\n        //         userName={api_postDetail.user.name}\n        //         userTitle={api_postDetail.user.job}\n        //         userImg={api_postDetail.user.img}\n        //         rating={api_postDetail.review.star}\n        //         title={api_postDetail.review.title}\n        //         body={api_postDetail.review.body}\n        //         commentVal={api_postDetail.reaction.comment_val}\n        //         likeVal={api_postDetail.reaction.like_val}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        // </Box>\n    );\n};\n","import { useCallback, useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport failed from \"../../test_json/failedDetail.json\";\nimport apiClient from \"../../client/apiClient\";\nimport { useHistory } from \"react-router\";\n\nexport const useApiPostDetail = ( id: string ) =>\n{\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n    const [ loading, setLoading ] = useState( false )\n    const history = useHistory()\n    const getPostDetail = useCallback(() =>\n    {\n        setLoading( true );\n\n        apiClient\n        .get<PostsDataType>( `/api/posts/${ id }` )\n        .then( ( res ) => setApiPostDetail( res.data ) )\n        .catch( () =>\n        {\n            history.push(\"/page404\")\n        }\n        ).finally( () => setLoading( false ) );\n    },[])\n\n    return { getPostDetail, api_postDetail, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n    title: string;\n    body: string;\n};\n\nexport const Alert404: VFC<Props> = memo((props) => {\n    const { title, body } = props;\n    const history = useHistory();\n    const onClickPageBack = () => {\n        history.goBack();\n    };\n\n    return (\n        <Alert\n            status=\"error\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            textAlign=\"center\"\n            height=\"200px\"\n            pt=\"40px\"\n        >\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                {title}\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">{body}</AlertDescription>\n        </Alert>\n    );\n});\n","import { Alert404 } from \"../../../organisms/home/Alert404\";\n\nexport const Detail404 = () => {\n    return <Alert404 title=\"エラー\" body=\"投稿が見つかりませんでした。\" />;\n};\n","import {\n    Breadcrumb,\n    BreadcrumbItem,\n    BreadcrumbLink,\n    Text,\n} from \"@chakra-ui/react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { memo, useEffect, useState, VFC } from \"react\";\n\ntype Props = {\n    step: \"track\" | \"rate\" | \"check\";\n    goTrackInfo: () => void;\n    goRate: () => void;\n    goCheck: () => void;\n    blockTrack: boolean;\n    blockRates: boolean;\n};\n\ntype Weight = \"normal\" | \"bold\";\ntype Color = \"black\" | \"gray.500\";\n\nexport const CreateBreadcrumb: VFC<Props> = memo((props) => {\n    const { step, goTrackInfo, goRate, goCheck, blockTrack, blockRates } =\n        props;\n\n    const [trackColor, setTrackColor] = useState<Color>(\"gray.500\");\n    const [rateColor, setRateColor] = useState<Color>(\"gray.500\");\n    const [checkColor, setCheckColor] = useState<Color>(\"gray.500\");\n    const [trackWeight, setTrackWeight] = useState<Weight>(\"normal\");\n    const [rateWeight, setRateWeight] = useState<Weight>(\"normal\");\n    const [checkWeight, setCheckWeight] = useState<Weight>(\"normal\");\n\n    useEffect(() => {\n        // 一旦初期化して変化部分のみ値を指定する\n        setTrackWeight(\"normal\");\n        setTrackColor(\"gray.500\");\n        setRateWeight(\"normal\");\n        setRateColor(\"gray.500\");\n        setCheckWeight(\"normal\");\n        setCheckColor(\"gray.500\");\n        if (step === \"track\") {\n            setTrackWeight(\"bold\");\n            setTrackColor(\"black\");\n        } else if (step === \"rate\") {\n            setRateWeight(\"bold\");\n            setRateColor(\"black\");\n        } else {\n            setCheckWeight(\"bold\");\n            setCheckColor(\"black\");\n        }\n    }, [step]);\n\n    // 楽曲情報が入力されていなければ評価画面に行けない\n    // 評価が入力されていなければ内容確認画面に行けない\n    var canMoveRate: \"auto\" | \"none\" = blockTrack ? \"none\" : \"auto\";\n    var canMoveCheck: \"auto\" | \"none\" =\n        blockTrack || blockRates ? \"none\" : \"auto\";\n\n    useEffect(() => {\n        blockTrack ? (canMoveRate = \"none\") : (canMoveRate = \"auto\");\n    }, [blockTrack]);\n\n    useEffect(() => {\n        blockTrack && blockRates\n            ? (canMoveCheck = \"none\")\n            : (canMoveCheck = \"auto\");\n    }, [blockTrack]);\n\n    return (\n        <Breadcrumb\n            spacing=\"20px\"\n            ml=\"0px\"\n            separator={<ChevronRightIcon color=\"gray.500\" fontSize=\"30px\" />}\n            textAlign=\"left\"\n            mb=\"30px\"\n        >\n            <BreadcrumbItem isCurrentPage={step === \"track\"}>\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={trackColor}\n                    fontWeight={trackWeight}\n                    onClick={goTrackInfo}\n                >\n                    楽曲情報\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem\n                isCurrentPage={step === \"rate\"}\n                pointerEvents={canMoveRate}\n            >\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={rateColor}\n                    fontWeight={rateWeight}\n                    onClick={goRate}\n                >\n                    評価\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem\n                isCurrentPage={step === \"check\"}\n                pointerEvents={canMoveCheck}\n            >\n                <BreadcrumbLink\n                    fontSize=\"20px\"\n                    color={checkColor}\n                    fontWeight={checkWeight}\n                    onClick={goCheck}\n                >\n                    内容確認\n                </BreadcrumbLink>\n            </BreadcrumbItem>\n        </Breadcrumb>\n    );\n});\n","import { Button } from \"@chakra-ui/button\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    onClick: () => void;\n    mt?: string;\n    isDisabled?: boolean;\n};\n\nexport const GoButton: VFC<Props> = (props) => {\n    const { onClick, mt = \"none\", isDisabled = false } = props;\n    return (\n        <Button\n            mt={mt}\n            w=\"50px\"\n            h=\"30px\"\n            ml=\"auto\"\n            bg=\"orange.300\"\n            color=\"white\"\n            onClick={onClick}\n            fontSize=\"15px\"\n            isDisabled={isDisabled}\n        >\n            次へ\n        </Button>\n    );\n};\n","import { Box, Text, Input } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    value: string;\n    inputType?: string;\n    fontSize?: string;\n    fontWeight?: string;\n};\n\nexport const Form: VFC<Props> = (props) => {\n    const {\n        onChange,\n        value,\n        children,\n        inputType = \"text\",\n        fontSize = \"sm\",\n        fontWeight = \"normal\",\n    } = props;\n\n    return (\n        <Box textAlign=\"start\" w=\"100%\">\n            <Text\n                ml={1}\n                mb={1}\n                fontSize={fontSize}\n                fontWeight={fontWeight}\n                color=\"gray.700\"\n            >\n                {children}\n            </Text>\n            <Input type={inputType} onChange={onChange} value={value} />\n        </Box>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, []);\n\n  return { showMessage };\n};\n","import { Box, Button, Flex, Input, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState, VFC } from \"react\";\nimport { gradationGreen } from \"../../atoms/color/gradationGreen\";\nimport { MusicDetailBox } from \"../MusicDetailBox\";\nimport { GoButton } from \"../../atoms/button/GoButton\";\nimport { Form } from \"../../molecules/Form\";\nimport { useTrack } from \"../../../hooks/api/useApiTrack\";\nimport { useValidateTrackURL } from \"../../../hooks/useValidateTrackURL\";\nimport { useMessage } from \"../../../hooks/message/useMessage\";\nimport { TrackDataType } from \"../../../type/api/TrackDataType\";\n\ntype Props = {\n    goRate: () => void;\n    onChangeTrackURL: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    trackUrl: string;\n    trackId: string;\n    setTrackId: (id: string) => void;\n    trackData: TrackDataType;\n    saveTrackData: (obj: TrackDataType) => void;\n    blockTrack: boolean;\n};\n\nconst NullTrack = {\n    id: \"\",\n    img: \"\",\n    title: \"\",\n    album: \"\",\n    release: \"\",\n};\n\nexport const CreateTrackInfo: VFC<Props> = (props) => {\n    const {\n        goRate,\n        onChangeTrackURL,\n        trackUrl,\n        setTrackId,\n        blockTrack,\n        trackData,\n        saveTrackData,\n    } = props;\n    const [isExist, setIsExist] = useState<boolean>(false);\n    const { getTrack } = useTrack();\n    const { validateTrackURL } = useValidateTrackURL();\n    const { showMessage } = useMessage();\n    const [track, setTrack] = useState<TrackDataType>();\n\n    // 一旦、このページ内の状態で楽曲データを預かる\n    const onceSaveTrackData = (val: TrackDataType) => {\n        setTrack(val);\n    };\n\n    const checkTrack = () => {\n        const trackId = validateTrackURL(trackUrl);\n        // バリデーションを行う\n        if (trackId === undefined) {\n            setIsExist(false);\n            showMessage({\n                title: \"正しいURLを入力してください\",\n                status: \"error\",\n            });\n            setTrackId(\"\");\n        }\n        // バリデーションをクリアしたidで実際に楽曲を取得できるか判定\n        else {\n            getTrack(trackId, onceSaveTrackData);\n            setTrackId(trackId);\n        }\n    };\n\n    // APIによって楽曲情報が取得できたタイミングで保存、表示\n    useEffect(() => {\n        if (track === undefined) {\n            setIsExist(false);\n            setTrackId(\"\");\n        } else {\n            setIsExist(true);\n            saveTrackData(track);\n        }\n    }, [track]);\n\n    return (\n        <Box>\n            {/* 入力された共有URIから楽曲が取得できたらその情報を表示 */}\n            {isExist && (\n                <MusicDetailBox\n                    id={trackData?.id}\n                    title={trackData?.title}\n                    album={trackData?.album}\n                    artist={trackData?.artist}\n                    release={trackData?.release}\n                />\n            )}\n            <Flex flexDirection=\"column\" mt=\"30px\">\n                <Flex mt=\"10px\">\n                    <Form\n                        onChange={onChangeTrackURL}\n                        value={trackUrl}\n                        fontSize=\"lg\"\n                        fontWeight=\"semibold\"\n                    >\n                        Spotifyの楽曲シェア用URLを入力してください\n                    </Form>\n                    <Button\n                        ml=\"2%\"\n                        w=\"20%\"\n                        bgGradient={gradationGreen}\n                        color=\"white\"\n                        fontSize=\"lg\"\n                        mt=\"auto\"\n                        onClick={checkTrack}\n                    >\n                        確認\n                    </Button>\n                </Flex>\n                <Text>{}</Text>\n                <GoButton onClick={goRate} mt=\"30px\" isDisabled={blockTrack} />\n            </Flex>\n        </Box>\n    );\n};\n","import { useCallback, useState } from \"react\";\n\nimport apiClient from \"../../client/apiClient\";\nimport { TrackDataType } from \"../../type/api/TrackDataType\";\nimport {useMessage} from \"../message/useMessage\"\n\n\nexport const useTrack = () =>\n{\n    const { showMessage } = useMessage();\n    const getTrack = useCallback( ( id: string | undefined, saveTrack: (val:TrackDataType )=>void ) =>\n    {\n        var track: TrackDataType\n\n        apiClient\n            .get<TrackDataType>(`/api/track/${id}`)\n            .then( ( res ) =>\n            {\n                saveTrack(res.data)\n            }\n            )\n            .catch( () =>\n            {\n                saveTrack( undefined )\n                showMessage( {title: \"楽曲を取得できませんでした\",status: \"error\",});\n            })\n    }, []);\n\n    return { getTrack };\n};\n","import { useCallback, useState } from \"react\";\nimport { useMessage } from \"./message/useMessage\";\n\nexport const useValidateTrackURL = () =>\n{    const head = /(https\\:\\/\\/open\\.spotify\\.com\\/track\\/)/;\n    const foot = /(\\?si=)/;\n    const validateTrackURL = useCallback( ( url: string ) =>\n    {\n        var id:string|undefined;\n        const regexHead = head.test( url );\n        const regexFoot = foot.test( url );\n        {\n            // urlの頭とおしりがspotifyの楽曲シェアURLのものか判定\n            if ( regexHead && regexFoot )\n            {\n                 const result = url.match(\n                    /https\\:\\/\\/open\\.spotify\\.com\\/track\\/(.*)\\?si=/\n                 );\n                // もし楽曲のURLであれば、楽曲IDの部分の文字数が適切なものか判定\n                if ( result![1].length === 22 )\n                {\n                    id = result![1];\n                }\n                else\n                {\n                    id = undefined;\n                }\n            } else{\n                    id = undefined;\n            }\n        }\n        return id;\n    },[])\n        return { validateTrackURL }\n}\n","import { Button } from \"@chakra-ui/button\";\nimport { ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    onClick: () => void;\n    mt?: string;\n};\n\nexport const BackButton: VFC<Props> = (props) => {\n    const { onClick, mt = \"none\" } = props;\n    return (\n        <Button\n            mt={mt}\n            w=\"50px\"\n            h=\"30px\"\n            ml=\"auto\"\n            bg=\"orange.300\"\n            color=\"white\"\n            onClick={onClick}\n            fontSize=\"15px\"\n        >\n            戻る\n        </Button>\n    );\n};\n","import { useState, VFC } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"react-icons/bs\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\ntype Props = {\n    num: number;\n    rate: number;\n    setRate: (val: number) => void;\n};\n\nexport const StarButton: VFC<Props> = (props) => {\n    const { num, rate, setRate } = props;\n    const [shape, setShape] = useState<\"null\" | \"half\" | \"fill\">(\"null\");\n\n    const onClickHalf = () => {\n        setRate(num - 0.5);\n    };\n    const onClickFill = () => {\n        setRate(num);\n    };\n\n    const StarSize = \"50px\";\n    const starGap = \"60px\";\n\n    return (\n        <Box>\n            {/* 星のアイコンを表示、zIndexによってボタンと重ねる  */}\n            <Flex\n                boxSize=\"50px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                position=\"absolute\"\n                zIndex=\"1\"\n            >\n                {rate >= num ? (\n                    <BsStarFill fontSize={StarSize} color=\"orange\" />\n                ) : rate >= num - 0.5 ? (\n                    <BsStarHalf fontSize={StarSize} color=\"orange\" />\n                ) : (\n                    <BsStar fontSize={StarSize} color=\"orange\" />\n                )}\n            </Flex>\n            {/* 星のアイコンの上に見えないボタンを設置 */}\n            <Flex boxSize=\"50px\" position=\"absolute\" zIndex=\"2\">\n                {/* 左半分のボタン */}\n                <button\n                    onClick={onClickHalf}\n                    style={{\n                        borderRadius: \"0\",\n                        height: \"100%\",\n                        width: \"50%\",\n                    }}\n                ></button>\n                {/* 右半分のボタン */}\n                <button\n                    onClick={onClickFill}\n                    style={{\n                        borderRadius: \"0\",\n                        height: \"100%\",\n                        width: \"50%\",\n                    }}\n                ></button>\n            </Flex>\n            <Box w={starGap} />\n        </Box>\n    );\n};\n","import { useState, VFC } from \"react\";\nimport { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { StarButton } from \"../../atoms/button/StarButton\";\n\ntype Props = {\n    rate: number;\n    setRate: (val: number) => void;\n};\n\nexport const FiveStarButton: VFC<Props> = (props) => {\n    const { rate, setRate } = props;\n    return (\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Flex mt=\"10px\" mb=\"50px\">\n                {[1, 2, 3, 4, 5].map((value) => (\n                    <StarButton num={value} rate={rate} setRate={setRate} />\n                ))}\n            </Flex>\n            <Text\n                mt=\"5px\"\n                mx=\"auto\"\n                pr=\"10px\"\n                w=\"30%\"\n                fontWeight=\"bold\"\n                fontSize=\"25px\"\n                color=\"gray.600\"\n            >\n                {rate.toFixed(1)}\n            </Text>\n        </Flex>\n    );\n};\n","import { Box, Flex, Input, Text, Textarea } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { GoButton } from \"../../atoms/button/GoButton\";\nimport { BackButton } from \"../../atoms/button/BackButton\";\nimport { FiveStarButton } from \"../../molecules/create/FiveStarButton\";\n\ntype Props = {\n    goTrackInfo: () => void;\n    goCheck: () => void;\n    onChangeRate: (val: number) => void;\n    onChangeTitle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    onChangeBody: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n    rate: number;\n    title: string;\n    body: string;\n    blockRates: boolean;\n};\n\nexport const CreateRate: VFC<Props> = (props) => {\n    const {\n        goTrackInfo,\n        goCheck,\n        onChangeRate,\n        onChangeTitle,\n        onChangeBody,\n        rate,\n        title,\n        body,\n        blockRates,\n    } = props;\n\n    return (\n        <Flex flexDirection=\"column\" mt=\"30px\">\n            <Flex flexDirection=\"column\">\n                <Text\n                    fontSize=\"lg\"\n                    ml=\"10px\"\n                    fontWeight=\"semibold\"\n                    color=\"gray.700\"\n                >\n                    ① 評価\n                </Text>\n                <Box textAlign=\"center\">\n                    <FiveStarButton rate={rate} setRate={onChangeRate} />\n                </Box>\n            </Flex>\n            <Box mt=\"30px\">\n                <Text\n                    fontSize=\"lg\"\n                    ml=\"10px\"\n                    fontWeight=\"semibold\"\n                    color=\"gray.700\"\n                >\n                    ① タイトル（30字以内）\n                </Text>\n                <Input\n                    type=\"text\"\n                    w=\"100%\"\n                    mt=\"10px\"\n                    onChange={onChangeTitle}\n                    value={title}\n                />\n            </Box>\n            <Box mt=\"30px\">\n                <Text\n                    fontSize=\"lg\"\n                    ml=\"10px\"\n                    h=\"auto\"\n                    fontWeight=\"semibold\"\n                    color=\"gray.700\"\n                >\n                    ① 本文（500字以内）\n                </Text>\n                <Textarea\n                    type=\"text\"\n                    w=\"100%\"\n                    h=\"100px\"\n                    mt=\"10px\"\n                    onChange={onChangeBody}\n                    value={body}\n                />\n            </Box>\n            <Flex ml=\"auto\">\n                <Box>\n                    <BackButton onClick={goTrackInfo} mt=\"30px\" />\n                </Box>\n                <Box w=\"30px\" />\n                <Box>\n                    <GoButton\n                        onClick={goCheck}\n                        mt=\"30px\"\n                        isDisabled={blockRates}\n                    />\n                </Box>\n            </Flex>\n        </Flex>\n    );\n};\n","import { Box, Divider } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\nimport { TrackDataType } from \"../../../type/api/TrackDataType\";\nimport { DetailBox } from \"../detail/DetailBox\";\nimport { MusicDetailBox } from \"../MusicDetailBox\";\n\ntype Props = {\n    trackData: TrackDataType;\n    rate: number;\n    title: string;\n    body: string;\n};\n\nexport const CreateCheck: VFC<Props> = (props) => {\n    const { trackData, rate, title, body } = props;\n    return (\n        <Box>\n            <MusicDetailBox\n                id={trackData?.id}\n                title={trackData?.title}\n                album={trackData?.album}\n                artist={trackData?.artist}\n                release={trackData?.release}\n            />\n            <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n            <DetailBox\n                userName=\"ゆうた\"\n                userTitle=\"学生\"\n                userImg=\"\"\n                rating={rate}\n                title={title}\n                body={body}\n            />\n            <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        </Box>\n    );\n};\n","import { ChangeEvent, memo, useEffect, useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Prompt } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { CreateBreadcrumb } from \"../../molecules/create/CreateBreadcrumb\";\nimport { CreateTrackInfo } from \"../../organisms/create/CreateTrackInfo\";\nimport { CreateRate } from \"../../organisms/create/CreateRate\";\nimport { CreateCheck } from \"../../organisms/create/CreateCheck\";\nimport { homeState } from \"../../../store/homeState\";\nimport { TrackDataType } from \"../../../type/api/TrackDataType\";\n\nexport const Create = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"create\" });\n\n    // 画面遷移のためのState\n    const [step, setStep] = useState<\"track\" | \"rate\" | \"check\">(\"track\");\n    const goTrackInfo = () => {\n        setStep(\"track\");\n    };\n    const goRate = () => {\n        setStep(\"rate\");\n    };\n    const goCheck = () => {\n        setStep(\"check\");\n    };\n\n    // 各種投稿内容を保存しておくためのState\n    const [trackUrl, setTrackUrl] = useState<string>(\"\");\n    const [trackId, setTrackId] = useState<string>(\"\");\n    const [rate, setRate] = useState<number>(0);\n    const [title, setTitle] = useState<string>(\"\");\n    const [body, setBody] = useState<string>(\"\");\n\n    const onChangeTrackURL = (e: ChangeEvent<HTMLInputElement>) =>\n        setTrackUrl(e.target.value);\n\n    const onChangeTitle = (e: ChangeEvent<HTMLInputElement>) =>\n        setTitle(e.target.value);\n\n    const onChangeBody = (e: ChangeEvent<HTMLTextAreaElement>) =>\n        setBody(e.target.value);\n\n    const onChangeRate = (val: number) => {\n        setRate(val);\n    };\n\n    const ChangeTrackId = (id: string) => {\n        setTrackId(id);\n    };\n\n    // TrackIdが空の場合はほかの画面への遷移をブロックする\n    const [blockTrack, setBlockTrack] = useState<boolean>(true);\n    useEffect(() => {\n        trackId === \"\" ? setBlockTrack(true) : setBlockTrack(false);\n    }, [trackId]);\n\n    // 評価が書かれていなければ確認画面への遷移をブロックする\n    const [blockRates, setBlockRates] = useState<boolean>(true);\n    useEffect(() => {\n        rate === 0.0 || title === \"\" || body === \"\"\n            ? setBlockRates(true)\n            : setBlockRates(false);\n    }, [rate, title, body]);\n\n    // 取得に成功した楽曲データを保持する\n    const [trackData, setTrackData] = useState<TrackDataType>();\n    const saveTrackData = (obj: TrackDataType) => {\n        setTrackData(obj);\n    };\n\n    return (\n        <Box textAlign=\"left\">\n            {/* react-routeの「Priompt」によって、ページを離れようとしたときに警告 */}\n            <Prompt message=\"ページを離れると入力した内容が失われます\" />\n            <CreateBreadcrumb\n                step={step}\n                goTrackInfo={goTrackInfo}\n                goRate={goRate}\n                goCheck={goCheck}\n                blockTrack={blockTrack}\n                blockRates={blockRates}\n            />\n\n            {step === \"track\" ? (\n                <CreateTrackInfo\n                    goRate={goRate}\n                    onChangeTrackURL={onChangeTrackURL}\n                    trackUrl={trackUrl}\n                    trackId={trackId}\n                    setTrackId={ChangeTrackId}\n                    blockTrack={blockTrack}\n                    trackData={trackData}\n                    saveTrackData={saveTrackData}\n                />\n            ) : step === \"rate\" ? (\n                <CreateRate\n                    goCheck={goCheck}\n                    goTrackInfo={goTrackInfo}\n                    onChangeRate={onChangeRate}\n                    rate={rate}\n                    onChangeTitle={onChangeTitle}\n                    title={title}\n                    onChangeBody={onChangeBody}\n                    body={body}\n                    blockRates={blockRates}\n                />\n            ) : (\n                <CreateCheck\n                    rate={rate}\n                    title={title}\n                    body={body}\n                    trackData={trackData}\n                />\n            )}\n        </Box>\n    );\n});\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/detail/PostDetail\";\nimport { Detail404 } from \"../components/pages/home/detail/Detail404\";\nimport { Create } from \"../components/pages/create/Create\";\n\nexport const homeRoutes = [\n    {\n        path: \"\",\n        exact: true,\n        children: <Recent />,\n    },\n    {\n        path: \"follow_post\",\n        exact: false,\n        // children: <FollowPosts />,\n        children: <Recent />,\n    },\n    {\n        path: \"popular\",\n        exact: false,\n        // children: <Popular />,\n        children: <Recent />,\n    },\n    {\n        path: \"post/:id\",\n        exact: false,\n        children: <PostDetail />,\n    },\n    {\n        path: \"create_post\",\n        exact: false,\n        children: <Create />,\n    },\n    {\n        path: \"page404\",\n        exact: false,\n        children: <Detail404 />,\n    },\n    {\n        path: \"*\",\n        exact: false,\n        children: <Recent />,\n    },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n    display?: {};\n    onClick: () => void;\n    size?: string;\n    ml?: string;\n    my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n    const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n    return (\n        <IconButton\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            color=\"white\"\n            aria-label=\"Open menu\"\n            icon={<HamburgerIcon />}\n            size={size}\n            ml={ml}\n            my={my}\n            display={display}\n            onClick={onClick}\n        />\n    );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.goBack();\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : topic === \"create\" ? (\n                        <HomePostTitle>投稿する</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<HiArrowNarrowLeft />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"25px\"\n                                onClick={onBackHome}\n                                mt=\"auto\"\n                                boxSize={{ base: \"29px\", md: \"36px\" }}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n                px={5}\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { atom } from \"recoil\";\n\nexport const loginState = atom( {\n    key: \"loginState\",\n    default: { isLogin:true }\n} );\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage } from \"../message/useMessage\";\n\ntype Me = {\n    id: string;\n    name: string;\n    email: string;\n}\n\nconst NullMe:Me = {id:\"\", name:\"\", email:\"\"}\n\nexport const useApiMe = () =>\n{\n    const [ loading, setLoading ] = useState( false );\n    const [ apiMe, setApiMe ] = useState<Me>(NullMe);\n    const setIsLogin = useSetRecoilState( loginState );\n\n    // ユーザーの情報を取得できない＝ログインしていないとみなし、\n    // その場合はログイン状態管理（isLogin）がfalseとなる\n\n    const getMe = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Me>(`/api/me`)\n            .then( ( res ) =>\n            {\n                setApiMe( res.data );\n                setIsLogin( { isLogin:true});\n            }\n            )\n            .catch( () =>\n            {\n                setIsLogin( { isLogin:false});\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getMe, apiMe, loading };\n};\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    onClick: () => void;\n    disabled?: boolean;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n    const { children, w = \"md\", onClick, disabled = false } = props;\n    return (\n        <Button\n            colorScheme=\"gray\"\n            variant=\"ghost\"\n            solid=\"none\"\n            w=\"w\"\n            _hover={{ cursor: \"pointer\" }}\n            _focus={{ boxShadow: \"none\" }}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </Button>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    disabled?: boolean;\n    onClick?: () => void;\n    mt?: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n    const { children, w = \"100%\", onClick, disabled, mt = \"none\" } = props;\n    return (\n        <Button\n            onClick={onClick}\n            color=\"white\"\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            w={w}\n            _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n            disabled={disabled}\n            mt={mt}\n        >\n            {children}\n        </Button>\n    );\n};\n","import { Box, Button, Flex, Text } from \"@chakra-ui/react\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useApiMe } from \"../../hooks/api/useApiMe\";\nimport { useLogout } from \"../../hooks/login/useLogout\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n    const history = useHistory();\n    // ユーザーの情報を取得\n    const { getMe, apiMe } = useApiMe();\n    const { logout } = useLogout();\n\n    useEffect(() => getMe(), [getMe]);\n\n    const onRecent = () => {\n        history.push(\"/\");\n    };\n    const onFollowPost = () => {\n        history.push(\"/follow_post\");\n    };\n    const onPopular = () => {\n        history.push(\"/popular\");\n    };\n\n    const onCreate = () => {\n        history.push(\"/create_post\");\n    };\n\n    const onClickLogout = () => {\n        logout();\n    };\n    return (\n        <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n            <Link to=\"/\">\n                <Text\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    my=\"20px\"\n                    ml=\"10px\"\n                >\n                    Bebop!\n                </Text>\n            </Link>\n\n            <MenuButton w=\"100%\" onClick={onRecent}>\n                最新の投稿\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onFollowPost} disabled={true}>\n                フォロー\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onPopular} disabled={true}>\n                人気の投稿\n            </MenuButton>\n            <Flex mt=\"25vh\" ml=\"30px\">\n                <PrimaryButton w=\"130px\" onClick={onCreate}>\n                    投稿\n                </PrimaryButton>\n            </Flex>\n\n            <Box mt=\"25vh\" w=\"100%\" onClick={onClickLogout}>\n                <UserInfoBox\n                    img=\"https://source.unsplash.com/brFsZ7qszSY\"\n                    name={apiMe.name}\n                    user_title=\"学生\"\n                    pl=\"30px\"\n                />\n                <Button\n                    fontSize={5}\n                    w=\"80px\"\n                    h=\"25px\"\n                    colorScheme=\"red\"\n                    mt=\"15px\"\n                >\n                    ログアウト\n                </Button>\n            </Box>\n        </Flex>\n    );\n});\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogout = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n    const setIsLogin = useSetRecoilState( loginState );\n\n    const logout = useCallback( ( ) =>\n    {\n        axios.post( \"api/logout\" )\n            .then( res =>\n            {\n                localStorage.removeItem( \"auth\" );\n                setIsLogin( { isLogin:false});\n                history.push( \"/login\" );\n                showMessage( { title: \"ログアウトしました\", status: \"success\" } );\n            } ).catch( res =>\n            {\n                showMessage( { title: \"ログアウトに失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return { logout };\n}\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n    children: ReactNode;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n    const { children, isOpen, onClose } = props;\n\n    return (\n        <Box>\n            {/* 要素を横並びに */}\n            <Flex spacing=\"none\">\n                {/* メニューバー */}\n                <Flex mx=\"auto\" w=\"100%\">\n                    <Box\n                        w=\"15%\"\n                        h=\"100%\"\n                        display={{ base: \"none\", md: \"inline\" }}\n                        pr=\"auto\"\n                        ml=\"18%\"\n                    >\n                        <MenuContents />\n                    </Box>\n                    {children}\n                </Flex>\n            </Flex>\n            <MenuDrawer isOpen={isOpen} onClose={onClose} />\n        </Box>\n    );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/home/HomePostBox\";\nimport { MenuBar } from \"../organisms/home/MenuBar\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <Box w=\"100%\">\n            <MenuBar isOpen={isOpen} onClose={onClose}>\n                <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n            </MenuBar>\n        </Box>\n    );\n});\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogin = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n\n    const [ user, setUser ] = useState();\n    const setIsLogin = useSetRecoilState( loginState );\n\n    const login = useCallback( (mail: string, password: string ) =>\n    {\n        apiClient.get( 'sanctum/csrf-cookie')\n            .then( res =>\n            {\n                apiClient.post( \"/api/login\", {\n                    email: mail,\n                    password: password\n                })\n                    .then( res =>\n                    {\n                        showMessage( { title: \"ログインしました\", status: \"success\" } );\n                        setIsLogin( { isLogin:true});\n                        history.push( \"/\" );\n                    } ).catch( error =>\n                    {\n                        showMessage( { title: \"ユーザーが見つかりません\", status: \"error\" } );\n                    })\n            })\n    }, [] );\n    return { login };\n}\n","import {\n    Tabs,\n    Text,\n    Box,\n    Flex,\n    Tab,\n    TabList,\n    TabPanels,\n    TabPanel,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\nimport { ChangeEvent, useState } from \"react\";\n\nimport { useLogin } from \"../../hooks/login/useLogin\";\nimport { Form } from \"../molecules/Form\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useRegister } from \"../../hooks/login/useRegister\";\n\nexport const Login = () => {\n    // ログインフォーム用state\n    const [loginMailAddress, setLoginMailAddress] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    // 新規登録フォーム用state\n    const [regMailAddress, setRegMailAddress] = useState(\"\");\n    const [regPassword, setRegPassword] = useState(\"\");\n    const [regPasswordConfirm, setRegPasswordConfirm] = useState(\"\");\n    const [regName, setRegName] = useState(\"\");\n\n    // ログインフォーム入力関数\n    const onChangeLoginMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginMailAddress(e.target.value);\n\n    const onChangeLoginPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginPassword(e.target.value);\n\n    // ログインフォーム入力関数\n    const onChangeRegMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegMailAddress(e.target.value);\n\n    const onChangeRegPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPassword(e.target.value);\n\n    const onChangeRegPasswordConfirm = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPasswordConfirm(e.target.value);\n\n    const onChangeRegName = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegName(e.target.value);\n\n    const { register } = useRegister();\n    const onClickRegister = () => {\n        register(regName, regMailAddress, regPassword);\n    };\n\n    const { login } = useLogin();\n    const onClickLogin = () => {\n        login(loginMailAddress, loginPassword);\n    };\n\n    return (\n        <Box\n            w=\"100%\"\n            h=\"100vh\"\n            textAlign=\"center\"\n            pt={{ base: \"none\", sm: \"10vh\" }}\n        >\n            {/* 画面サイズが大きいときはカードの外に「Bebop！を表示」 */}\n            <Text\n                display={{ base: \"none\", sm: \"inline\" }}\n                as=\"h1\"\n                fontSize=\"60px\"\n                bgGradient=\"linear(to-tl, green, #c4de71)\"\n                bgClip=\"text\"\n                fontWeight=\"bold\"\n            >\n                Bebop!\n            </Text>\n            {/* 以下、カード内 */}\n            <Flex\n                bg=\"white\"\n                borderRadius={{ base: \"none\", sm: \"10px\" }}\n                p=\"20px\"\n                shadow={{ base: \"none\", sm: \"md\" }}\n                w={{ base: \"100%\", sm: \"400px\" }}\n                h={{ base: \"100%\", sm: \"500px\" }}\n                textAlign=\"center\"\n                flexDirection=\"column\"\n                mx=\"auto\"\n                mt={{ base: \"none\", sm: \"2vh\" }}\n            >\n                <Text\n                    display={{ base: \"inline\", sm: \"none\" }}\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    mb=\"20px\"\n                >\n                    Bebop!\n                </Text>\n                {/* タブを作成 */}\n                <Tabs isFitted variant=\"enclosed\">\n                    <TabList mb=\"1em\">\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            ログイン\n                        </Tab>\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            新規登録\n                        </Tab>\n                    </TabList>\n\n                    {/* タブの中身を記述 */}\n                    <TabPanels>\n                        {/* ログイン用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <Form\n                                    onChange={onChangeLoginMailAddress}\n                                    value={loginMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeLoginPassword}\n                                    value={loginPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </Form>\n                                <Box h=\"10px\" />\n                                <PrimaryButton\n                                    onClick={onClickLogin}\n                                    disabled={\n                                        loginMailAddress === \"\" ||\n                                        loginPassword === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    ログイン\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                        {/* 新規登録用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <Form\n                                    onChange={onChangeRegName}\n                                    value={regName}\n                                >\n                                    ユーザー名\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeRegMailAddress}\n                                    value={regMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeRegPassword}\n                                    value={regPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </Form>\n                                <Box h=\"10px\" />\n                                <Form\n                                    onChange={onChangeRegPasswordConfirm}\n                                    value={regPasswordConfirm}\n                                    inputType=\"password\"\n                                >\n                                    パスワード（再入力）\n                                </Form>\n                                <Box h=\"10px\" />\n                                <PrimaryButton\n                                    onClick={onClickRegister}\n                                    disabled={\n                                        regMailAddress === \"\" ||\n                                        regPassword === \"\" ||\n                                        regPasswordConfirm === \"\" ||\n                                        regPassword !== regPasswordConfirm ||\n                                        regName === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    新規登録\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n            </Flex>\n        </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback } from \"react\"\nimport { useMessage} from \"../message/useMessage\";\nimport { useLogin } from \"./useLogin\";\n\n\nexport const useRegister = () => {\n    const { showMessage } = useMessage();\n    const { login } = useLogin();\n\n\n\n    const register = useCallback( (name:string, mail: string, password: string ) =>\n    {\n        const data = {\n            name: name,\n            email: mail,\n            password: password\n        }\n\n        axios.post( \"api/register\", data )\n            .then( ( res ) =>\n            {\n                if ( res.status == 200 )\n                {\n                    login(mail,password)\n                }\n            } )\n            .catch(  () =>\n            {\n                showMessage( { title: \"新規登録に失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return {  register };\n}\n","import { memo, ReactNode, VFC } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginState } from \"../../store/loginState\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const AuthGuard: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isLogin } = useRecoilValue(loginState);\n\n    return isLogin ? <>{children}</> : <Redirect to=\"/login\" />;\n});\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\nimport { loginState } from \"../store/loginState\";\nimport { AuthGuard } from \"./auth_route/AuthGuard\";\n\nexport const Router = () => {\n    const { isLogin } = useRecoilValue(loginState);\n    return (\n        <Switch>\n            <Route exact path=\"/login\">\n                {/* ログイン済の場合はトップページにリダイレクトされる */}\n                {isLogin ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            {/* 未ログインの場合は「AuthGuard」によってログイン画面へリダイレクトされる */}\n            <AuthGuard>\n                <HomeLayout>\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            render={({ match: { url } }) => (\n                                <Switch>\n                                    {homeRoutes.map((route) => (\n                                        <Route\n                                            key={route.path}\n                                            exact={route.exact}\n                                            path={`${url}${route.path}`}\n                                        >\n                                            {route.children}\n                                        </Route>\n                                    ))}\n                                </Switch>\n                            )}\n                        />\n                    </Switch>\n                </HomeLayout>\n            </AuthGuard>\n            <Route path=\"*\">\n                <Page404 />\n            </Route>\n        </Switch>\n    );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}