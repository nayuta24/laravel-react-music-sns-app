{"version":3,"sources":["components/atoms/button/Rating.tsx","theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/Home/post/PostCard.tsx","client/apiClient.ts","hooks/message/useMessage.ts","components/organisms/LoadingPageSpinner.tsx","components/pages/home/Recent.tsx","hooks/api/useApiPosts.ts","components/molecules/post_detail/ReactionButtons.tsx","components/pages/home/detail/PostDetail.tsx","hooks/api/useApiPostDetail.ts","components/organisms/Home/Alert404.tsx","components/pages/home/detail/Detail404.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/Home/HomePostBox.tsx","store/loginState.ts","hooks/api/useApiMe.ts","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","hooks/login/useLogout.ts","components/organisms/Home/MenuDrawer.tsx","components/organisms/Home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Page404.tsx","hooks/login/useLogin.ts","components/molecules/LoginForm.tsx","components/pages/Login.tsx","hooks/login/useRegister.ts","router/Router.tsx","App.tsx","index.tsx"],"names":["rating_stars","theme","extendTheme","styles","global","body","backgroundColor","color","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","i","LikeButton","value","icon","size","bg","ml","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","apiClient","axios","create","baseURL","withCredentials","useMessage","toast","useToast","showMessage","useCallback","status","position","duration","isClosable","LoadingPageSpinner","thickness","speed","emptyColor","Recent","useSetRecoilState","setTopic","sort","useState","api_posts","setApiPosts","loading","setLoading","getPosts","get","then","res","data","catch","finally","useApiPosts","useEffect","map","obj","Object","assign","ReactionButtons","justifyContent","mx","PostDetail","failed","api_postDetail","setApiPostDetail","getPostDetail","useApiPostDetail","useParams","ratio","frameBorder","allow","album","release","orientation","pr","Alert404","variant","height","goBack","maxWidth","Detail404","homeRoutes","path","exact","HamburgerButton","display","bgGradient","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","overflow","align","pt","loginState","isLogin","NullMe","email","MenuButton","disabled","colorScheme","solid","_focus","boxShadow","PrimaryButton","MenuContents","apiMe","setApiMe","setIsLogin","getMe","useApiMe","logout","localStorage","removeItem","useLogout","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","spacing","HomeLayout","useDisclosure","Page404","useLogin","login","mail","password","error","LoginForm","onChange","inputType","type","Login","loginMailAddress","setLoginMailAddress","loginPassword","setLoginPassword","regMailAddress","setRegMailAddress","regPassword","setRegPassword","regPasswordConfirm","setRegPasswordConfirm","regName","setRegName","register","useRegister","sm","isFitted","_selected","outline","e","target","Router","render","url","match","route","App","className","style","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d419fc35.chunk.js","sourcesContent":["import { Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    rating: number;\n};\nlet rating_stars: string;\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    rating_stars = \"\";\n\n    for (let i = 0; i < 5; i++) {\n        {\n            i < rating ? (rating_stars += \"★\") : (rating_stars += \"☆\");\n        }\n    }\n\n    return (\n        <Text fontSize=\"25px\" color=\"orange\">\n            {rating_stars}\n        </Text>\n    );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    img: string;\n    title: string;\n    artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n    const { img, title, artist } = props;\n\n    return (\n        <Flex w=\"30%\" p=\"auto\">\n            <Box m=\"auto\">\n                <Image src={img} boxSize=\"90%\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n                <Box mt=\"5%\">\n                    <Text fontSize=\"md\" fontWeight=\"bold\">\n                        {title}\n                    </Text>\n                    <Text fontSize=\"xs\">{artist}</Text>\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n  value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"like\"\n        icon={<GoHeart size=\"27px\" />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n  return (\n    <IconButton\n      aria-label=\"like\"\n      icon={<BsShareFill />}\n      size=\"0px\"\n      color=\"gray\"\n      bg=\"none\"\n    />\n  );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    mb: string;\n    onClick?: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n    const { children, mb, onClick } = props;\n\n    return (\n        <Flex\n            w=\"90%\"\n            h=\"33vh\"\n            bg=\"white\"\n            borderRadius=\"10px\"\n            px=\"30px\"\n            py=\"15px\"\n            shadow=\"md\"\n            mb={mb}\n            _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n            onClick={onClick}\n        >\n            {children}\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"1.5%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","import axios from 'axios';\n \nconst apiClient = axios.create({\n    baseURL: '',\n    withCredentials: true,\n});\n \nexport default apiClient;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, []);\n\n  return { showMessage };\n};\n","import { memo } from \"react\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nexport const LoadingPageSpinner = memo(() => {\n    return (\n        <Spinner\n            thickness=\"4px\"\n            speed=\"0.8s\"\n            emptyColor=\"gray.200\"\n            color=\"#c4de71\"\n            size=\"xl\"\n            m=\"auto\"\n            mt=\"50%\"\n        />\n    );\n});\n","import { memo, useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/Home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useApiPosts } from \"../../../hooks/api/useApiPosts\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    const { getPosts, api_posts, loading } = useApiPosts(\"recent\");\n    useEffect(() => getPosts(), [getPosts]);\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    // const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        /* 本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    {/* apiからjsonを引っ張り、map関数でカードを繰り返し描画 */}\n                    {api_posts.map((obj) => (\n                        <Box key={obj.id}>\n                            {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                            <PostCard post={Object.assign(obj)} />\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </>\n\n        /* ↓ローカル開発用 */\n        // <Box>\n        //     {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n        //     {api_posts.map((obj) => (\n        //         <Box key={obj.id}>\n        //             {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n        //             <PostCard post={Object.assign(obj)} />\n        //         </Box>\n        //     ))}\n        // </Box>\n    );\n});\n","import { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport apiClient from \"../../client/apiClient\";\n\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport { useMessage } from \"../message/useMessage\";\n\ntype Sort = \"recent\" | \"follow\" | \"popular\";\n\nexport const useApiPosts = (sort: Sort) => {\n    const [api_posts, setApiPosts] = useState<Array<PostsDataType>>([]);\n    const [loading, setLoading] = useState(false);\n    const { showMessage } = useMessage();\n\n    const getPosts = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Array<PostsDataType>>(`/api/posts/recent`)\n            .then((res) => setApiPosts(res.data))\n            .catch( () =>\n            {\n                showMessage( { title: \"データの取得に失敗しました\", status: \"error\" } );\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getPosts, api_posts, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { useEffect, VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { AspectRatio, Flex, Text, Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { homeState } from \"../../../../store/homeState\";\nimport { ReactionButtons } from \"../../../molecules/post_detail/ReactionButtons\";\nimport { useApiPostDetail } from \"../../../../hooks/api/useApiPostDetail\";\nimport json_postDetail from \"../../../../test_json/postDetail.json\";\nimport { LoadingCard } from \"../../../organisms/Home/post/LoadingCard\";\nimport { LoadingPageSpinner } from \"../../../organisms/LoadingPageSpinner\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { getPostDetail, api_postDetail, loading } = useApiPostDetail(id);\n    useEffect(() => getPostDetail(), []);\n\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        /* ↓本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box mx={5}>\n                    <Flex>\n                        <AspectRatio ratio={1 / 1} w=\"300px\">\n                            <iframe\n                                src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n                                frameBorder=\"0\"\n                                allow=\"encrypted-media\"\n                            />\n                        </AspectRatio>\n                        <Flex\n                            alignItems=\"start\"\n                            flexFlow=\"column\"\n                            ml={5}\n                            mt=\"auto\"\n                        >\n                            <Text fontWeight=\"bold\" fontSize=\"md\">\n                                {api_postDetail.track.title}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                収録アルバム：{api_postDetail.track.album}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                アーティスト：{api_postDetail.track.artist}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                リリース：{api_postDetail.track.release}\n                            </Text>\n                        </Flex>\n                    </Flex>\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                    <Flex textAlign=\"left\">\n                        <Box mr={2}>\n                            <UserInfoBox\n                                name={api_postDetail.user.name}\n                                user_title={api_postDetail.user.job}\n                                img={api_postDetail.user.img}\n                            />\n                        </Box>\n                        <Rating rating={api_postDetail.review.star} />\n                    </Flex>\n                    <Box mt={5} textAlign=\"left\">\n                        <Text fontSize=\"lg\" fontWeight=\"bold\">\n                            {api_postDetail.review.title}\n                        </Text>\n                        <Text fontSize=\"sm\" pr={10} mt={2}>\n                            {api_postDetail.review.body}\n                        </Text>\n                    </Box>\n                    <ReactionButtons\n                        comment_val={api_postDetail.reaction.comment_val}\n                        like_val={api_postDetail.reaction.like_val}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                </Box>\n            )}\n        </>\n\n        /* ローカルでのテスト用*/\n        // <Box mx={5}>\n        //     <Flex>\n        //         <AspectRatio ratio={1 / 1} w=\"300px\">\n        //             <iframe\n        //                 src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n        //                 frameBorder=\"0\"\n        //                 allow=\"encrypted-media\"\n        //             />\n        //         </AspectRatio>\n        //         <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\">\n        //             <Text fontWeight=\"bold\" fontSize=\"md\">\n        //                 {api_postDetail.track.title}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 収録アルバム：{api_postDetail.track.album}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 アーティスト：{api_postDetail.track.artist}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 リリース：{api_postDetail.track.release}\n        //             </Text>\n        //         </Flex>\n        //     </Flex>\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        //     <Flex textAlign=\"left\">\n        //         <Box mr={2}>\n        //             <UserInfoBox\n        //                 name={api_postDetail.user.name}\n        //                 user_title={api_postDetail.user.job}\n        //                 img={api_postDetail.user.img}\n        //             />\n        //         </Box>\n        //         <Rating rating={api_postDetail.review.star} />\n        //     </Flex>\n        //     <Box mt={5} textAlign=\"left\">\n        //         <Text fontSize=\"lg\" fontWeight=\"bold\">\n        //             {api_postDetail.review.title}\n        //         </Text>\n        //         <Text fontSize=\"sm\" pr={10} mt={2}>\n        //             {api_postDetail.review.body}\n        //         </Text>\n        //     </Box>\n        //     <ReactionButtons\n        //         comment_val={api_postDetail.reaction.comment_val}\n        //         like_val={api_postDetail.reaction.like_val}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        // </Box>\n    );\n};\n","import { useCallback, useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport failed from \"../../test_json/postDetail.json\";\nimport { useMessage } from \"../message/useMessage\";\nimport apiClient from \"../../client/apiClient\";\nimport { useHistory } from \"react-router\";\n\n\n\nexport const useApiPostDetail = ( id: string ) =>\n{\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n    const [ loading, setLoading ] = useState( false )\n    const { showMessage } = useMessage();\n\n    const getPostDetail = useCallback(() =>\n    {\n        setLoading( true );\n\n        apiClient\n        .get<PostsDataType>( `/api/posts/${ id }` )\n        .then( ( res ) => setApiPostDetail( res.data ) )\n        .catch( () =>\n        {\n            showMessage( { title: \"データの取得に失敗しました\", status: \"error\" } );\n        } ).finally( ()=>setLoading(false));\n    },[])\n\n    return { getPostDetail, api_postDetail, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n    title: string;\n    body: string;\n};\n\nexport const Alert404: VFC<Props> = memo((props) => {\n    const { title, body } = props;\n    const history = useHistory();\n    const onClickPageBack = () => {\n        history.goBack();\n    };\n\n    return (\n        <Alert\n            status=\"error\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            textAlign=\"center\"\n            height=\"200px\"\n        >\n            <CloseButton onClick={onClickPageBack} ml=\"auto\" boxSize=\"30px\" />\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                {title}\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">{body}</AlertDescription>\n        </Alert>\n    );\n});\n","import { Alert404 } from \"../../../organisms/Home/Alert404\";\n\nexport const Detail404 = () => {\n    return <Alert404 title=\"エラー\" body=\"投稿が見つかりませんでした。\" />;\n};\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/detail/PostDetail\";\nimport { HomePage404 } from \"../components/pages/home/Home404\";\nimport { Detail404 } from \"../components/pages/home/detail/Detail404\";\nimport { Login } from \"../components/pages/Login\";\n\nexport const homeRoutes = [\n    {\n        path: \"follow_post\",\n        exact: false,\n        // children: <FollowPosts />,\n        children: <Recent />,\n    },\n    {\n        path: \"popular\",\n        exact: false,\n        // children: <Popular />,\n        children: <Recent />,\n    },\n    {\n        path: \"post/:id\",\n        exact: false,\n        children: <PostDetail />,\n    },\n    {\n        path: \"page404\",\n        exact: false,\n        children: <Detail404 />,\n    },\n    {\n        path: \"*\",\n        exact: false,\n        children: <Recent />,\n    },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n    display?: {};\n    onClick: () => void;\n    size?: string;\n    ml?: string;\n    my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n    const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n    return (\n        <IconButton\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            color=\"white\"\n            aria-label=\"Open menu\"\n            icon={<HamburgerIcon />}\n            size={size}\n            ml={ml}\n            my={my}\n            display={display}\n            onClick={onClick}\n        />\n    );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.goBack();\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<HiArrowNarrowLeft />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"25px\"\n                                onClick={onBackHome}\n                                mt=\"auto\"\n                                boxSize={{ base: \"29px\", md: \"36px\" }}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { atom } from \"recoil\";\n\nexport const loginState = atom( {\n    key: \"loginState\",\n    default: { isLogin:true }\n} );\n","import { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport apiClient from \"../../client/apiClient\";\nimport { loginState } from \"../../store/loginState\";\nimport { useMessage } from \"../message/useMessage\";\n\ntype Me = {\n    id: string;\n    name: string;\n    email: string;\n}\n\nconst NullMe:Me = {id:\"\", name:\"\", email:\"\"}\n\nexport const useApiMe = () =>\n{\n    const [ loading, setLoading ] = useState( false );\n    const [ apiMe, setApiMe ] = useState<Me>(NullMe);\n    const history = useHistory();\n    const { showMessage } = useMessage();\n    const setIsLogin = useSetRecoilState( loginState );\n\n\n    const getMe = useCallback(() => {\n        setLoading(true);\n        apiClient\n            .get<Me>(`/api/me`)\n            .then( ( res ) =>\n            {\n                setApiMe( res.data );\n            }\n            )\n            .catch( () =>\n            {\n                /* どの画面でも必ず必要なユーザー情報が取得できない場合 = ログインしてない\n                なのでログイン画面へリダイレクト */\n                showMessage( { title: \"ログインしていません\", status: \"error\" } );\n                setIsLogin( { isLogin:false});\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getMe, apiMe, loading };\n};\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    onClick: () => void;\n    disabled?: boolean;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n    const { children, w = \"md\", onClick, disabled = false } = props;\n    return (\n        <Button\n            colorScheme=\"gray\"\n            variant=\"ghost\"\n            solid=\"none\"\n            w=\"w\"\n            _hover={{ cursor: \"pointer\" }}\n            _focus={{ boxShadow: \"none\" }}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </Button>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    w?: string;\n    disabled?: boolean;\n    onClick?: () => void;\n    mt?: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n    const { children, w = \"100%\", onClick, disabled, mt = \"none\" } = props;\n    return (\n        <Button\n            onClick={onClick}\n            color=\"white\"\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            w={w}\n            _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n            disabled={disabled}\n            mt={mt}\n        >\n            {children}\n        </Button>\n    );\n};\n","import { Box, Button, Flex, Text } from \"@chakra-ui/react\";\nimport { memo, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useApiMe } from \"../../hooks/api/useApiMe\";\nimport { useLogout } from \"../../hooks/login/useLogout\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n    const history = useHistory();\n    // ユーザーの情報を取得\n    const { getMe, apiMe } = useApiMe();\n    const { logout } = useLogout();\n\n    useEffect(() => getMe(), [getMe]);\n\n    const onRecent = () => {\n        history.push(\"/\");\n    };\n    const onFollowPost = () => {\n        history.push(\"/follow_post\");\n    };\n    const onPopular = () => {\n        history.push(\"/popular\");\n    };\n\n    const onClickLogout = () => {\n        logout();\n    };\n    return (\n        <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n            <Link to=\"/\">\n                <Text\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    my=\"20px\"\n                    ml=\"10px\"\n                >\n                    Bebop!\n                </Text>\n            </Link>\n\n            <MenuButton w=\"100%\" onClick={onRecent}>\n                最新の投稿\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onFollowPost} disabled={true}>\n                フォロー\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onPopular} disabled={true}>\n                人気の投稿\n            </MenuButton>\n            <Flex mt=\"25vh\" ml=\"30px\">\n                <PrimaryButton w=\"130px\">投稿</PrimaryButton>\n            </Flex>\n\n            <Box mt=\"25vh\" w=\"100%\" onClick={onClickLogout}>\n                <UserInfoBox\n                    img=\"https://source.unsplash.com/brFsZ7qszSY\"\n                    name={apiMe.name}\n                    user_title=\"学生\"\n                    pl=\"30px\"\n                />\n                <Button\n                    fontSize={5}\n                    w=\"80px\"\n                    h=\"25px\"\n                    colorScheme=\"red\"\n                    mt=\"15px\"\n                >\n                    ログアウト\n                </Button>\n            </Box>\n        </Flex>\n    );\n});\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport apiClient from \"../../client/apiClient\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogout = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n\n    const logout = useCallback( ( ) =>\n    {\n        axios.post( \"api/logout\" )\n            .then( res =>\n            {\n                showMessage( { title: \"ログアウトしました\", status: \"success\" } );\n                localStorage.removeItem( \"auth\" );\n                history.push( \"/login\" );\n            })\n    }, [] );\n    return { logout };\n}\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n    children: ReactNode;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n    const { children, isOpen, onClose } = props;\n\n    return (\n        <Box>\n            {/* 要素を横並びに */}\n            <Flex spacing=\"none\">\n                {/* メニューバー */}\n                <Flex mx=\"auto\" w=\"100%\">\n                    <Box\n                        w=\"15%\"\n                        h=\"100%\"\n                        display={{ base: \"none\", md: \"inline\" }}\n                        pr=\"auto\"\n                        ml=\"18%\"\n                    >\n                        <MenuContents />\n                    </Box>\n                    {children}\n                </Flex>\n            </Flex>\n            <MenuDrawer isOpen={isOpen} onClose={onClose} />\n        </Box>\n    );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/Home/HomePostBox\";\nimport { MenuBar } from \"../organisms/Home/MenuBar\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <Box w=\"100%\">\n            <MenuBar isOpen={isOpen} onClose={onClose}>\n                <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n            </MenuBar>\n        </Box>\n    );\n});\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport apiClient from \"../../client/apiClient\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useLogin = () => {\n    const { showMessage } = useMessage();\n    const history = useHistory();\n\n    const [ user, setUser ] = useState();\n\n    const login = useCallback( (mail: string, password: string ) =>\n    {\n        apiClient.get( 'sanctum/csrf-cookie')\n            .then( res =>\n            {\n                apiClient.post( \"/api/login\", {\n                    email: mail,\n                    password: password\n                })\n                    .then( res =>\n                    {\n                        showMessage( { title: \"ログインしました\", status: \"success\" } );\n                        history.push( \"/\" );\n                    } ).catch( error =>\n                    {\n                        showMessage( { title: \"ユーザーが見つかりません\", status: \"error\" } );\n                    })\n            })\n    }, [] );\n    return { login };\n}\n","import { Box, Text, Input } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    value: string;\n    inputType?: string;\n};\n\nexport const LoginForm: VFC<Props> = (props) => {\n    const { onChange, value, children, inputType = \"text\" } = props;\n\n    return (\n        <Box textAlign=\"start\" h=\"80px\">\n            <Text ml={1} mb={1} fontSize=\"sm\">\n                {children}\n            </Text>\n            <Input type={inputType} onChange={onChange} value={value} />\n        </Box>\n    );\n};\n","import {\n    Tabs,\n    Text,\n    Box,\n    Flex,\n    Tab,\n    TabList,\n    TabPanels,\n    TabPanel,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\nimport { ChangeEvent, useState } from \"react\";\n\nimport { useLogin } from \"../../hooks/login/useLogin\";\nimport { LoginForm } from \"../molecules/LoginForm\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { useRegister } from \"../../hooks/login/useRegister\";\n\nexport const Login = () => {\n    // ログインフォーム用state\n    const [loginMailAddress, setLoginMailAddress] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    // 新規登録フォーム用state\n    const [regMailAddress, setRegMailAddress] = useState(\"\");\n    const [regPassword, setRegPassword] = useState(\"\");\n    const [regPasswordConfirm, setRegPasswordConfirm] = useState(\"\");\n    const [regName, setRegName] = useState(\"\");\n\n    // ログインフォーム入力関数\n    const onChangeLoginMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginMailAddress(e.target.value);\n\n    const onChangeLoginPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setLoginPassword(e.target.value);\n\n    // ログインフォーム入力関数\n    const onChangeRegMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegMailAddress(e.target.value);\n\n    const onChangeRegPassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPassword(e.target.value);\n\n    const onChangeRegPasswordConfirm = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegPasswordConfirm(e.target.value);\n\n    const onChangeRegName = (e: ChangeEvent<HTMLInputElement>) =>\n        setRegName(e.target.value);\n\n    const { register } = useRegister();\n    const onClickRegister = () => {\n        register(regName, regMailAddress, regPassword);\n    };\n\n    const { login } = useLogin();\n    const onClickLogin = () => {\n        login(loginMailAddress, loginPassword);\n    };\n\n    return (\n        <Box\n            w=\"100%\"\n            h=\"100vh\"\n            textAlign=\"center\"\n            pt={{ base: \"none\", sm: \"10vh\" }}\n        >\n            {/* 画面サイズが大きいときはカードの外に「Bebop！を表示」 */}\n            <Text\n                display={{ base: \"none\", sm: \"inline\" }}\n                as=\"h1\"\n                fontSize=\"60px\"\n                bgGradient=\"linear(to-tl, green, #c4de71)\"\n                bgClip=\"text\"\n                fontWeight=\"bold\"\n            >\n                Bebop!\n            </Text>\n            {/* 以下、カード内 */}\n            <Flex\n                bg=\"white\"\n                borderRadius={{ base: \"none\", sm: \"10px\" }}\n                p=\"20px\"\n                shadow={{ base: \"none\", sm: \"md\" }}\n                w={{ base: \"100%\", sm: \"400px\" }}\n                h={{ base: \"100%\", sm: \"500px\" }}\n                textAlign=\"center\"\n                flexDirection=\"column\"\n                mx=\"auto\"\n                mt={{ base: \"none\", sm: \"2vh\" }}\n            >\n                <Text\n                    display={{ base: \"inline\", sm: \"none\" }}\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    mb=\"20px\"\n                >\n                    Bebop!\n                </Text>\n                {/* タブを作成 */}\n                <Tabs isFitted variant=\"enclosed\">\n                    <TabList mb=\"1em\">\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            ログイン\n                        </Tab>\n                        <Tab\n                            _selected={{ color: \"white\", bg: \"green.400\" }}\n                            _focus={{ outline: \"none\" }}\n                            fontWeight=\"bold\"\n                        >\n                            新規登録\n                        </Tab>\n                    </TabList>\n\n                    {/* タブの中身を記述 */}\n                    <TabPanels>\n                        {/* ログイン用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <LoginForm\n                                    onChange={onChangeLoginMailAddress}\n                                    value={loginMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeLoginPassword}\n                                    value={loginPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </LoginForm>\n                                <PrimaryButton\n                                    onClick={onClickLogin}\n                                    disabled={\n                                        loginMailAddress === \"\" ||\n                                        loginPassword === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    ログイン\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                        {/* 新規登録用タブパネル */}\n                        <TabPanel>\n                            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                                <LoginForm\n                                    onChange={onChangeRegName}\n                                    value={regName}\n                                >\n                                    ユーザー名\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeRegMailAddress}\n                                    value={regMailAddress}\n                                    inputType=\"email\"\n                                >\n                                    メールアドレス\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeRegPassword}\n                                    value={regPassword}\n                                    inputType=\"password\"\n                                >\n                                    パスワード\n                                </LoginForm>\n                                <LoginForm\n                                    onChange={onChangeRegPasswordConfirm}\n                                    value={regPasswordConfirm}\n                                    inputType=\"password\"\n                                >\n                                    パスワード（再入力）\n                                </LoginForm>\n                                <PrimaryButton\n                                    onClick={onClickRegister}\n                                    disabled={\n                                        regMailAddress === \"\" ||\n                                        regPassword === \"\" ||\n                                        regPasswordConfirm === \"\" ||\n                                        regPassword !== regPasswordConfirm ||\n                                        regName === \"\"\n                                    }\n                                    mt=\"15px\"\n                                >\n                                    新規登録\n                                </PrimaryButton>\n                            </Flex>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n            </Flex>\n        </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback } from \"react\"\nimport { useMessage} from \"../message/useMessage\";\nimport { useLogin } from \"./useLogin\";\n\n\nexport const useRegister = () => {\n    const { showMessage } = useMessage();\n    const { login } = useLogin();\n\n\n\n    const register = useCallback( (name:string, mail: string, password: string ) =>\n    {\n        const data = {\n            name: name,\n            email: mail,\n            password: password\n        }\n\n        axios.post( \"api/register\", data )\n            .then( ( res ) =>\n            {\n                if ( res.status == 200 )\n                {\n                    login(mail,password)\n                }\n            } )\n            .catch(  () =>\n            {\n                showMessage( { title: \"新規登録に失敗しました\", status: \"error\" } );\n            })\n    }, [] );\n    return {  register };\n}\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\nimport { loginState } from \"../store/loginState\";\n\nexport const Router = () => {\n    const { isLogin } = useRecoilValue(loginState);\n    return (\n        <Switch>\n            <Route\n                path=\"/\"\n                render={({ match: { url } }) => (\n                    <Switch>\n                        <Route path={`${url}login`}>\n                            {/* ユーザー情報取得に成功している場合、ログイン画面に入れない */}\n                            {isLogin ? <Redirect to=\"/\" /> : <Login />}\n                        </Route>\n                        {homeRoutes.map((route) => (\n                            <Route\n                                key={route.path}\n                                exact={route.exact}\n                                path={`${url}${route.path}`}\n                            >\n                                {/* ユーザー情報取得に失敗した場合、ログイン画面に送られる */}\n                                {isLogin ? (\n                                    <HomeLayout>{route.children}</HomeLayout>\n                                ) : (\n                                    <Login />\n                                )}\n                            </Route>\n                        ))}\n                    </Switch>\n                )}\n            />\n            <Route path=\"*\">\n                <Page404 />\n            </Route>\n        </Switch>\n    );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}