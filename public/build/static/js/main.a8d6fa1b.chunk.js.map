{"version":3,"sources":["components/atoms/button/Rating.tsx","theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/Home/post/PostCard.tsx","hooks/message/useMessage.ts","components/organisms/LoadingPageSpinner.tsx","components/pages/home/Recent.tsx","hooks/api/useApiPosts.tsx","components/pages/home/FollowPosts.tsx","components/pages/home/Popular.tsx","components/molecules/post_detail/ReactionButtons.tsx","components/pages/home/detail/PostDetail.tsx","hooks/api/useApiPostDetail.ts","components/organisms/Home/Alert404.tsx","components/pages/home/Home404.tsx","components/pages/home/detail/Detail404.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/Home/HomePostBox.tsx","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","components/organisms/Home/MenuDrawer.tsx","components/organisms/Home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Page404.tsx","components/pages/Login.tsx","hooks/login/useAuth.ts","router/Router.tsx","App.tsx","index.tsx"],"names":["rating_stars","theme","extendTheme","styles","global","body","backgroundColor","color","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","i","LikeButton","value","icon","size","bg","ml","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","useMessage","toast","useToast","showMessage","useCallback","status","position","duration","isClosable","LoadingPageSpinner","thickness","speed","emptyColor","Recent","useSetRecoilState","setTopic","sort","useState","api_posts","setApiPosts","loading","setLoading","getPosts","axios","get","then","res","data","catch","finally","useApiPosts","useEffect","map","obj","Object","assign","FollowPosts","Popular","ReactionButtons","justifyContent","mx","PostDetail","failed","api_postDetail","setApiPostDetail","getPostDetail","useApiPostDetail","useParams","ratio","frameBorder","allow","album","release","orientation","pr","Alert404","variant","height","goBack","maxWidth","HomePage404","Detail404","homeRoutes","path","exact","HamburgerButton","display","bgGradient","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","overflow","align","pt","MenuButton","colorScheme","solid","_focus","boxShadow","PrimaryButton","MenuContents","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","spacing","HomeLayout","useDisclosure","Page404","Login","mailAddress","setMailAddress","password","setPassword","login","mail","useAuth","sm","type","onChange","e","target","disabled","Router","render","url","match","route","App","className","style","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8d6fa1b.chunk.js","sourcesContent":["import { Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    rating: number;\n};\nlet rating_stars: string;\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    rating_stars = \"\";\n\n    for (let i = 0; i < 5; i++) {\n        {\n            i < rating ? (rating_stars += \"★\") : (rating_stars += \"☆\");\n        }\n    }\n\n    return (\n        <Text fontSize=\"30px\" color=\"orange\">\n            {rating_stars}\n        </Text>\n    );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\ntype HomeStateType = {\n    key: \"string\",\n    default: {\n        topic:\"recent\"|\"follow\"|\"popular\"|\"detail\"\n    }\n}\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n  img: string;\n  title: string;\n  artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n  const { img, title, artist } = props;\n\n  return (\n    <Flex w=\"30%\" p=\"auto\">\n      <Box m=\"auto\">\n        <Image src={img} boxSize=\"150\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n        <Box mt=\"5%\">\n          <Text fontSize=\"md\" fontWeight=\"bold\">\n            {title}\n          </Text>\n          <Text fontSize=\"xs\">{artist}</Text>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n  value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"like\"\n        icon={<GoHeart size=\"27px\" />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n  return (\n    <IconButton\n      aria-label=\"like\"\n      icon={<BsShareFill />}\n      size=\"0px\"\n      color=\"gray\"\n      bg=\"none\"\n    />\n  );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n    children: ReactNode;\n    mb: string;\n    onClick?: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n    const { children, mb, onClick } = props;\n\n    return (\n        <Flex\n            w=\"90%\"\n            h=\"33vh\"\n            bg=\"white\"\n            borderRadius=\"10px\"\n            px=\"30px\"\n            py=\"15px\"\n            shadow=\"md\"\n            mb={mb}\n            _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n            onClick={onClick}\n        >\n            {children}\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"1.5%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, []);\n\n  return { showMessage };\n};\n","import { memo } from \"react\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nexport const LoadingPageSpinner = memo(() => {\n    return (\n        <Spinner\n            thickness=\"4px\"\n            speed=\"0.8s\"\n            emptyColor=\"gray.200\"\n            color=\"#c4de71\"\n            size=\"xl\"\n            m=\"auto\"\n            mt=\"50%\"\n        />\n    );\n});\n","import { memo, useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/Home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useApiPosts } from \"../../../hooks/api/useApiPosts\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    const { getPosts, api_posts, loading } = useApiPosts(\"recent\");\n    useEffect(() => getPosts(), [getPosts]);\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    // const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        /* 本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box>\n                    {/* apiからjsonを引っ張り、map関数でカードを繰り返し描画 */}\n                    {api_posts.map((obj) => (\n                        <Box key={obj.id}>\n                            {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                            <PostCard post={Object.assign(obj)} />\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </>\n\n        /* ↓ローカル開発用 */\n        // <Box>\n        //     {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n        //     {api_posts.map((obj) => (\n        //         <Box key={obj.id}>\n        //             {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n        //             <PostCard post={Object.assign(obj)} />\n        //         </Box>\n        //     ))}\n        // </Box>\n    );\n});\n","import axios from \"axios\";\nimport { useState, useCallback } from \"react\";\n\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport { useMessage } from \"../message/useMessage\";\n\ntype Sort = \"recent\" | \"follow\" | \"popular\";\n\nexport const useApiPosts = (sort: Sort) => {\n    const [api_posts, setApiPosts] = useState<Array<PostsDataType>>([]);\n    const [loading, setLoading] = useState(false);\n    const { showMessage } = useMessage();\n\n    const getPosts = useCallback(() => {\n        setLoading(true);\n        axios\n            .get<Array<PostsDataType>>(`/api/posts/recent`)\n            .then((res) => setApiPosts(res.data))\n            .catch(() => {\n                showMessage({\n                    title: \"データの読み込みに失敗しました\",\n                    status: \"error\",\n                });\n            })\n            .finally(() => setLoading(false));\n    }, []);\n\n    return { getPosts, api_posts, loading };\n};\n","import { memo } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\nimport { HomePage404 } from \"./Home404\";\n\nexport const FollowPosts = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"follow\" });\n\n    return <LoadingPageSpinner />;\n});\n","import { memo } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box, Spinner } from \"@chakra-ui/react\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePage404 } from \"./Home404\";\nimport { LoadingPageSpinner } from \"../../organisms/LoadingPageSpinner\";\n\nexport const Popular = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"popular\" });\n    return (\n        <Box>\n            <LoadingPageSpinner />\n        </Box>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { useEffect, VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { AspectRatio, Flex, Text, Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { homeState } from \"../../../../store/homeState\";\nimport { ReactionButtons } from \"../../../molecules/post_detail/ReactionButtons\";\nimport { useApiPostDetail } from \"../../../../hooks/api/useApiPostDetail\";\nimport json_postDetail from \"../../../../test_json/postDetail.json\";\nimport { LoadingCard } from \"../../../organisms/Home/post/LoadingCard\";\nimport { LoadingPageSpinner } from \"../../../organisms/LoadingPageSpinner\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { getPostDetail, api_postDetail, loading } = useApiPostDetail(id);\n    useEffect(() => getPostDetail(), []);\n\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        /* ↓本番環境用 */\n        <>\n            {loading ? (\n                <LoadingPageSpinner />\n            ) : (\n                <Box mx={5}>\n                    <Flex>\n                        <AspectRatio ratio={1 / 1} w=\"300px\">\n                            <iframe\n                                src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n                                frameBorder=\"0\"\n                                allow=\"encrypted-media\"\n                            />\n                        </AspectRatio>\n                        <Flex\n                            alignItems=\"start\"\n                            flexFlow=\"column\"\n                            ml={5}\n                            mt=\"auto\"\n                        >\n                            <Text fontWeight=\"bold\" fontSize=\"md\">\n                                {api_postDetail.track.title}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                収録アルバム：{api_postDetail.track.album}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                アーティスト：{api_postDetail.track.artist}\n                            </Text>\n                            <Text fontSize=\"sm\">\n                                リリース：{api_postDetail.track.release}\n                            </Text>\n                        </Flex>\n                    </Flex>\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                    <Flex textAlign=\"left\">\n                        <Box mr={2}>\n                            <UserInfoBox\n                                name={api_postDetail.user.name}\n                                user_title={api_postDetail.user.job}\n                                img={api_postDetail.user.img}\n                            />\n                        </Box>\n                        <Rating rating={api_postDetail.review.star} />\n                    </Flex>\n                    <Box mt={5} textAlign=\"left\">\n                        <Text fontSize=\"lg\" fontWeight=\"bold\">\n                            {api_postDetail.review.title}\n                        </Text>\n                        <Text fontSize=\"sm\" pr={10} mt={2}>\n                            {api_postDetail.review.body}\n                        </Text>\n                    </Box>\n                    <ReactionButtons\n                        comment_val={api_postDetail.reaction.comment_val}\n                        like_val={api_postDetail.reaction.like_val}\n                    />\n                    <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n                </Box>\n            )}\n        </>\n\n        /* ローカルでのテスト用*/\n        // <Box mx={5}>\n        //     <Flex>\n        //         <AspectRatio ratio={1 / 1} w=\"300px\">\n        //             <iframe\n        //                 src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n        //                 frameBorder=\"0\"\n        //                 allow=\"encrypted-media\"\n        //             />\n        //         </AspectRatio>\n        //         <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\">\n        //             <Text fontWeight=\"bold\" fontSize=\"md\">\n        //                 {api_postDetail.track.title}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 収録アルバム：{api_postDetail.track.album}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 アーティスト：{api_postDetail.track.artist}\n        //             </Text>\n        //             <Text fontSize=\"sm\">\n        //                 リリース：{api_postDetail.track.release}\n        //             </Text>\n        //         </Flex>\n        //     </Flex>\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        //     <Flex textAlign=\"left\">\n        //         <Box mr={2}>\n        //             <UserInfoBox\n        //                 name={api_postDetail.user.name}\n        //                 user_title={api_postDetail.user.job}\n        //                 img={api_postDetail.user.img}\n        //             />\n        //         </Box>\n        //         <Rating rating={api_postDetail.review.star} />\n        //     </Flex>\n        //     <Box mt={5} textAlign=\"left\">\n        //         <Text fontSize=\"lg\" fontWeight=\"bold\">\n        //             {api_postDetail.review.title}\n        //         </Text>\n        //         <Text fontSize=\"sm\" pr={10} mt={2}>\n        //             {api_postDetail.review.body}\n        //         </Text>\n        //     </Box>\n        //     <ReactionButtons\n        //         comment_val={api_postDetail.reaction.comment_val}\n        //         like_val={api_postDetail.reaction.like_val}\n        //     />\n        //     <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        // </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback, useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport failed from \"../../test_json/postDetail.json\";\nimport { useMessage } from \"../message/useMessage\";\n\n\nexport const useApiPostDetail = ( id: string ) =>\n{\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n    const [ loading, setLoading ] = useState( false )\n    const {showMessage} = useMessage();\n\n    const getPostDetail = useCallback(() =>\n    {\n        setLoading( true );\n\n        axios\n        .get<PostsDataType>( `/api/posts/${ id }` )\n        .then( ( res ) => setApiPostDetail( res.data ) )\n        .catch( () =>\n        {\n            showMessage( { title: \"投稿が見つかりません\", status: \"error\" } );\n        } ).finally( ()=>setLoading(false));\n    },[])\n\n    return { getPostDetail, api_postDetail, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n    title: string;\n    body: string;\n};\n\nexport const Alert404: VFC<Props> = memo((props) => {\n    const { title, body } = props;\n    const history = useHistory();\n    const onClickPageBack = () => {\n        history.goBack();\n    };\n\n    return (\n        <Alert\n            status=\"error\"\n            variant=\"subtle\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            textAlign=\"center\"\n            height=\"200px\"\n        >\n            <CloseButton onClick={onClickPageBack} ml=\"auto\" boxSize=\"30px\" />\n            <AlertIcon boxSize=\"40px\" mr={0} />\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n                {title}\n            </AlertTitle>\n            <AlertDescription maxWidth=\"sm\">{body}</AlertDescription>\n        </Alert>\n    );\n});\n","import { Alert404 } from \"../../organisms/Home/Alert404\";\n\nexport const HomePage404 = () => {\n    return <Alert404 title=\"エラー\" body=\"データの読み込みに失敗しました。\" />;\n};\n","import { Alert404 } from \"../../../organisms/Home/Alert404\";\n\nexport const Detail404 = () => {\n    return <Alert404 title=\"エラー\" body=\"投稿が見つかりませんでした。\" />;\n};\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/detail/PostDetail\";\nimport { HomePage404 } from \"../components/pages/home/Home404\";\nimport { Detail404 } from \"../components/pages/home/detail/Detail404\";\n\nexport const homeRoutes = [\n    {\n        path: \"\",\n        exact: true,\n        children: <Recent />,\n    },\n    {\n        path: \"follow_post\",\n        exact: false,\n        children: <FollowPosts />,\n    },\n    {\n        path: \"popular\",\n        exact: false,\n        children: <Popular />,\n    },\n    {\n        path: \"post/:id\",\n        exact: false,\n        children: <PostDetail />,\n    },\n    {\n        path: \"page404\",\n        exact: false,\n        children: <Detail404 />,\n    },\n    {\n        path: \"*\",\n        exact: false,\n        children: <HomePage404 />,\n    },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n    display?: {};\n    onClick: () => void;\n    size?: string;\n    ml?: string;\n    my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n    const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n    return (\n        <IconButton\n            bgGradient=\"linear(to-tl, green, #c4de71)\"\n            color=\"white\"\n            aria-label=\"Open menu\"\n            icon={<HamburgerIcon />}\n            size={size}\n            ml={ml}\n            my={my}\n            display={display}\n            onClick={onClick}\n        />\n    );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<HiArrowNarrowLeft />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"25px\"\n                                onClick={onBackHome}\n                                mt=\"auto\"\n                                boxSize={{ base: \"29px\", md: \"36px\" }}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  w?: string;\n  onClick: () => void;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n  const { children, w = \"md\", onClick } = props;\n  return (\n    <Button\n      colorScheme=\"gray\"\n      variant=\"ghost\"\n      solid=\"none\"\n      w=\"w\"\n      _hover={{ cursor: \"pointer\" }}\n      _focus={{ boxShadow: \"none\" }}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  w: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n  const { children, w } = props;\n  return (\n    <Button\n      color=\"white\"\n      bgGradient=\"linear(to-tl, green, #c4de71)\"\n      w={w}\n      _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { memo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n    const history = useHistory();\n    const onRecent = () => {\n        history.push(\"/\");\n    };\n    const onFollowPost = () => {\n        history.push(\"/follow_post\");\n    };\n    const onPopular = () => {\n        history.push(\"/popular\");\n    };\n    return (\n        <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n            <Link to=\"/\">\n                <Text\n                    as=\"h1\"\n                    fontSize=\"40px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                    my=\"20px\"\n                    ml=\"10px\"\n                >\n                    Bebop!\n                </Text>\n            </Link>\n\n            <MenuButton w=\"100%\" onClick={onRecent}>\n                最新の投稿\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onFollowPost}>\n                フォロー\n            </MenuButton>\n            <MenuButton w=\"100%\" onClick={onPopular}>\n                人気の投稿\n            </MenuButton>\n            <Flex mt=\"300px\" ml=\"30px\">\n                <PrimaryButton w=\"130px\">投稿</PrimaryButton>\n            </Flex>\n\n            <Box mt=\"200px\" w=\"100%\" ml=\"15%\">\n                <UserInfoBox\n                    img=\"https://source.unsplash.com/brFsZ7qszSY\"\n                    name=\"中村 優太\"\n                    user_title=\"学生\"\n                    pl=\"30px\"\n                />\n            </Box>\n        </Flex>\n    );\n});\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n    children: ReactNode;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n    const { children, isOpen, onClose } = props;\n\n    return (\n        <Box>\n            {/* 要素を横並びに */}\n            <Flex spacing=\"none\">\n                {/* メニューバー */}\n                <Flex mx=\"auto\" w=\"100%\">\n                    <Box\n                        w=\"15%\"\n                        h=\"100vh\"\n                        display={{ base: \"none\", md: \"inline\" }}\n                        pr=\"auto\"\n                        ml=\"18%\"\n                    >\n                        <MenuContents />\n                    </Box>\n                    {children}\n                </Flex>\n            </Flex>\n            <MenuDrawer isOpen={isOpen} onClose={onClose} />\n        </Box>\n    );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/Home/HomePostBox\";\nimport { MenuBar } from \"../organisms/Home/MenuBar\";\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n    const { children } = props;\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <Box w=\"100%\">\n            <MenuBar isOpen={isOpen} onClose={onClose}>\n                <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n            </MenuBar>\n        </Box>\n    );\n});\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import { Button, Input } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\nimport { Text, Box, Flex, Divider } from \"@chakra-ui/react\";\nimport { ChangeEvent, useState } from \"react\";\n\nimport { useAuth } from \"../../hooks/login/useAuth\";\n\nexport const Login = () => {\n    const [mailAddress, setMailAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const onChangeMailAddress = (e: ChangeEvent<HTMLInputElement>) =>\n        setMailAddress(e.target.value);\n\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) =>\n        setPassword(e.target.value);\n\n    const { login } = useAuth();\n    const onClickLogin = () => {\n        login(mailAddress, password);\n    };\n\n    return (\n        <Flex\n            bg=\"white\"\n            borderRadius={{ base: \"none\", sm: \"10px\" }}\n            px=\"30px\"\n            py=\"15px\"\n            shadow={{ base: \"none\", sm: \"md\" }}\n            w={{ base: \"100%\", sm: \"400px\" }}\n            h={{ base: \"100vh\", sm: \"500px\" }}\n            mt={{ base: \"none\", sm: \"10%\" }}\n            mx=\"auto\"\n            textAlign=\"center\"\n            flexDirection=\"column\"\n        >\n            <Text\n                as=\"h1\"\n                fontSize={{ base: \"40px\", sm: \"60px\" }}\n                bgGradient=\"linear(to-tl, green, #c4de71)\"\n                bgClip=\"text\"\n                fontWeight=\"bold\"\n                my=\"20px\"\n                ml=\"10px\"\n            >\n                Bebop!\n            </Text>\n            <Divider orientation=\"horizontal\" mt={5} mb={5} />\n            <Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n                <Box my=\"auto\" mt=\"10px\">\n                    <Box textAlign=\"start\">\n                        <Text ml={1} mb={1} fontSize=\"sm\">\n                            メールアドレス\n                        </Text>\n                        <Input\n                            type=\"email\"\n                            onChange={onChangeMailAddress}\n                            value={mailAddress}\n                            mb={5}\n                        />\n                    </Box>\n                    <Box textAlign=\"start\" mt=\"12px\">\n                        <Text ml={1} mb={1} fontSize=\"sm\">\n                            パスワード\n                        </Text>\n                        <Input\n                            type=\"password\"\n                            onChange={onChangePassword}\n                            value={password}\n                        />\n                    </Box>\n                </Box>\n\n                <Button\n                    onClick={onClickLogin}\n                    mt=\"auto\"\n                    mb=\"30px\"\n                    bgGradient=\"linear(to-tl, green, #c4de71)\"\n                    color=\"white\"\n                    disabled={mailAddress === \"\" || password === \"\"}\n                >\n                    ログイン\n                </Button>\n            </Flex>\n        </Flex>\n    );\n};\n","import axios from \"axios\";\nimport { useCallback } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { useMessage} from \"../message/useMessage\";\n\n\nexport const useAuth = () => {\n    const { showMessage } = useMessage();\n\n    const history = useHistory();\n\n    const login = useCallback( (mail: string, password: string ) =>\n    {\n        if ( mail === \"yuta\" && password === \"123\" )\n        {\n            showMessage( { title: \"ログインしました\", status: \"success\" } );\n            history.push(\"/home\")\n        } else\n        {\n            showMessage( { title: \"ユーザーが見つかりません\", status: \"error\" } );\n        }\n\n        // axios\n        //     .post(\"/api/login\")\n    }, [] );\n    return { login };\n}\n","import { Route, Switch } from \"react-router-dom\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\n\nexport const Router = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/login\">\n                <Login />\n            </Route>\n            <Route\n                path=\"/\"\n                render={({ match: { url } }) => (\n                    <Switch>\n                        {homeRoutes.map((route) => (\n                            <Route\n                                key={route.path}\n                                exact={route.exact}\n                                path={`${url}${route.path}`}\n                            >\n                                <HomeLayout>{route.children}</HomeLayout>\n                            </Route>\n                        ))}\n                    </Switch>\n                )}\n            />\n            <Route path=\"*\">\n                <Page404 />\n            </Route>\n        </Switch>\n    );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}