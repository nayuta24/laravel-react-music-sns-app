{"version":3,"sources":["components/atoms/button/Rating.tsx","theme/theme.ts","store/homeState.ts","components/molecules/post_card/CardMusicBox.tsx","components/molecules/post_card/CardComment.tsx","components/atoms/button/LikeButton.tsx","components/atoms/button/ShareButton.tsx","components/atoms/button/CommentButton.tsx","components/molecules/post_card/CardReactionButtons.tsx","components/molecules/UserInfoBox.tsx","components/atoms/frame/CardFrame.tsx","components/organisms/Home/post/PostCard.tsx","components/pages/home/Recent.tsx","components/pages/home/FollowPosts.tsx","components/pages/home/Popular.tsx","components/molecules/post_detail/ReactionButtons.tsx","components/pages/home/PostDetail.tsx","hooks/api/useApiPostDetail.ts","components/pages/Page404.tsx","router/HomeRoutes.tsx","components/atoms/button/HamburgerButton.tsx","components/atoms/typography/HomePostTitle.tsx","components/organisms/Home/HomePostBox.tsx","components/atoms/button/MenuButton.tsx","components/atoms/button/PrimaryButton.tsx","components/molecules/MenuContents.tsx","components/organisms/Home/MenuDrawer.tsx","components/organisms/Home/MenuBar.tsx","components/templates/HomeLayout.tsx","components/pages/Login.tsx","router/Router.tsx","App.tsx","index.tsx"],"names":["rating_stars","theme","extendTheme","styles","global","body","backgroundColor","color","homeState","atom","key","default","topic","CardMusicBox","props","img","title","artist","w","p","m","src","boxSize","mt","shadow","fontSize","fontWeight","CardComment","memo","h","py","my","Rating","rating","i","LikeButton","value","icon","size","bg","ml","ShareButton","CommentButton","Chat","CardReactionButtons","comment_val","like_val","mr","UserInfoBox","name","user_title","pl","flexDirection","alignItems","textAlign","CardFrame","children","mb","onClick","borderRadius","px","_hover","cursor","opacity","PostCard","post","user","track","review","reaction","id","history","useHistory","push","flexFlow","star","job","Recent","useSetRecoilState","setTopic","api_posts","Posts","map","obj","Object","assign","FollowPosts","Popular","ReactionButtons","justifyContent","mx","PostDetail","useState","failed","api_postDetail","setApiPostDetail","axios","get","then","res","data","useApiPostDetail","useParams","ratio","frameBorder","allow","album","release","orientation","pr","Page404","homeRoutes","path","exact","HamburgerButton","display","bgGradient","Hamburger","HomePostTitle","as","base","md","HomePostBox","onOpen","useRecoilValue","borderX","borderColor","borderBottom","ArrowBack","overflow","align","pt","MenuButton","colorScheme","variant","solid","_focus","boxShadow","PrimaryButton","MenuContents","to","bgClip","MenuDrawer","onClose","isOpen","placement","MenuBar","spacing","HomeLayout","useDisclosure","Login","Router","render","url","match","route","App","className","style","height","ReactDOM","StrictMode","document","getElementById"],"mappings":"+jNAMIA,E,mECMWC,EAVDC,YAAY,CACxBC,OAAQ,CACNC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,UACjBC,MAAO,gB,yBCEFC,EAAYC,YAAM,CAC3BC,IAAK,YACLC,QAAS,CAAEC,MAAM,Y,kCCFRC,EAA2B,SAACC,GACvC,IAAQC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAEpB,OACE,cAAC,IAAD,CAAMC,EAAE,MAAMC,EAAE,OAAhB,SACE,eAAC,IAAD,CAAKC,EAAE,OAAP,UACE,cAAC,IAAD,CAAOC,IAAKN,EAAKO,QAAQ,MAAMC,GAAG,MAAMC,OAAO,iBAC/C,eAAC,IAAD,CAAKD,GAAG,KAAR,UACE,cAAC,IAAD,CAAME,SAAS,KAAKC,WAAW,OAA/B,SACGV,IAEH,cAAC,IAAD,CAAMS,SAAS,KAAf,SAAqBR,aCZlBU,EAA0BC,gBAAK,SAACd,GAC3C,IAAQE,EAAgBF,EAAhBE,MAAOX,EAASS,EAATT,KAEf,OACE,eAAC,IAAD,CAAKwB,EAAE,MAAMC,GAAG,KAAKC,GAAG,OAAxB,UACE,cAAC,IAAD,CAAMN,SAAS,KAAKC,WAAW,OAA/B,SACGV,IAEH,cAAC,IAAD,CAAMS,SAAS,KAAKF,GAAG,KAAvB,SACGlB,UJTI2B,EAAqB,SAAClB,GAC/B,IAAQmB,EAAWnB,EAAXmB,OACRjC,EAAe,GAEf,IAAK,IAAIkC,EAAI,EAAGA,EAAI,EAAGA,IAEDlC,GAAdkC,EAAID,EAA0B,SAAwB,SAI9D,OACI,cAAC,IAAD,CAAMR,SAAS,OAAOlB,MAAM,SAA5B,SACKP,K,kBKZAmC,EAAyB,SAACrB,GACrC,IAAQsB,EAAUtB,EAAVsB,MACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,OACXC,KAAM,cAAC,IAAD,CAASC,KAAK,SACpBA,KAAK,MACL/B,MAAM,OACNgC,GAAG,SAEL,cAAC,IAAD,CAAMd,SAAS,OAAOlB,MAAM,OAAOiC,GAAG,MAAtC,SACGJ,Q,SCjBIK,EAAc,WACzB,OACE,cAAC,IAAD,CACE,aAAW,OACXJ,KAAM,cAAC,IAAD,IACNC,KAAK,MACL/B,MAAM,OACNgC,GAAG,U,SCFIG,EAA4B,SAAC5B,GACxC,IAAQsB,EAAUtB,EAAVsB,MACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,UACXC,KAAM,cAACM,EAAA,EAAD,IACNL,KAAK,MACL/B,MAAM,OACNgC,GAAG,SAEL,cAAC,IAAD,CAAMd,SAAS,OAAOlB,MAAM,OAAOiC,GAAG,MAAtC,SACGJ,QCTIQ,EAAkChB,gBAAK,SAACd,GACnD,IAAQ+B,EAA0B/B,EAA1B+B,YAAaC,EAAahC,EAAbgC,SAErB,OACE,eAAC,IAAD,CAAMvB,GAAG,KAAT,UACE,cAAC,IAAD,CAAML,EAAE,MAAM6B,GAAG,OAAjB,SACE,cAAC,EAAD,CAAeX,MAAOS,MAExB,cAAC,IAAD,CAAM3B,EAAE,MAAM6B,GAAG,OAAjB,SACE,cAAC,EAAD,CAAYX,MAAOU,MAErB,cAAC,IAAD,CAAM5B,EAAE,MAAMsB,GAAG,OAAjB,SACE,cAAC,EAAD,Y,SCbKQ,EAA0BpB,gBAAK,SAACd,GAC3C,IAAQC,EAAoCD,EAApCC,IAAKkC,EAA+BnC,EAA/BmC,KAAMC,EAAyBpC,EAAzBoC,WAAyBpC,EAAbqC,GAC/B,OACE,eAAC,IAAD,CAAMtB,EAAE,MAAMN,GAAG,OAAOiB,GAAG,OAA3B,UACE,cAAC,IAAD,CAAQD,GAAG,WAAWD,KAAK,KAAKS,GAAG,OAAOhB,GAAG,OAAOV,IAAKN,IACzD,eAAC,IAAD,CAAMqC,cAAc,SAASrB,GAAG,OAAOb,EAAE,QAAQmC,WAAW,QAA5D,UACE,cAAC,IAAD,CAAM5B,SAAS,KAAKP,EAAE,QAAQoC,UAAU,OAAxC,SACGL,IAEH,cAAC,IAAD,CAAMxB,SAAS,OAAOlB,MAAM,OAA5B,SACG2C,aCXEK,EAAwB3B,gBAAK,SAACd,GACzC,IAAQ0C,EAA0B1C,EAA1B0C,SAAUC,EAAgB3C,EAAhB2C,GAAIC,EAAY5C,EAAZ4C,QAEtB,OACE,cAAC,IAAD,CACExC,EAAE,MACFW,EAAE,OACFU,GAAG,QACHoB,aAAa,OACbC,GAAG,OACH9B,GAAG,OACHN,OAAO,KACPiC,GAAIA,EACJI,OAAQ,CAAEC,OAAQ,UAAWC,QAAS,IACtCL,QAASA,EAVX,SAYGF,OCTMQ,EAAuBpC,gBAAK,SAACd,GACtC,IAAQmD,EAASnD,EAATmD,KACAC,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,OAAQC,EAAiBJ,EAAjBI,SAAUC,EAAOL,EAAPK,GACjCC,EAAUC,cAKhB,OACI,eAACjB,EAAD,CAAWE,GAAG,OAAOC,QALL,WAChBa,EAAQE,KAAR,qBAA2BH,KAI3B,UAEI,cAAC,EAAD,CACIvD,IAAKoD,EAAMpD,IACXC,MAAOmD,EAAMnD,MACbC,OAAQkD,EAAMlD,SAElB,eAAC,IAAD,CACIC,EAAE,MACFW,EAAE,OACFkB,GAAG,OACH2B,SAAS,SACTpB,UAAU,OACVd,GAAG,KANP,UASI,cAACb,EAAD,CAAaX,MAAOoD,EAAOpD,MAAOX,KAAM+D,EAAO/D,OAC/C,eAAC,IAAD,CAAMkB,GAAG,OAAT,UACI,eAAC,IAAD,CAAKL,EAAE,MAAP,UAEI,cAAC,EAAD,CAAQe,OAAQmC,EAAOO,OAEvB,cAAC/B,EAAD,CACIC,YAAawB,EAASxB,YACtBC,SAAUuB,EAASvB,cAI3B,cAACE,EAAD,CACIjC,IAAKmD,EAAKnD,IACVkC,KAAMiB,EAAKjB,KACXC,WAAYgB,EAAKU,IACjBzB,GAAG,mB,SC9Cd0B,EAASjD,gBAAK,WAENkD,YAAkBtE,EACnCuE,CAAS,CAAEnE,MAAO,WAKlB,IAAMoE,EAAkCC,EAExC,OACI,cAAC,IAAD,UAEKD,EAAUE,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,UAEI,cAACnB,EAAD,CAAUC,KAAMmB,OAAOC,OAAOF,MAFxBA,EAAIb,YCrBjBgB,EAAc1D,gBAAK,WAI5B,OAHiBkD,YAAkBtE,EACnCuE,CAAS,CAAEnE,MAAO,WAEX,2BCJE2E,EAAU3D,gBAAK,WAG1B,OAFiBkD,YAAkBtE,EACnCuE,CAAS,CAAEnE,MAAO,YACX,2B,2BCII4E,EAA8B5D,gBAAK,SAACd,GAC/C,IAAQ+B,EAA0B/B,EAA1B+B,YAAaC,EAAahC,EAAbgC,SACrB,OACE,eAAC,IAAD,CAAM2C,eAAe,SAASvE,EAAE,MAAMK,GAAI,EAA1C,UACE,cAAC,IAAD,CAAKwB,GAAG,OAAR,SACE,cAAC,EAAD,CAAeX,MAAOS,MAExB,cAAC,IAAD,CAAK6C,GAAG,OAAR,SACE,cAAC,EAAD,CAAYtD,MAAOU,MAErB,cAAC,IAAD,CAAKN,GAAG,OAAR,SACE,cAAC,EAAD,Y,kCCJKmD,EAAyB,SAAC7E,GACnC,YAAWA,GACMgE,YAAkBtE,EACnCuE,CAAS,CAAEnE,MAAO,WAClB,IAEA,ECnB4B,SAAC0D,GAC7B,MAA6CsB,mBAAyBC,GAAtE,mBAAQC,EAAR,KAAwBC,EAAxB,KAMA,OAJAC,IACKC,IADL,qBACsC3B,IACjC4B,MAAK,SAACC,GAAD,OAASJ,EAAiBI,EAAIC,SAEjC,CAAEN,kBDYkBO,CAFZC,cAAPhC,IAEAwB,EAAR,EAAQA,eAIR,OACI,eAAC,IAAD,CAAKJ,GAAI,EAAT,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAaa,MAAO,EAAOrF,EAAE,QAA7B,SACI,wBACIG,IAAG,+CAA0CyE,EAAe3B,MAAMG,IAClEkC,YAAY,IACZC,MAAM,sBAGd,eAAC,IAAD,CAAMpD,WAAW,QAAQqB,SAAS,SAASlC,GAAI,EAAGjB,GAAG,OAArD,UACI,cAAC,IAAD,CAAMG,WAAW,OAAOD,SAAS,KAAjC,SACKqE,EAAe3B,MAAMnD,QAE1B,eAAC,IAAD,CAAMS,SAAS,KAAf,uDACYqE,EAAe3B,MAAMuC,SAEjC,eAAC,IAAD,CAAMjF,SAAS,KAAf,uDACYqE,EAAe3B,MAAMlD,UAEjC,eAAC,IAAD,CAAMQ,SAAS,KAAf,2CACUqE,EAAe3B,MAAMwC,iBAIvC,cAAC,IAAD,CAASC,YAAY,aAAa1F,EAAE,OAAOK,GAAI,EAAGkC,GAAG,MACrD,eAAC,IAAD,CAAMH,UAAU,OAAhB,UACI,cAAC,IAAD,CAAKP,GAAI,EAAT,SACI,cAACC,EAAD,CACIC,KAAM6C,EAAe5B,KAAKjB,KAC1BC,WAAY4C,EAAe5B,KAAKU,IAChC7D,IAAK+E,EAAe5B,KAAKnD,QAGjC,cAAC,EAAD,CAAQkB,OAAQ6D,EAAe1B,OAAOO,UAE1C,eAAC,IAAD,CAAKpD,GAAI,EAAG+B,UAAU,OAAtB,UACI,cAAC,IAAD,CAAM7B,SAAS,KAAKC,WAAW,OAA/B,SACKoE,EAAe1B,OAAOpD,QAE3B,cAAC,IAAD,CAAMS,SAAS,KAAKoF,GAAI,GAAItF,GAAI,EAAhC,SACKuE,EAAe1B,OAAO/D,UAG/B,cAACmF,EAAD,CACI3C,YAAaiD,EAAezB,SAASxB,YACrCC,SAAUgD,EAAezB,SAASvB,WAEtC,cAAC,IAAD,CAAS8D,YAAY,aAAa1F,EAAE,OAAOK,GAAI,EAAGkC,GAAG,UE5EpDqD,EAAU,WACrB,OAAO,0CCKIC,EAAa,CACxB,CACEC,KAAM,IACNC,OAAO,EACPzD,SAAU,cAACqB,EAAD,KAEZ,CACEmC,KAAM,eACNC,OAAO,EACPzD,SAAU,cAAC8B,EAAD,KAEZ,CACE0B,KAAM,WACNC,OAAO,EACPzD,SAAU,cAAC+B,EAAD,KAEZ,CACEyB,KAAM,YACNC,OAAO,EACPzD,SAAU,cAAC,EAAD,KAEZ,CACEwD,KAAM,IACNC,OAAO,EACPzD,SAAU,cAAC,EAAD,M,2BClBD0D,EAA8BtF,gBAAK,SAACd,GAC/C,IAAQqG,EAA4DrG,EAA5DqG,QAASzD,EAAmD5C,EAAnD4C,QAAjB,EAAoE5C,EAA1C0B,UAA1B,MAA+B,OAA/B,IAAoE1B,EAA7BiB,UAAvC,MAA4C,OAA5C,IAAoEjB,EAAhBwB,YAApD,MAA2D,KAA3D,EACA,OACE,cAAC,IAAD,CACE8E,WAAW,gCACX7G,MAAM,QACN,aAAW,YACX8B,KAAM,cAACgF,EAAA,EAAD,IACN/E,KAAMA,EACNE,GAAIA,EACJT,GAAIA,EACJoF,QAASA,EACTzD,QAASA,OCjBF4D,EAA4B,SAACxG,GACxC,IAAQ0C,EAAa1C,EAAb0C,SACR,OACE,cAAC,IAAD,CACE+D,GAAG,KACHhH,MAAM,WACNwC,GAAG,OACHxB,GAAG,MACHE,SAAU,CAAE+F,KAAM,OAAQC,GAAI,SALhC,SAOGjE,KCFMkE,GAA0B9F,gBAAK,SAACd,GACzC,IAAQ0C,EAAqB1C,EAArB0C,SAAUmE,EAAW7G,EAAX6G,OACV/G,EAAUgH,YAAepH,GAAzBI,MACF2D,EAAUC,cAMhB,OACI,eAAC,IAAD,CACItD,EAAG,CAAEsG,KAAM,OAAQC,GAAI,QACvB5F,EAAE,QACFgG,QAAS,CAAEL,KAAM,OAAQC,GAAI,OAC7BK,YAAa,CAAEL,GAAI,YACnBrE,cAAc,SALlB,UAQI,eAAC,IAAD,CACImE,GAAG,MACHrG,EAAE,OACF6G,aAAa,MACbD,YAAY,WAEZlE,GAAG,KANP,UASI,cAAC,IAAD,CAAK7B,GAAG,OAAOF,EAAE,KAAjB,SACe,WAAVjB,EACG,cAAC,EAAD,6CACU,WAAVA,EACA,cAAC,EAAD,uCACU,YAAVA,EACA,cAAC,EAAD,6CAEA,eAAC,IAAD,WACI,cAAC,IAAD,CACIyB,KAAM,cAAC2F,EAAA,EAAD,IACN,aAAW,YACXzF,GAAG,OACHQ,GAAI,EACJtB,SAAS,KACTiC,QArCT,WACfa,EAAQE,KAAK,YAsCO,cAAC,EAAD,4CAKZ,cAACyC,EAAD,CACIC,QAAS,CAAEK,KAAM,SAAUC,GAAI,QAC/B/D,QAASiE,EACTnF,GAAG,OACHT,GAAG,OACHO,KAAK,UAIb,cAAC,IAAD,CACIT,EAAE,QACFX,EAAE,OACF+G,SAAS,OACT7E,cAAc,SACd8E,MAAM,SACNC,GAAG,KANP,SAQK3E,U,mBCxEJ4E,GAAyBxG,gBAAK,SAACd,GAC1C,IAAQ0C,EAAgC1C,EAAhC0C,SAAoBE,GAAY5C,EAAtBI,EAAsBJ,EAAZ4C,SAC5B,OACE,cAAC,KAAD,CACE2E,YAAY,OACZC,QAAQ,QACRC,MAAM,OACNrH,EAAE,IACF2C,OAAQ,CAAEC,OAAQ,WAClB0E,OAAQ,CAAEC,UAAW,QACrB/E,QAASA,EAPX,SASGF,OCbMkF,GAA4B,SAAC5H,GACxC,IAAQ0C,EAAgB1C,EAAhB0C,SAAUtC,EAAMJ,EAANI,EAClB,OACE,cAAC,KAAD,CACEX,MAAM,QACN6G,WAAW,gCACXlG,EAAGA,EACH2C,OAAQ,CAAEE,QAAS,GAAKD,OAAQ,WAJlC,SAMGN,KCTMmF,GAAe/G,gBAAK,WAC/B,IAAM2C,EAAUC,cAUhB,OACE,eAAC,IAAD,CAAME,SAAS,SAASlC,GAAG,OAAOa,WAAW,QAAQwD,GAAG,OAAxD,UACE,cAAC,KAAD,CAAM+B,GAAG,QAAT,SACE,cAAC,IAAD,CACErB,GAAG,KACH9F,SAAS,OACT2F,WAAW,gCACXyB,OAAO,OACPnH,WAAW,OACXK,GAAG,OACHS,GAAG,OAPL,sBAaF,cAAC4F,GAAD,CAAYlH,EAAE,OAAOwC,QAzBR,WACfa,EAAQE,KAAK,UAwBX,4CAGA,cAAC2D,GAAD,CAAYlH,EAAE,OAAOwC,QAzBJ,WACnBa,EAAQE,KAAK,sBAwBX,sCAGA,cAAC2D,GAAD,CAAYlH,EAAE,OAAOwC,QAzBP,WAChBa,EAAQE,KAAK,kBAwBX,4CAGA,cAAC,IAAD,CAAMlD,GAAG,QAAQiB,GAAG,OAApB,SACE,cAAC,GAAD,CAAetB,EAAE,QAAjB,4BAGF,cAAC,IAAD,CAAKK,GAAG,OAAOL,EAAE,OAAjB,SACE,cAAC8B,EAAD,CACEjC,IAAI,0CACJkC,KAAK,4BACLC,WAAW,eACXC,GAAG,iB,mBCvCA2F,GAAyBlH,gBAAK,SAACd,GAC1C,IAAQiI,EAAoBjI,EAApBiI,QAASC,EAAWlI,EAAXkI,OACjB,OACE,cAAC,KAAD,CAAQC,UAAU,OAAO3G,KAAK,KAAKyG,QAASA,EAASC,OAAQA,EAA7D,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAY7H,EAAG,EAAGoB,GAAG,WAArB,SACE,cAACoG,GAAD,eCVCO,GAAsBtH,gBAAK,SAACd,GACvC,IAAQ0C,EAA8B1C,EAA9B0C,SAAUwF,EAAoBlI,EAApBkI,OAAQD,EAAYjI,EAAZiI,QAE1B,OACE,eAAC,IAAD,WAEE,eAAC,IAAD,CAAMI,QAAQ,OAAd,UAEE,cAAC,IAAD,CACEjI,EAAE,MACFW,EAAE,QACFsF,QAAS,CAAEK,KAAM,OAAQC,GAAI,UAC7BZ,GAAG,OAJL,SAME,cAAC8B,GAAD,MAEDnF,KAEH,cAACsF,GAAD,CAAYE,OAAQA,EAAQD,QAASA,UCnB9BK,GAAyBxH,gBAAK,SAACd,GAC1C,IAAQ0C,EAAa1C,EAAb0C,SACR,EAAoC6F,cAA5BL,EAAR,EAAQA,OAAQrB,EAAhB,EAAgBA,OAAQoB,EAAxB,EAAwBA,QAExB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKrD,GAAG,OAAR,SACE,cAACwD,GAAD,CAASF,OAAQA,EAAQD,QAASA,EAAlC,SACE,cAACrB,GAAD,CAAaC,OAAQA,EAArB,SAA8BnE,aCf3B8F,GAAQ,WACnB,IAAM/E,EAAUC,cAIhB,OACE,qCACE,4EACA,cAAC,KAAD,CAAQd,QANI,WACda,EAAQE,KAAK,UAKX,0CCJO8E,GAAS,WACpB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CACEA,KAAK,QACLwC,OAAQ,gBAAYC,EAAZ,EAAGC,MAASD,IAAZ,OACN,cAAC,IAAD,UACG1C,EAAW7B,KAAI,SAACyE,GAAD,OACd,cAAC,IAAD,CAEE1C,MAAO0C,EAAM1C,MACbD,KAAI,UAAKyC,GAAL,OAAWE,EAAM3C,MAHvB,SAKE,cAACoC,GAAD,UAAaO,EAAMnG,YAJdmG,EAAM3C,cAUrB,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,UCRO4C,OAdf,WACE,OACE,qBAAKC,UAAU,MAAMC,MAAO,CAAEC,OAAQ,QAAtC,SACE,cAAC,KAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAgB9J,MAAOA,EAAvB,SACE,cAAC,GAAD,aCTZ+J,IAASR,OACP,cAAC,IAAMS,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56844058.chunk.js","sourcesContent":["import { Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n    rating: number;\n};\nlet rating_stars: string;\n\nexport const Rating: VFC<Props> = (props) => {\n    const { rating } = props;\n    rating_stars = \"\";\n\n    for (let i = 0; i < 5; i++) {\n        {\n            i < rating ? (rating_stars += \"★\") : (rating_stars += \"☆\");\n        }\n    }\n\n    return (\n        <Text fontSize=\"30px\" color=\"orange\">\n            {rating_stars}\n        </Text>\n    );\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.50\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\nexport default theme;\n","import { atom } from \"recoil\";\n\ntype HomeStateType = {\n    key: \"string\",\n    default: {\n        topic:\"recent\"|\"follow\"|\"popular\"|\"detail\"\n    }\n}\n\nexport const homeState = atom( {\n    key: \"homeState\",\n    default: { topic:\"recent\" }\n} );\n","import { Flex, Image, Box, Text } from \"@chakra-ui/react\";\nimport { VFC } from \"react\";\n\ntype Props = {\n  img: string;\n  title: string;\n  artist: string;\n};\n\nexport const CardMusicBox: VFC<Props> = (props) => {\n  const { img, title, artist } = props;\n\n  return (\n    <Flex w=\"30%\" p=\"auto\">\n      <Box m=\"auto\">\n        <Image src={img} boxSize=\"150\" mt=\"15%\" shadow=\"5px 5px #EEE\" />\n        <Box mt=\"5%\">\n          <Text fontSize=\"md\" fontWeight=\"bold\">\n            {title}\n          </Text>\n          <Text fontSize=\"xs\">{artist}</Text>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n","import { memo, VFC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  title: string;\n  body: string;\n};\n\nexport const CardComment: VFC<Props> = memo((props) => {\n  const { title, body } = props;\n\n  return (\n    <Box h=\"60%\" py=\"1%\" my=\"auto\">\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        {title}\n      </Text>\n      <Text fontSize=\"sm\" mt=\"2%\">\n        {body}\n      </Text>\n    </Box>\n  );\n});\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { GoHeart } from \"react-icons/go\";\n\ntype Props = {\n  value: number;\n};\n\nexport const LikeButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"like\"\n        icon={<GoHeart size=\"27px\" />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { IconButton } from \"@chakra-ui/react\";\nimport { BsShareFill } from \"react-icons/bs\";\n\nexport const ShareButton = () => {\n  return (\n    <IconButton\n      aria-label=\"like\"\n      icon={<BsShareFill />}\n      size=\"0px\"\n      color=\"gray\"\n      bg=\"none\"\n    />\n  );\n};\n","import { VFC } from \"react\";\nimport { Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport { ChatIcon } from \"@chakra-ui/icons\";\n\ntype Props = {\n  value: number;\n};\n\nexport const CommentButton: VFC<Props> = (props) => {\n  const { value } = props;\n  return (\n    <Flex>\n      <IconButton\n        aria-label=\"comment\"\n        icon={<ChatIcon />}\n        size=\"0px\"\n        color=\"gray\"\n        bg=\"none\"\n      />\n      <Text fontSize=\"15px\" color=\"gray\" ml=\"5px\">\n        {value}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const CardReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n\n  return (\n    <Flex mt=\"2%\">\n      <Flex w=\"30%\" mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Flex>\n      <Flex w=\"30%\" mr=\"auto\">\n        <LikeButton value={like_val} />\n      </Flex>\n      <Flex w=\"30%\" ml=\"auto\">\n        <ShareButton />\n      </Flex>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Flex, Avatar, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  img: string;\n  name: string;\n  user_title: string;\n  pl?: string;\n};\n\nexport const UserInfoBox: VFC<Props> = memo((props) => {\n  const { img, name, user_title, pl = \"0\" } = props;\n  return (\n    <Flex h=\"70%\" mt=\"auto\" ml=\"auto\">\n      <Avatar bg=\"gray.400\" size=\"sm\" mr=\"10px\" my=\"auto\" src={img}></Avatar>\n      <Flex flexDirection=\"column\" my=\"auto\" w=\"100px\" alignItems=\"start\">\n        <Text fontSize=\"sm\" w=\"100px\" textAlign=\"left\">\n          {name}\n        </Text>\n        <Text fontSize=\"13px\" color=\"gray\">\n          {user_title}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n});\n","import { Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  mb: string;\n  onClick: () => void;\n};\n\nexport const CardFrame: VFC<Props> = memo((props) => {\n  const { children, mb, onClick } = props;\n\n  return (\n    <Flex\n      w=\"90%\"\n      h=\"33vh\"\n      bg=\"white\"\n      borderRadius=\"10px\"\n      px=\"30px\"\n      py=\"15px\"\n      shadow=\"md\"\n      mb={mb}\n      _hover={{ cursor: \"pointer\", opacity: 0.8 }}\n      onClick={onClick}\n    >\n      {children}\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\nimport { CardMusicBox } from \"../../../molecules/post_card/CardMusicBox\";\nimport { CardComment } from \"../../../molecules/post_card/CardComment\";\nimport { Rating } from \"../../../atoms/button/Rating\";\nimport { CardReactionButtons } from \"../../../molecules/post_card/CardReactionButtons\";\nimport { UserInfoBox } from \"../../../molecules/UserInfoBox\";\nimport { CardFrame } from \"../../../atoms/frame/CardFrame\";\nimport { useHistory } from \"react-router\";\nimport { PostsDataType } from \"../../../../type/api/PostsDataType\";\n\ntype Props = {\n    post: PostsDataType;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n    const { post } = props;\n    const { user, track, review, reaction, id } = post;\n    const history = useHistory();\n    const onClickCard = () => {\n        history.push(`/home/post/${id}`);\n    };\n\n    return (\n        <CardFrame mb=\"1.5%\" onClick={onClickCard}>\n            {/* 曲情報 */}\n            <CardMusicBox\n                img={track.img}\n                title={track.title}\n                artist={track.artist}\n            />\n            <Flex\n                w=\"70%\"\n                h=\"100%\"\n                mr=\"auto\"\n                flexFlow=\"column\"\n                textAlign=\"left\"\n                ml=\"5%\"\n            >\n                {/* コメント */}\n                <CardComment title={review.title} body={review.body} />\n                <Flex mt=\"auto\">\n                    <Box w=\"50%\">\n                        {/* 評価 */}\n                        <Rating rating={review.star} />\n                        {/* 投稿へのコメント、いいねなど */}\n                        <CardReactionButtons\n                            comment_val={reaction.comment_val}\n                            like_val={reaction.like_val}\n                        />\n                    </Box>\n                    {/* コメントしたユーザー */}\n                    <UserInfoBox\n                        img={user.img}\n                        name={user.name}\n                        user_title={user.job}\n                        pl=\"8%\"\n                    />\n                </Flex>\n            </Flex>\n        </CardFrame>\n    );\n});\n","import { memo, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { homeState } from \"../../../store/homeState\";\nimport { PostCard } from \"../../organisms/Home/post/PostCard\";\nimport { PostsDataType } from \"../../../type/api/PostsDataType\";\nimport Posts from \"../../../test_json/allPosts.json\";\nimport { useApiPosts } from \"../../../hooks/api/useApiPosts\";\n\nexport const Recent = memo(() => {\n    // グローバルStateを変更、それをもとにヘッダーを変更とapiリクエストをする\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"recent\" });\n    /* ↓本番環境用 */\n    // const { api_posts } = useApiPosts(\"recent\");\n\n    /* ↓ローカル環境でのテスト用（test_jsonを使用） */\n    const api_posts: Array<PostsDataType> = Posts;\n\n    return (\n        <Box>\n            {/* jsonを引っ張り、map関数でカードを繰り返し描画 */}\n            {api_posts.map((obj) => (\n                <Box key={obj.id}>\n                    {/* Object.assign(オブジェクト)で、オブジェクトのスプレッドを実現 */}\n                    <PostCard post={Object.assign(obj)} />\n                </Box>\n            ))}\n        </Box>\n    );\n});\n","import { memo } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { homeState } from \"../../../store/homeState\";\n\nexport const FollowPosts = memo(() => {\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"follow\" });\n\n    return <div></div>;\n});\n","import { memo } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { homeState } from \"../../../store/homeState\";\n\nexport const Popular = memo(() => {\n  const setTopic = useSetRecoilState(homeState);\n  setTopic({ topic: \"popular\" });\n  return <div></div>;\n});\n","import { memo, VFC } from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport { CommentButton } from \"../../atoms/button/CommentButton\";\nimport { LikeButton } from \"../../atoms/button/LikeButton\";\nimport { ShareButton } from \"../../atoms/button/ShareButton\";\n\ntype Props = {\n  comment_val: number;\n  like_val: number;\n};\n\nexport const ReactionButtons: VFC<Props> = memo((props) => {\n  const { comment_val, like_val } = props;\n  return (\n    <Flex justifyContent=\"center\" w=\"80%\" mt={5}>\n      <Box mr=\"auto\">\n        <CommentButton value={comment_val} />\n      </Box>\n      <Box mx=\"auto\">\n        <LikeButton value={like_val} />\n      </Box>\n      <Box ml=\"auto\">\n        <ShareButton />\n      </Box>\n    </Flex>\n  );\n});\n","import { VFC } from \"react\";\nimport { useParams } from \"react-router\";\nimport { AspectRatio, Flex, Text, Box, Divider } from \"@chakra-ui/react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { UserInfoBox } from \"../../molecules/UserInfoBox\";\nimport { Rating } from \"../../atoms/button/Rating\";\nimport { homeState } from \"../../../store/homeState\";\nimport { ReactionButtons } from \"../../molecules/post_detail/ReactionButtons\";\nimport { useApiPostDetail } from \"../../../hooks/api/useApiPostDetail\";\nimport json_postDetail from \"../../../test_json/postDetail.json\";\n\ntype Param = {\n    id: string;\n};\n\ntype Props = {};\n\nexport const PostDetail: VFC<Props> = (props) => {\n    const {} = props;\n    const setTopic = useSetRecoilState(homeState);\n    setTopic({ topic: \"detail\" });\n    const { id } = useParams<Param>();\n    /* ↓本番環境用 */\n    const { api_postDetail } = useApiPostDetail(id);\n    /* ローカルでのテスト用*/\n    // const api_postDetail = json_postDetail;\n\n    return (\n        <Box mx={5}>\n            <Flex>\n                <AspectRatio ratio={1 / 1} w=\"300px\">\n                    <iframe\n                        src={`https://open.spotify.com/embed/track/${api_postDetail.track.id}`}\n                        frameBorder=\"0\"\n                        allow=\"encrypted-media\"\n                    />\n                </AspectRatio>\n                <Flex alignItems=\"start\" flexFlow=\"column\" ml={5} mt=\"auto\">\n                    <Text fontWeight=\"bold\" fontSize=\"md\">\n                        {api_postDetail.track.title}\n                    </Text>\n                    <Text fontSize=\"sm\">\n                        収録アルバム：{api_postDetail.track.album}\n                    </Text>\n                    <Text fontSize=\"sm\">\n                        アーティスト：{api_postDetail.track.artist}\n                    </Text>\n                    <Text fontSize=\"sm\">\n                        リリース：{api_postDetail.track.release}\n                    </Text>\n                </Flex>\n            </Flex>\n            <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n            <Flex textAlign=\"left\">\n                <Box mr={2}>\n                    <UserInfoBox\n                        name={api_postDetail.user.name}\n                        user_title={api_postDetail.user.job}\n                        img={api_postDetail.user.img}\n                    />\n                </Box>\n                <Rating rating={api_postDetail.review.star} />\n            </Flex>\n            <Box mt={5} textAlign=\"left\">\n                <Text fontSize=\"lg\" fontWeight=\"bold\">\n                    {api_postDetail.review.title}\n                </Text>\n                <Text fontSize=\"sm\" pr={10} mt={2}>\n                    {api_postDetail.review.body}\n                </Text>\n            </Box>\n            <ReactionButtons\n                comment_val={api_postDetail.reaction.comment_val}\n                like_val={api_postDetail.reaction.like_val}\n            />\n            <Divider orientation=\"horizontal\" w=\"100%\" mt={5} mb=\"5\" />\n        </Box>\n    );\n};\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { PostsDataType } from \"../../type/api/PostsDataType\";\nimport  failed  from \"../../test_json/postDetail.json\";\n\nexport const useApiPostDetail = (id: string) => {\n    const [ api_postDetail, setApiPostDetail ] = useState<PostsDataType>( failed );\n\n    axios\n        .get<PostsDataType>(`/api/posts/${id}`)\n        .then((res) => setApiPostDetail(res.data));\n\n    return { api_postDetail };\n};\n","export const Page404 = () => {\n  return <h1>Page404</h1>;\n};\n","import { Recent } from \"../components/pages/home/Recent\";\nimport { FollowPosts } from \"../components/pages/home/FollowPosts\";\nimport { Popular } from \"../components/pages/home/Popular\";\nimport { PostDetail } from \"../components/pages/home/PostDetail\";\nimport { Page404 } from \"../components/pages/Page404\";\n\nexport const homeRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    children: <Recent />,\n  },\n  {\n    path: \"/follow_post\",\n    exact: false,\n    children: <FollowPosts />,\n  },\n  {\n    path: \"/popular\",\n    exact: false,\n    children: <Popular />,\n  },\n  {\n    path: \"/post/:id\",\n    exact: false,\n    children: <PostDetail />,\n  },\n  {\n    path: \"*\",\n    exact: false,\n    children: <Page404 />,\n  },\n];\n","import { IconButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  display?: {};\n  onClick: () => void;\n  size?: string;\n  ml?: string;\n  my?: string;\n};\n\nexport const HamburgerButton: VFC<Props> = memo((props) => {\n  const { display, onClick, ml = \"none\", my = \"none\", size = \"md\" } = props;\n  return (\n    <IconButton\n      bgGradient=\"linear(to-tl, green, #c4de71)\"\n      color=\"white\"\n      aria-label=\"Open menu\"\n      icon={<HamburgerIcon />}\n      size={size}\n      ml={ml}\n      my={my}\n      display={display}\n      onClick={onClick}\n    />\n  );\n});\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomePostTitle: VFC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <Text\n      as=\"h1\"\n      color=\"gray.500\"\n      mr=\"auto\"\n      mt=\"8px\"\n      fontSize={{ base: \"18px\", md: \" 23px\" }}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { Flex, Box, IconButton } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { HamburgerButton } from \"../../atoms/button/HamburgerButton\";\nimport { homeState } from \"../../../store/homeState\";\nimport { HomePostTitle } from \"../../atoms/typography/HomePostTitle\";\nimport { useHistory } from \"react-router\";\n\ntype Props = {\n    children: ReactNode;\n    onOpen: () => void;\n};\n\nexport const HomePostBox: VFC<Props> = memo((props) => {\n    const { children, onOpen } = props;\n    const { topic } = useRecoilValue(homeState);\n    const history = useHistory();\n\n    const onBackHome = () => {\n        history.push(\"/home\");\n    };\n\n    return (\n        <Flex\n            w={{ base: \"100%\", md: \"80vh\" }}\n            h=\"100vh\"\n            borderX={{ base: \"none\", md: \"1px\" }}\n            borderColor={{ md: \"gray.200\" }}\n            flexDirection=\"column\"\n        >\n            {/* ヘッダー */}\n            <Flex\n                as=\"nav\"\n                w=\"100%\"\n                borderBottom=\"1px\"\n                borderColor=\"gray.200\"\n                // textAlign=\"left\"\n                px=\"3%\"\n            >\n                {/* ページタイトル */}\n                <Box my=\"1.5%\" h=\"5%\">\n                    {topic === \"recent\" ? (\n                        <HomePostTitle>最新の投稿</HomePostTitle>\n                    ) : topic === \"follow\" ? (\n                        <HomePostTitle>フォロー</HomePostTitle>\n                    ) : topic === \"popular\" ? (\n                        <HomePostTitle>人気の投稿</HomePostTitle>\n                    ) : (\n                        <Flex>\n                            <IconButton\n                                icon={<ArrowBackIcon />}\n                                aria-label=\"Back home\"\n                                bg=\"none\"\n                                mr={2}\n                                fontSize=\"xl\"\n                                onClick={onBackHome}\n                            />\n                            <HomePostTitle>スレッド</HomePostTitle>\n                        </Flex>\n                    )}\n                </Box>\n                {/* メニューボタン（スマホサイズのときのみ出現） */}\n                <HamburgerButton\n                    display={{ base: \"inline\", md: \"none\" }}\n                    onClick={onOpen}\n                    ml=\"auto\"\n                    my=\"auto\"\n                    size=\"sm\"\n                />\n            </Flex>\n            {/* 投稿一覧部分 */}\n            <Box\n                h=\"100vh\"\n                w=\"100%\"\n                overflow=\"auto\"\n                flexDirection=\"column\"\n                align=\"center\"\n                pt=\"2%\"\n            >\n                {children}\n            </Box>\n        </Flex>\n    );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  w?: string;\n  onClick: () => void;\n};\n\nexport const MenuButton: VFC<Props> = memo((props) => {\n  const { children, w = \"md\", onClick } = props;\n  return (\n    <Button\n      colorScheme=\"gray\"\n      variant=\"ghost\"\n      solid=\"none\"\n      w=\"w\"\n      _hover={{ cursor: \"pointer\" }}\n      _focus={{ boxShadow: \"none\" }}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  w: string;\n};\n\nexport const PrimaryButton: VFC<Props> = (props) => {\n  const { children, w } = props;\n  return (\n    <Button\n      color=\"white\"\n      bgGradient=\"linear(to-tl, green, #c4de71)\"\n      w={w}\n      _hover={{ opacity: 0.8, cursor: \"pointer\" }}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { memo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { MenuButton } from \"../atoms/button/MenuButton\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\nimport { UserInfoBox } from \"./UserInfoBox\";\n\nexport const MenuContents = memo(() => {\n  const history = useHistory();\n  const onRecent = () => {\n    history.push(\"/home\");\n  };\n  const onFollowPost = () => {\n    history.push(\"/home/follow_post\");\n  };\n  const onPopular = () => {\n    history.push(\"/home/popular\");\n  };\n  return (\n    <Flex flexFlow=\"column\" ml=\"20px\" alignItems=\"start\" pr=\"80px\">\n      <Link to=\"/home\">\n        <Text\n          as=\"h1\"\n          fontSize=\"40px\"\n          bgGradient=\"linear(to-tl, green, #c4de71)\"\n          bgClip=\"text\"\n          fontWeight=\"bold\"\n          my=\"20px\"\n          ml=\"10px\"\n        >\n          Bebop!\n        </Text>\n      </Link>\n\n      <MenuButton w=\"100%\" onClick={onRecent}>\n        最新の投稿\n      </MenuButton>\n      <MenuButton w=\"100%\" onClick={onFollowPost}>\n        フォロー\n      </MenuButton>\n      <MenuButton w=\"100%\" onClick={onPopular}>\n        人気の投稿\n      </MenuButton>\n      <Flex mt=\"300px\" ml=\"30px\">\n        <PrimaryButton w=\"130px\">投稿</PrimaryButton>\n      </Flex>\n\n      <Box mt=\"100%\" w=\"100%\">\n        <UserInfoBox\n          img=\"https://source.unsplash.com/brFsZ7qszSY\"\n          name=\"中村 優太\"\n          user_title=\"学生\"\n          pl=\"30px\"\n        />\n      </Box>\n    </Flex>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n} from \"@chakra-ui/react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.100\">\n            <MenuContents />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { MenuContents } from \"../../molecules/MenuContents\";\nimport { MenuDrawer } from \"./MenuDrawer\";\n\ntype Props = {\n  children: ReactNode;\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport const MenuBar: VFC<Props> = memo((props) => {\n  const { children, isOpen, onClose } = props;\n\n  return (\n    <Box>\n      {/* 要素を横並びに */}\n      <Flex spacing=\"none\">\n        {/* メニューバー */}\n        <Box\n          w=\"22%\"\n          h=\"100vh\"\n          display={{ base: \"none\", md: \"inline\" }}\n          pr=\"auto\"\n        >\n          <MenuContents />\n        </Box>\n        {children}\n      </Flex>\n      <MenuDrawer isOpen={isOpen} onClose={onClose} />\n    </Box>\n  );\n});\n","import { Box, Flex, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, ReactNode, VFC } from \"react\";\n\nimport { HomePostBox } from \"../organisms/Home/HomePostBox\";\nimport { MenuBar } from \"../organisms/Home/MenuBar\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HomeLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Flex>\n      <Box mx=\"auto\">\n        <MenuBar isOpen={isOpen} onClose={onClose}>\n          <HomePostBox onOpen={onOpen}>{children}</HomePostBox>\n        </MenuBar>\n      </Box>\n    </Flex>\n  );\n});\n","import { Button } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\n\nexport const Login = () => {\n  const history = useHistory();\n  const onLogin = () => {\n    history.push(\"/home\");\n  };\n  return (\n    <>\n      <h1>ログインページ</h1>\n      <Button onClick={onLogin}>ログイン</Button>\n    </>\n  );\n};\n","import { Route, Switch } from \"react-router-dom\";\n\nimport { homeRoutes } from \"./HomeRoutes\";\nimport { HomeLayout } from \"../components/templates/HomeLayout\";\nimport { Page404 } from \"../components/pages/Page404\";\nimport { Login } from \"../components/pages/Login\";\n\nexport const Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login />\n      </Route>\n      <Route\n        path=\"/home\"\n        render={({ match: { url } }) => (\n          <Switch>\n            {homeRoutes.map((route) => (\n              <Route\n                key={route.path}\n                exact={route.exact}\n                path={`${url}${route.path}`}\n              >\n                <HomeLayout>{route.children}</HomeLayout>\n              </Route>\n            ))}\n          </Switch>\n        )}\n      />\n      <Route path=\"*\">\n        <Page404 />\n      </Route>\n    </Switch>\n  );\n};\n","import \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      <BrowserRouter>\n        <RecoilRoot>\n          <ChakraProvider theme={theme}>\n            <Router />\n          </ChakraProvider>\n        </RecoilRoot>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}